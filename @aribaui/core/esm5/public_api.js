/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @license
 * Copyright 2017 SAP Ariba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 */
export { AppConfig, makeConfig } from './config/app-config';
export { Environment } from './config/environment';
export { Resource } from './domain/resource.service';
export { DefaultRestBuilder } from './domain/url/builder';
export { isEntity, isValue } from './domain/domain-model';
export { ActionSegment, RestAction, ResourceSegment, RestSegmentType, UrlSegment, ContextSegment, HostSegment, IdentifierSegment, OfParentSegment } from './domain/url/segment';
export { RestUrlGroup } from './domain/url/url-group';
export { MapWrapper, StringMapWrapper, ListWrapper, isListLikeIterable, areIterablesEqual, iterateListLike, findLast } from './utils/collection';
export { getTypeNameForDebugging, unimplemented, isPresent, isBlank, isBoolean, isNumber, isString, isFunction, isType, isStringMap, isStrictStringMap, isPromise, isArray, isDate, isWindow, isRegExp, noop, stringify, className, applyMixins, StringWrapper, StringJoiner, NumberWrapper, FunctionWrapper, looseIdentical, getMapKey, normalizeBlank, normalizeBool, isJsObject, print, warn, assert, checksum, crc32, Json, DateWrapper, BooleanWrapper, getSymbolIterator, evalExpression, evalExpressionWithCntx, isPrimitive, hasConstructor, escape, escapeRegExp, hashCode, objectToName, equals, shiftLeft, shiftRight, Extensible, readGlobalParam, decamelize, nonPrivatePrefix, hasGetter, uuid } from './utils/lang';
export { NotFoundComponent } from './not-found/not-found.component';
export { RoutingService } from './routing/routing.service';
export { AribaCoreModule } from './ariba.core.module';
export { FieldPath } from './utils/field-path';
export { AribaApplication } from './ariba-application';
export { Notifications } from './messaging/notifications.service';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhcmliYXVpL2NvcmUvIiwic291cmNlcyI6WyJwdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFakQsT0FBTyxFQUFXLFFBQVEsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzdELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFDSCxRQUFRLEVBQTBELE9BQU8sRUFDNUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQixPQUFPLEVBQ0gsYUFBYSxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQ3ZGLFdBQVcsRUFBRSxpQkFBaUIsRUFBRSxlQUFlLEVBQ2xELE1BQU0sc0JBQXNCLENBQUM7QUFDOUIsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBRXBELE9BQU8sRUFDSCxVQUFVLEVBQUUsZ0JBQWdCLEVBQWEsV0FBVyxFQUFFLGtCQUFrQixFQUN4RSxpQkFBaUIsRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUMvQyxNQUFNLG9CQUFvQixDQUFDO0FBQzVCLE9BQU8sRUFDSCx1QkFBdUIsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFDekYsVUFBVSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUN4RixRQUFRLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQzlFLGFBQWEsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQ3pFLGFBQWEsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUNsRixjQUFjLEVBQUUsaUJBQWlCLEVBQUUsY0FBYyxFQUFFLHNCQUFzQixFQUN6RSxXQUFXLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQ2pGLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQ2hGLFNBQVMsRUFBRSxJQUFJLEVBQ2xCLE1BQU0sY0FBYyxDQUFDO0FBR3RCLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBQ2xFLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUV6RCxPQUFPLEVBQ0gsZUFBZSxFQUNsQixNQUFNLHFCQUFxQixDQUFDO0FBRTdCLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUU3QyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sbUNBQW1DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBTQVAgQXJpYmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKlxuICovXG5cbi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2YgY29yZVxuICovXG5cbmV4cG9ydCB7QXBwQ29uZmlnLCBtYWtlQ29uZmlnfSBmcm9tICcuL2NvbmZpZy9hcHAtY29uZmlnJztcbmV4cG9ydCB7RW52aXJvbm1lbnR9IGZyb20gJy4vY29uZmlnL2Vudmlyb25tZW50JztcblxuZXhwb3J0IHtSZXNwb25zZSwgUmVzb3VyY2V9IGZyb20gJy4vZG9tYWluL3Jlc291cmNlLnNlcnZpY2UnO1xuZXhwb3J0IHtEZWZhdWx0UmVzdEJ1aWxkZXJ9IGZyb20gJy4vZG9tYWluL3VybC9idWlsZGVyJztcbmV4cG9ydCB7XG4gICAgaXNFbnRpdHksIFZhbHVlLCBFbnRpdHksIElkZW50aXR5LCBDb21wb3NpdGVUeXBlLCBEZXNlcmlhbGl6YWJsZSwgaXNWYWx1ZVxufSBmcm9tICcuL2RvbWFpbi9kb21haW4tbW9kZWwnO1xuZXhwb3J0IHtcbiAgICBBY3Rpb25TZWdtZW50LCBSZXN0QWN0aW9uLCBSZXNvdXJjZVNlZ21lbnQsIFJlc3RTZWdtZW50VHlwZSwgVXJsU2VnbWVudCwgQ29udGV4dFNlZ21lbnQsXG4gICAgSG9zdFNlZ21lbnQsIElkZW50aWZpZXJTZWdtZW50LCBPZlBhcmVudFNlZ21lbnRcbn0gZnJvbSAnLi9kb21haW4vdXJsL3NlZ21lbnQnO1xuZXhwb3J0IHtSZXN0VXJsR3JvdXB9IGZyb20gJy4vZG9tYWluL3VybC91cmwtZ3JvdXAnO1xuXG5leHBvcnQge1xuICAgIE1hcFdyYXBwZXIsIFN0cmluZ01hcFdyYXBwZXIsIFByZWRpY2F0ZSwgTGlzdFdyYXBwZXIsIGlzTGlzdExpa2VJdGVyYWJsZSxcbiAgICBhcmVJdGVyYWJsZXNFcXVhbCwgaXRlcmF0ZUxpc3RMaWtlLCBmaW5kTGFzdFxufSBmcm9tICcuL3V0aWxzL2NvbGxlY3Rpb24nO1xuZXhwb3J0IHtcbiAgICBnZXRUeXBlTmFtZUZvckRlYnVnZ2luZywgdW5pbXBsZW1lbnRlZCwgaXNQcmVzZW50LCBpc0JsYW5rLCBpc0Jvb2xlYW4sIGlzTnVtYmVyLCBpc1N0cmluZyxcbiAgICBpc0Z1bmN0aW9uLCBpc1R5cGUsIGlzU3RyaW5nTWFwLCBpc1N0cmljdFN0cmluZ01hcCwgaXNQcm9taXNlLCBpc0FycmF5LCBpc0RhdGUsIGlzV2luZG93LFxuICAgIGlzUmVnRXhwLCBub29wLCBzdHJpbmdpZnksIGNsYXNzTmFtZSwgYXBwbHlNaXhpbnMsIFN0cmluZ1dyYXBwZXIsIFN0cmluZ0pvaW5lcixcbiAgICBOdW1iZXJXcmFwcGVyLCBGdW5jdGlvbldyYXBwZXIsIGxvb3NlSWRlbnRpY2FsLCBnZXRNYXBLZXksIG5vcm1hbGl6ZUJsYW5rLFxuICAgIG5vcm1hbGl6ZUJvb2wsIGlzSnNPYmplY3QsIHByaW50LCB3YXJuLCBhc3NlcnQsIGNoZWNrc3VtLCBjcmMzMiwgSnNvbiwgRGF0ZVdyYXBwZXIsXG4gICAgQm9vbGVhbldyYXBwZXIsIGdldFN5bWJvbEl0ZXJhdG9yLCBldmFsRXhwcmVzc2lvbiwgZXZhbEV4cHJlc3Npb25XaXRoQ250eCxcbiAgICBpc1ByaW1pdGl2ZSwgaGFzQ29uc3RydWN0b3IsIGVzY2FwZSwgZXNjYXBlUmVnRXhwLCBoYXNoQ29kZSwgb2JqZWN0VG9OYW1lLCBlcXVhbHMsXG4gICAgc2hpZnRMZWZ0LCBzaGlmdFJpZ2h0LCBFeHRlbnNpYmxlLCByZWFkR2xvYmFsUGFyYW0sIGRlY2FtZWxpemUsIG5vblByaXZhdGVQcmVmaXgsXG4gICAgaGFzR2V0dGVyLCB1dWlkXG59IGZyb20gJy4vdXRpbHMvbGFuZyc7XG5cblxuZXhwb3J0IHtOb3RGb3VuZENvbXBvbmVudH0gZnJvbSAnLi9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudCc7XG5leHBvcnQge1JvdXRpbmdTZXJ2aWNlfSBmcm9tICcuL3JvdXRpbmcvcm91dGluZy5zZXJ2aWNlJztcblxuZXhwb3J0IHtcbiAgICBBcmliYUNvcmVNb2R1bGVcbn0gZnJvbSAnLi9hcmliYS5jb3JlLm1vZHVsZSc7XG5cbmV4cG9ydCB7RmllbGRQYXRofSBmcm9tICcuL3V0aWxzL2ZpZWxkLXBhdGgnO1xuXG5leHBvcnQge0FyaWJhQXBwbGljYXRpb259IGZyb20gJy4vYXJpYmEtYXBwbGljYXRpb24nO1xuZXhwb3J0IHtOb3RpZmljYXRpb25zfSBmcm9tICcuL21lc3NhZ2luZy9ub3RpZmljYXRpb25zLnNlcnZpY2UnO1xuXG4iXX0=