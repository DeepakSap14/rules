{"version":3,"sources":["null","ng://@aribaui/metaui/core/match.ts","ng://@aribaui/metaui/core/nested-map.ts","ng://@aribaui/metaui/core/property-value.ts","ng://@aribaui/metaui/core/context.ts","ng://@aribaui/metaui/core/rule.ts","ng://@aribaui/metaui/core/meta.ts","ng://@aribaui/metaui/core/item-properties.ts","ng://@aribaui/metaui/core/object-meta.ts","ng://@aribaui/metaui/core/widgets-rules.ts","ng://@aribaui/metaui/core/persistence-rules.ts","ng://@aribaui/metaui/core/uimeta.ts","ng://@aribaui/metaui/core/meta-context/meta-context.component.ts","ng://@aribaui/metaui/core/meta-core.module.ts","ng://@aribaui/metaui/core/rule-loader.service.ts","ng://@aribaui/metaui/layout/no-meta/no-meta.component.ts","ng://@aribaui/metaui/layout/meta-include.directive.ts","ng://@aribaui/metaui/layout/meta-form/meta-form.component.ts","ng://@aribaui/metaui/layout/meta.base.component.ts","ng://@aribaui/metaui/layout/meta-form/meta-form-table/meta-form-table.component.ts","ng://@aribaui/metaui/layout/meta-form/meta-form-row/meta-form-row.component.ts","ng://@aribaui/metaui/layout/meta-content-page/meta-content-page.component.ts","ng://@aribaui/metaui/layout/meta-layout.ts","ng://@aribaui/metaui/layout/meta-element-list/meta-element-list.component.ts","ng://@aribaui/metaui/layout/meta-action-list/meta-action-list.component.ts","ng://@aribaui/metaui/layout/meta-home-page/meta-home.page.component.ts","ng://@aribaui/metaui/layout/meta-dashboard/metadashboard-layout.component.ts","ng://@aribaui/metaui/layout/meta-section/meta-sections.component.ts","ng://@aribaui/metaui/layout/meta-object-detail/meta-object-detail.component.ts","ng://@aribaui/metaui/layout/meta-layout.module.ts","ng://@aribaui/metaui/ariba-metaui-routing.module.ts","ng://@aribaui/metaui/ariba.metaui.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","Match","_matches","_keysMatchedMask","_matchPathCRC","addInt","intArr","val","isBlank","newPos","slice","filterMustUse","rules","arr","usesMask","result","count","keyMatchesMask","intersect","allRules","a","aMask","bMask","iA","sizeA","isPresent","iB","sizeB","_Debug_ElementProcessCount","iAMask","keyIndexedMask","iBMask","c","union","vA","vB","Number","MAX_VALUE","_arrayEq","filter","maxRule","matchesArr","queriedMask","matchArray","rule","disabled","keyAntiMask","matches","Meta","_DebugDoubleCheckMatches","assert","hashCode","ret","crc32","defineProperty","equalsTo","toString","buf","StringJoiner","add","MatchWithUnion","_super","_overUnionMatch","_this","tslib_1.__extends","MatchResult","_meta","_keyData","_value","_prevMatch","_initMatch","setOverridesMatch","over","_invalidateIfStale","filterResult","_rules","_ruleCount","initMatchValues","matchArrayAssign","matchValue","filteredMatches","overrideMatches","keysMatchedMask","_UsePartialIndexing","newMatchArray","valueForKey","key","_key","immutableCopy","_metaGeneration","ruleSetGeneration","join","newArr","keyMask","shiftLeft","_id","isArray","_a","tslib_1.__values","_b","v","lookup","prevMatches","EmptyMatchArray","mr","_properties","_logMatchDiff","print","properties","propertiesForMatch","debugString","sj","_appendPrevPath","_checkMatch","values","meta","_checkRule","size","UnionMatchResult","keyData","prevMatch","NestedMap","_parent","_map","Map","toMapEntry","iteratorResult","isMapEntry","hasNext","isNMNullMarker","toMap","reparentedMap","newParent","newMap","_overrideCount","get","has","keys","unimplemented","clear","set","orig","delete","returnVal","_NullMarker","forEach","callbackfn","thisArg","nextEntry","entries","NestedEntryIterator","nesnullmarker","_nestedMap","_parentIterator","parent","_nestedIterator","map","advanceToNext","_currentEntry","_nextEntry","_fromNested","_currentNestedEntry","_currentParentEntry","DynamicPropertyValue","evaluate","context","bind","StaticallyResolvable","StaticDynamicWrapper","_orig","getDynamicValue","awakeForPropertyMap","isPropertyMapAwaking","_cached","staticallyResolveValue","StaticallyResolvableWrapper","ContextFieldPath","path","fieldPath","FieldPath","getFieldValue","evaluateSet","setFieldValue","isDynamicSettable","arg","settable","Expr","_expressionString","addTypeToContext","name","isFunction","_extendedObjects","index","k","typeName","indexOf","replace","evalExpressionWithCntx","DeferredOperationChain","_merger","_override","merge","resolveValue","isDeclare","ValueConverter","toType","isString","isBoolean","BooleanWrapper","boleanValue","isNumber","parseInt","Context","nested","EmptyMap","PropertyMap","_Debug_SetsCount","_accessor","PropertyAccessor","_currentActivation","getActivationTree","_rootNode","isNested","objectToName","Activation","root","identityCache","getValue","setValue","_frameStarts","_entries","pop","entriesSize","pos","recIdx","rec","splice","srec","lastAssignmentIdx","_values","_undoOverride","activation","assertContextConsistent","reset","_recPool","_currentProperties","_set","ObjectMeta","KeyObject","toCheck","clazz","KeyClass","UIMeta","beautifyClassName","setScopeKey","isPropertyScope","_currentPropertyScopeKey","KeyAny","propVals","ListWrapper","isEmpty","last","propertyLocalValues","propertyForKey","allProperties","listPropertyForKey","booleanPropertyForKey","defaultVal","lastMatch","lastValue","propValue","pushAndResolveStatic","contextVals","propertyKey","staticResolve","scopeKey","MapWrapper","iterable","pushAndResolve","snapshot","Snapshot","activeAssignments","list","maskedByIdx","fromChaining","AssignmentSnapshot","salience","allAssignments","chaining","sval","transformValue","didSet","registry","componentRegistry","registerType","className","getChildActivation","_createNewFrameForSet","_applyActivation","awakeCurrentActivation","newContextRec","Assignment","firstVal","_origEntryCount","_recs","_prepareForOverride","isNullMarker","deferredAssignments","applyDeferredAssignments","deferredAssignments_1","deferredAssignments_1_1","da","currentPropValue","resolvedValue","_inDeclare","match","lastMatchWithoutContextProps","declareKeyMask","svalue","lastActivation","newActivation","_set2","_checkApplyProperties","_CacheActivations","cacheChildActivation","_createNewPropertyContextActivation","parentActivation","propActivation","origValues","nestedMap","applyPropertyContextAndChain","_nestedValues","EmptyRemoveMap","_applyPropertyActivation","propValues","NullMarker","_propertyLocalValues","_propertyLocalSrec","_isNewValue","oldVal","newVal","contains","KeyDeclare","_ExpensiveContextConsistencyChecksEnabled","findLastAssignmentOfKey","contextVal","foundFirst","j","pred","isChaining","hasOldValue","isNewValue","matchingPropKeyAssignment","newMatch","oldRec","prev","findLastAssignmentOfKeyWithValue","firstAssignmentIdx","_rematchForOverride","PropertyMerger_List","MaxContextStackSize","StaticRec","_DebugRuleMatches","_undoRecValue","overrideIndex","lastLastIdx","overridesMatch","end","unionOverrideMatch","numEntries","lastSize","declareKey","contextKeys","contextKeysUpdated","propMgr","_name","prevProps","hasDeferredAssignmentForKey","mirrorKey","_keyDataToSet","addDeferredAssignment","_checkPropertyContext","foundActivation","foundKey","ScopeKey","debug","_logContext","buffer","sp","propertyActivation","currentActivation","_propertyActivation","srecs","writeProperties","level","singleLine","isStringMap","OverrideValue","propertyLocalMatches","lastStaticRec","propertyLocalStaticRec","extendedFields","Extensible","contextKey","byKey","_valueNodeMapByContextKeyChaining","_valueNodeMapByContextKey","byVal","Collections.Dictionary","newDa","DeferredAssignment","findExistingPropertyActivation","Collections.util","makeString","_didInitPropContext","initPropContext","_val","_context","_origClass","_assignments","_allAssignments","_isNested","hydrate","shellCopy","assignments","newContext","assignments_1","assignments_1_1","ObjectMetaContext","obj","object","KeyValue","_formatters","locale","DefaultLocale","timezone","Date","getTimezoneOffset","UIContext","Selector","isDecl","fromMap","bindToKeyData","_matchArrayIdx","_matchValue","other","Rule","_selectors","_rank","_lineNumber","src","dest","updatedMask","propManager","managerForProperty","mergeProperty","keymask","addContextKey","apply","MIN_VALUE","disable","lineNumber","location","_ruleSet","filePath","isEditable","editableStart","createDecl","selectors","declPred","prePreds","convertKeyOverrides","selectors_1","selectors_1_1","DeclRule","RuleWrapper","hasOverrideScope","prePreds_1","prePreds_1_1","overrideKey","overrideKeyForKey","unshift","forEachWithIndex","contextValue","_transformer","tranformForMatch","objectEquals","MaxKeyDatas","PropertyMerger_DeclareList","PropertyMergerDeclareList","PropertyMerger_Traits","PropertyMergerDeclareListForTrait","Transformer_KeyPresent","KeyValueTransformer_KeyPresent","_declareKeyMask","maskValue","registerPropertyMerger","KeyTrait","nooprule","booleanValue","toList","one","two","equals","addTraits","traits","current","addAll","addTrait","trait","isEntity","isValue","registerLoader","loader","_ruleLoader","addRule","decl","_addRule","_addToRules","checkPropScope","_currentRuleSet","lastScopeKeyData","declKey","entryId","allocateNextRuleEntry","id","rank","ruleSet","declMask","matchMask","indexedMask","antiMask","indexOnlySelector","bestSelectorToIndex","shouldIndex","dataMask","data","addEntry","nonScopeKeyDecl","traitVal","traitKey","createEmpty","traitRule","scopeSel","best","bestRank","sel","selectivityRank","selector","score","_editingRuleEnd","Math","max","_addRuleAndReturnExtras","extras","start","_updateEditedRule","extras_1","extras_1_1","preds","removeAt","invalidateRules","scopeKeyForSelector","addRuleFromSelectorMap","selectorMap","propertyMap","addRuleFromSelectorMapWithRank","addRules","props","rules_1","rules_1_1","_loadRules","ruleText","module","editable","loadRules","endRuleSet","disableRules","Error","_loadRulesWithRuleSet","filename","beginRuleSetWithRank","loadUserRule","source","userClass","parsePropertyAssignment","propString","clearCaches","_MatchToPropsCache","_PropertyMapUniquer","_identityCache","isTraitExportRule","from","StringWrapper","endsWidth","beginRuleSet","identificator","RuleSet","_start","_end","_filePath","beginReplacementRuleSet","origRank","startRank","_ruleSetGeneration","touch","intermediateResult","newPropertiesMap","matchResult","sort","o1","o2","awakeProperties","_nextKeyId","KeyData","_keyDatasById","_keysInMask","mask","shiftRight","registerKeyInitObserver","addObserver","registerValueTransformerForKey","transformer","array","idx","curr","updateByAdding","propertyWillDoMerge","propertyName","origValue","merger","mergerForProperty","isPropertyMergerIsChaining","manager","_managerForProperty","PropertyManager","mirrorPropertyToContext","defineKeyAsPropertyScope","isPropertyScopeKey","isPropMergerIsChainingMark","groupForTrait","_logRuleStats","total","counts","valuess","ruleVecs","valuess_1","valuess_1_1","vm","kvc","KeyValueCount","_arr","min","addTestUserRule","testRuleName","_testRules","markernull","newValue","origClone","clone","mergeMapIntoMapWithObject","PropertyMergerDynamic","_ruleVecs","_any","ValueMatches","isFalse","multi_1","MultiMatchValue","before","after","owner","_read","_observers","notify","checkParent","setParent","parentValue","_isPropertyScope","yn","_contextPropertiesUpdated","override","PropertyMerger_Overwrite","l1","l2","addElementsIfAbsent","origL","overrideL","origL_1","origL_1_1","canAdd","group","overrideL_1","overrideL_1_1","overrideTrait","PropertyMerger_And","PropertyMerger_Valid","editableOnly","_editableStart","parentArr","_parentSize","multi","propertyAwaking","ItemProperties","hidden","IntrospectionMetaProvider","KeyType","FieldTypeIntrospectionMetaProvider","KeyField","KeyAction","KeyActionCategory","KeyVisible","KeyEditable","KeyValid","OMPropertyMerger_Valid","KeyTraitGroup","KeyElementType","validationError","ObjectMetaPropertyMap","itemNames","itemsNames","itemProperties","filterHidden","itemPropertiesForNames","itemNames_1","itemNames_1_1","itemName","isVisible","visible","isHidden","_traitToGroup","_traitToGroupGeneration","_c","_d","name_1","_injector","_componentRegistry","myObject","nameToType","registerRulesForClass","ClassRulePriority","registerRulesForFields","instance","fieldNames","fieldNames_1","fieldNames_1_1","name_2","type","collectionElementType","selectorList","KeyRank","_fieldPath","fieldName","_FieldPathNullMarker","isFieldNullMarker","SystemRules","oss","_isDecl","class","t","editing","fiveZoneLayout","zones","component","bindings","formatter","showTime","destinationClass","displayKey","multiselect","bytes","file","rows","cols","escapeUnsafeHtml","contentType","awcontentLayouts","_main","money","currencies","wrapperComponent","wrapperBindings","style","required","valid","linkTitle","appendContentToBody","ngcontentLayout","layout","tagName","enabled","actionResults","pageBindings","componentName","title","clientPanel","message","isInstanceAction","defaultStyle","renderAs","align","elementClass","filterActions","zonePath","showLabelsAboveControls","label","enableScrolling","showSelectionColumn","displayGroup","submitOnSelectionChange","singleSelect","objectTitle","homePage","defVal","SystemPersistenceRules","searchOperation","textSearchSupported","useTextIndex","omitTags","awcontent","action","operation","pageName","UserMetaDataProvider","KeyLayout","KeyModule","registerDefaultLabelGeneratorForKey","KeyArea","KeyEditing","KeyComponentName","KeyOperation","registerStaticallyResolvable","PropFieldsByZone","PropFieldsByZoneResolver","PropFieldPropertyList","PropFieldPropertyListResolver","PropLayoutsByZone","PropLayoutsByZoneResolver","getInstance","_instance","defaultLabelForIdentifier","lastDot","lastIndexOf","substring","decamelize","beautifyFileName","field","ZoneMain","KeyZonePath","loadDefaultRuleFiles","references","SystemRulePriority","registerComponents","loadApplicationRules","aRules","userReferences","appRuleFiles","appConfig","AppConfigRuleFilesParam","AppConfigUserRulesParam","appRuleFiles_1","appRuleFiles_1_1","ruleFile","LowRulePriority","toLowerCase","userRule","defaultLabelGeneratorForKey","_DefaultLabelGenerator","registerDerivedValue","propKey","dynamicValue","KeyLabel","LocalizedLabelString","fieldList","itemList","ZonesTLRMB","fieldsByZones","itemsByZones","itemNamesByZones","mapItemPropsToNames","namesByZones","names","value_1","value_1_1","item","predecessorMap","defaultPredecessor","fieldInfos","groupBy","KeyAfter","predecessors","zones_1","zones_1_1","zone","accumulatePrecessors","isZoneReference","suffix","toUpperCase","property","byZone","items","r1","r2","items_1","items_1_1","addPredecessorRule","contextPreds","predecessor","flattenVisible","zoneList","zoneList_1","zoneList_1_1","fields","fields_1","fields_1_1","displayKeyForClass","displayLabel","propertiesValue","createLocalizedString","defaultValue","LocalizedString","RoutingService","Environment","AppConfig","sysReferences","injector","env","inTest","ComponentRegistry","registerTypes","userReferences_1","userReferences_1_1","uRule","warn","fireActionFromProps","actionCategory","DefaultActionCategory","_fireAction","fireAction","withBackAction","isRoute","naviateToPage","route","params","prepareRoute","uiContex","routingService","navigateWithRoute","prepareRouteForComponent","gotoModule","activatedPath","deleteValue","ACTIVE_CNTX","KeyHomePage","routeForPage","navigate","skipLocationChange","actionResult","compPageWithName","currType","actionsByCategory","catNames","actionCategories","addActionsForCategories","catNames_1","catNames_1_1","cat","collectActionsByCategory","targetCat","actionInfos","actionInfos_1","actionInfos_1_1","actionInfo","category","forCategory","computeModuleInfo","checkVisibility","moduleInfo","ModuleInfo","modules","allModuleProps","ActionZones","moduleNames","moduleByNames","allModuleProps_1","allModuleProps_1_1","modProperties","ModuleActionZones","currentModuleLabel","moduleName","ZoneTop","ZoneLeft","ZoneMiddle","ZoneRight","ZoneBottom","ZoneDetail","_module","_defaultValue","DefaultModule","scopeVal","uiMeta","IMPLICIT_PROPERTIES","IMMUTABLE_PROPERTIES","MetaContextComponent","elementRef","parentContainer","EventEmitter","ngOnInit","initBindings","hasObject","_hasObject","pushPop","hasValue","ngOnChanges","changes","IMMUTABLE_PROPERTIES_1","IMMUTABLE_PROPERTIES_1_1","currentValue","previousValue","viewInitialized","ngDoCheck","prevObject","updateModel","ngAfterViewInit","ngAfterViewChecked","isPush","activeContext","forceCreate","pushNewContext","contextCreated","_scopeBinding","beforeContextSet","emit","afterContextSet","bindingKeys","bindingsMap","_myContext","myContext","peak","ngOnDestroy","nativeElement","initImplicitBindings","attributes","attr","ignoreBinding","sortByExample","assign","control","formGroup","patchValue","onlySelf","emitEvent","Component","args","template","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","BaseFormComponent","useExisting","forwardRef","ElementRef","decorators","SkipSelf","Optional","Inject","Input","Output","MetaUIActionEvent","eventName","cnxName","AWMetaCoreModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","entryComponents","exports","RuleLoaderService","_uiMeta","onRule","readRule","loadRulesWithReturn","jsonRule","createFromStringMapWithResolve","resoveValue","undefined","expr","locKey","Injectable","NoMetaComponent","styles","MetaIncludeComponentDirective","metaContext","viewContainer","factoryResolver","cd","compRegistry","domUtils","currentComponent","newComponent","doRenderComponent","createWrapperElementIfAny","createContentElementIfAny","metaBindings","KeyBindings","inputs","componentReference","metadata","applyInputs","resolveComponentType","ngContent","cntValue","IncludeComponentDirective","NgContent","ngContentElement","NgContentElement","detectChanges","NgContentLayout","layoutName","compType","componentFactory","resolveComponentFactory","componentMeta","resolveDirective","ngComponent","createComponent","cReference","resolvedCompFactory","componentType","applyBindings","insertIntoParentNgContent","wrapperName","KeyWrapperComponent","wrapperType","KeyWrapperBinding","wrapperComponentRef","cRef","bUseMetaBindings","outputs","currenBindings","applyOutputs","compToBeRendered","canSetType","inputs_1","inputs_1_1","publicKey","nonPrivatePrefix","skipInput","applyDynamicInputBindings","eventEmitter","this_1","applyDynamicOutputBinding","subscribe","event_1","cnx","onAction","outputs_1","outputs_1_1","emitter","asObservable","dynval","me","cnxtPath","enumerable","configurable","Directive","ViewContainerRef","ComponentFactoryResolver","ChangeDetectorRef","DomUtilsService","MetaFormComponent","environment","MetaBaseComponent","_metaContext","updateMeta","contextSnapshot","doUpdate","isNestedContext","defValue","aProperties","MetaFormTableComponent","canShowZone","fieldsByZone","isFiveZoneLayout","PropIsFieldsByZone","initForm","zLeft","zMiddle","zRight","zTop","zBottom","form","doRegister","Host","ViewChild","MetaFormRowComponent","validators","createValidators","bindingBoolProperty","bindingStringProperty","initialSize","that","Validators","touched","errorMsg","metavalid","msg","isRequired","FormRowComponent","MetaContentPageComponent","url","stateCacheHistory","objectName","isTrue","isInspectAction","onBack","event","goBack","ActivatedRoute","MetaLayout","layoutContext","contextMap","nameToLayout","_allLayouts","_layoutsByZones","_layout","_propertyMap","labelForContext","MetaElementListComponent","sanitizer","styleString","classString","lContext","DomSanitizer","MetaActionListComponent","_actionsByCategory","_actionsByName","menuModel","categories","actions","actionClicked","_contextMap","onAfterContextSet","actionName","aContext","populateMenu","onContextChanged","change","console","log","isActionDisabled","alignRight","findIndex","itemCommand","command","MetaHomePageComponent","activatedRoute","routeParams","hasModule","BaseComponent","PortletSizes","small","medium","wide","large","MetaDashboardLayoutComponent","dashboardName","toggleMenu","activeMenu","ZonesTB","topLayouts","tops","layoutsByZones","portletWidth","width","bottomLayouts","bottom","zTocLayouts","ZoneToc","MetaSectionsComponent","allLayouts","sectionOperations","sections","arguments","concat","__spread","viewSections","toArray","sectionIndex","section","editState","editMode","onCompleteSubscriptions","onEditingComplete","sectionProp","propName","unsubscribe","ViewChildren","SectionComponent","MetaObjectDetailComponent","AWMetaLayoutModule","AribaCoreModule","AribaComponentsModule","routes","RouterModule","forChild","AribaMetaUIModule","AribaMetaUIRoutingModule","APP_INITIALIZER","useFactory","initMetaUI","deps","Injector","initFce","inj","Promise","resolve","metaUI","sysMetaComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {\n    assert,\n    crc32,\n    hashCode,\n    isArray,\n    isBlank,\n    isPresent,\n    print,\n    shiftLeft,\n    StringJoiner\n} from '@aribaui/core';\nimport {Rule} from './rule';\nimport {KeyData, MatchValue, Meta, PropertyMap} from './meta';\n\n\n/**\n * Represents a set of matching rules resulting from looking up a set of key/values\n *  against the Meta rule base.\n *\n * Instances of the Match superclass are simply immutable snapshots of previous matches\n * (used as keys in Match -> Properties lookup caches).\n * The more meaty class is its static inner subclass, Match.MatchResult.\n */\nexport class Match\n{\n    static readonly EmptyMatchArray: number[] = [];\n\n    static _Debug_ElementProcessCount: number = 0;\n\n\n    // Word lists are int arrays with the first element holding the length\n    static addInt(intArr: number[], val: number): number[]\n    {\n        if (isBlank(intArr)) {\n            let r: Array<number> = new Array<number>(4);\n            r[0] = 1;\n            r[1] = val;\n\n            return r;\n        }\n        let newPos: number = intArr[0];\n        if (intArr[newPos++] === val) {\n            return intArr;\n        }  // already here...\n\n        if (newPos >= intArr.length) {\n            let a: Array<number> = new Array<number>(newPos * 2);\n            a = intArr.slice(0, newPos);\n            intArr = a;\n        }\n        intArr[newPos] = val;\n        intArr[0] = newPos;\n        return intArr;\n    }\n\n    // only rules that use only the activated (queried) keys\n    static filterMustUse(rules: Array<Rule>, arr: number[], usesMask: number): number[]\n    {\n        if (isBlank(arr)) {\n            return null;\n        }\n        let result: number[];\n        let count = arr[0];\n        for (let i = 0; i < count; i++) {\n            let r = arr[i + 1];\n            let rule = rules[r];\n            if ((rule.keyMatchesMask & usesMask) !== 0) {\n                result = Match.addInt(result, r);\n            }\n        }\n        return result;\n    }\n\n\n    /**\n     * Intersects two rulevecs.  This is not a traditional intersection where only items in both\n     * inputs are included in the result: we only intersect rules that match on common keys;\n     * others are unioned.\n     *\n     * For instance, say we have the following inputs:\n     *      a:  [matched on: class, layout]  (class=Foo, layout=Inspect)\n     *          1) class=Foo layout=Inspect { ... }\n     *          2) class=Foo operation=edit { ... }\n     *          3) layout=Inspect operation=view { ... }\n     *\n     *      b:  [matched on: operation]  (operation=view)\n     *          3) layout=Inspect operation=view { ... }\n     *          4) operation=view type=String { ... }\n     *          5) operation=view layout=Tabs { ... }\n     *\n     * The result should be: 1, 3, 4\n     * I.e.: items that appear in both (#3 above) are included, as are items that appear in just\n     * one,\n     * *but don't match on the keys in the other* (#1 and #4 above).\n     *\n     * @param allRules the full rule base\n     * @param a first vector of rule indexes\n     * @param b second vector of rule indexes\n     * @param aMask mask indicating the keys against which the first rule vectors items have\n     *     already been matched\n     * @param bMask mask indicating the keys against which the second rule vectors items have\n     *     already been matched\n     * @return rule vector for the matches\n     */\n    static intersect(allRules: Array<Rule>, a: number[], b: number[], aMask: number,\n                     bMask: number): number[]\n    {\n\n        if (isBlank(a)) {\n            return b;\n        }\n        let result: number[];\n        let iA = 1, sizeA = isPresent(a[0]) ? a[0] : 0, iB = 1, sizeB = isPresent(b[0]) ? b[0] : 0;\n        Match._Debug_ElementProcessCount += sizeA + sizeB;\n\n        while (iA <= sizeA || iB <= sizeB) {\n            let iAMask = (iA <= sizeA) ? allRules[a[iA]].keyIndexedMask : 0;\n            let iBMask = (iB <= sizeB) ? allRules[b[iB]].keyIndexedMask : 0;\n            let c = (iA > sizeA ? 1 : (iB > sizeB ? -1 : (a[iA] - b[iB])));\n\n            if (c === 0) {\n                result = Match.addInt(result, a[iA]);\n                iA++;\n                iB++;\n\n            } else if (c < 0) {\n                // If A not in B, but A doesn't filter on B's mask, then add it\n                if ((iAMask & bMask) === 0) {\n                    result = Match.addInt(result, a[iA]);\n                }\n                iA++;\n            } else {\n                if ((iBMask & aMask) === 0) {\n                    result = Match.addInt(result, b[iB]);\n                }\n                iB++;\n            }\n        }\n        return result;\n    }\n\n    static union(a: number[], b: number[]): number[]\n    {\n        if (isBlank(a)) {\n            return b;\n        }\n        if (isBlank(b)) {\n            return a;\n        }\n        let sizeA = a[0], sizeB = b[0];\n        if (sizeA === 0) {\n            return b;\n        }\n        if (sizeB === 0) {\n            return a;\n        }\n        Match._Debug_ElementProcessCount += (sizeA + sizeB);\n\n        let result: number[];\n        let iA = 1, vA = a[1], iB = 1, vB = b[1];\n\n\n        while (iA <= sizeA || iB <= sizeB) {\n            let c: number = vA - vB;\n            result = Match.addInt(result, ((c <= 0) ? vA : vB));\n            if (c <= 0) {\n                iA++;\n                vA = (iA <= sizeA) ? a[iA] : Number.MAX_VALUE;\n            }\n            if (c >= 0) {\n                iB++;\n                vB = (iB <= sizeB) ? b[iB] : Number.MAX_VALUE;\n            }\n        }\n        return result;\n    }\n\n    static _arrayEq(a: number[], b: number[]): boolean\n    {\n        if (a === b) {\n            return true;\n        }\n        if (a === null || b === null) {\n            return false;\n        }\n        let count = a[0];\n        if (count !== b[0]) {\n            return false;\n        }\n        for (let i = 1; i <= count; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    constructor(public _matches: number[], public _keysMatchedMask: number,\n                public  _matchPathCRC: number = 0)\n    {\n    }\n\n\n    /**\n     * Filter a partially matched set of rules down to the actual matches.\n     * The input set of rules, matchesArr, is based on a *partial* match, and so includes rules\n     * that were touched by some of the queried keys, but that may also require *additional* keys\n     * that we have not matched on -- these must now be removed. Also, when 'partial indexing',\n     * rules are indexed on a subset of their keys, so matchesArr will contain rules that need to\n     * be evaluated against those MatchValues upon which they were not indexed (and therefore not\n     * intersected / filtered on in the lookup process).\n     */\n    filter(allRules: Array<Rule>, maxRule: number, matchesArr: number[], queriedMask: number,\n           matchArray: MatchValue[]): number[]\n    {\n        if (isBlank(matchesArr)) {\n            return null;\n        }\n        // print('\\n## Filtering matching: ' + matchesArr[0] + ', Queried Mask: ' + queriedMask);\n        //\n        // for (let i = 1; i <= matchesArr[0]; i++) {\n        //     print('## ' + matchesArr[i] + '): ' + allRules[matchesArr[i]].toString());\n        // }\n\n        let result: number[];\n        let count = matchesArr[0];\n\n        for (let i = 0; i < count; i++) {\n            let r = matchesArr[i + 1];\n            if (r >= maxRule) {\n                continue;\n            }\n            let rule: Rule = allRules[r];\n\n\n            if (rule.disabled() || (rule.keyAntiMask & queriedMask) !== 0) {\n                continue;\n            }\n\n            // Must have matched on (activate) all match keys for this rule, *and*\n            // if have any non-indexed rules, need to check match on those\n            if (((rule.keyMatchesMask & ~queriedMask) === 0) &&\n                ((rule.keyMatchesMask === rule.keyIndexedMask)\n                ||\n                (isPresent(matchArray) && rule.matches(matchArray)))) {\n\n                if (Meta._DebugDoubleCheckMatches && !(matchArray != null && rule.matches(\n                        matchArray))) {\n                    assert(false, 'Inconsistent (negative) match on rule: ' + rule);\n                }\n\n\n                result = Match.addInt(result, r);\n            } else if (Meta._DebugDoubleCheckMatches && (matchArray != null && rule.matches(\n                    matchArray))) {\n                // Assert.that(false, 'Inconsistent (positive) match on rule: %s', rule);\n\n            }\n        }\n\n        // if (isPresent(result) && result.length > 0) {\n        //     print('\\n\\n\\n #### Filtering RESULT: ' + result[0]);\n        //\n        //     for (let i = 1; i <= result[0]; i++) {\n        //         print('## ' + result[i] + '): ' + allRules[result[i]].toString());\n        //     }\n        // }\n        return result;\n    }\n\n\n    hashCode(): number\n    {\n        let ret = this._keysMatchedMask * 31 + this._matchPathCRC;\n        if (isPresent(this._matches)) {\n            for (let i = 0, c = this._matches[0]; i < c; i++) {\n                ret = crc32(ret, this._matches[i + 1]);\n            }\n        }\n        return ret;\n    }\n\n\n    get keysMatchedMask(): number\n    {\n        return this._keysMatchedMask;\n    }\n\n    equalsTo(o: any): boolean\n    {\n        return ((o instanceof Match) && this._keysMatchedMask === o._keysMatchedMask) &&\n            this._matchPathCRC === o._matchPathCRC &&\n            Match._arrayEq(this._matches, o._matches);\n    }\n\n    toString()\n    {\n        let buf = new StringJoiner([]);\n        buf.add('_matches');\n        buf.add((isPresent(this._matches) ? this._matches.length : 0) + '');\n        buf.add('_keysMatchedMask');\n        buf.add(this._keysMatchedMask + '');\n        buf.add('_keysMatchedMask');\n        buf.add(this._matchPathCRC + '');\n\n        buf.add('hashcode');\n        buf.add(this.hashCode() + '');\n\n        return buf.toString();\n    }\n\n}\n/**\n *  An Match which includes a UnionMatchResult part (which is used by Context to\n * represent the set of overridden key/values up the stack)\n */\nexport class MatchWithUnion extends Match\n{\n\n    constructor(public _matches: number[], public  _keysMatchedMask: number,\n                public  _matchPathCRC: number = 0,\n                public _overUnionMatch: UnionMatchResult)\n    {\n        super(_matches, _keysMatchedMask, _matchPathCRC);\n    }\n\n\n    equalsTo(o: any): boolean\n    {\n        return super.equalsTo(o) && (\n            (this._overUnionMatch === o._overUnionMatch) ||\n            ((isPresent(this._overUnionMatch)) && isPresent(\n                o._overUnionMatch) && this._overUnionMatch.equalsTo(\n                o._overUnionMatch)));\n    }\n\n}\n\n/**\n *  MatchResult represents the result of computing the set of matching rules\n *  based on the key/value on this instance, and the other key/value pairs\n * on its predecessor chain.  I.e. to find the matching rules for the context keys\n * {operation=edit; layout=Inspect; class=Foo}, first a MatchResult is created for\n * 'operation=edit' and passed as the 'prev' to the creation of another for 'layout=Inspect',\n * and so on.  In this way the MatchResults form a *(sharable) partial-match tree.*\n *\n * The ability to result previous partial match 'paths' is an important optimization:\n * the primary client of MatchResult (and of rule matching in general) is the Context, when each\n * assignment pushes a record on a stack that (roughly) extends the Match from the previous\n * assignment.  By caching MatchResult instances on the _Assignment records, matching is limited\n *  to the *incremental* matching on just the new assignment, not a full match on all keys in the\n *  context.\n *\n * Further, a MatchResult caches the *property map* resulting from the application of the rules\n *  that it matches.  By caching MatchResult objects (and caching the map from\n *  Rule vector (AKA Match) -> MatchResult -> PropertyMap), redudant rule application (and creation\n * of additional property maps) is avoided.\n */\n    // todo: implement toString for the Dictonary as this is used as a key\nexport class MatchResult extends MatchWithUnion\n{\n\n    private _metaGeneration: number = 0;\n    private _properties: PropertyMap;\n\n    // Meta meta, Meta.KeyData keyData, Object value, MatchResult prev)\n    constructor(private _meta: Meta, private  _keyData: KeyData, private _value: any,\n                private _prevMatch: MatchResult)\n    {\n        super(null, null, 0, (_prevMatch != null) ? _prevMatch._overUnionMatch : null);\n        this._initMatch();\n\n    }\n\n    setOverridesMatch(over: UnionMatchResult)\n    {\n        this._overUnionMatch = over;\n    }\n\n    matches(): number[]\n    {\n        this._invalidateIfStale();\n        if (isBlank(this._matches)) {\n            this._initMatch();\n        }\n        return this._matches;\n    }\n\n    filterResult(): number[]\n    {\n        return this.filter(this._meta._rules, this._meta._ruleCount, this.matches(),\n            this._keysMatchedMask, null);\n    }\n\n    /**\n     * Fill in matchArray with MatchValues to use in Selector matching\n     * @param matchArray\n     */\n    initMatchValues(matchArray: MatchValue[]): void\n    {\n        if (isPresent(this._prevMatch)) {\n            this._prevMatch.initMatchValues(matchArray);\n        }\n        if (isPresent(this._overUnionMatch)) {\n            this._overUnionMatch.initMatchValues(matchArray);\n        }\n        this._meta.matchArrayAssign(matchArray, this._keyData,\n            this._keyData.matchValue(this._value));\n    }\n\n\n    filteredMatches(): number[]\n    {\n        // shouldn't this be cached?!?\n        let matches: number[] = this.matches();\n        let keysMatchedMask = this._keysMatchedMask | (isPresent(\n                this._overUnionMatch) ? this._overUnionMatch._keysMatchedMask : 0);\n\n        let overrideMatches: number[];\n\n        if (isPresent(this._overUnionMatch) && isPresent(\n                (overrideMatches = this._overUnionMatch.matches()))) {\n            if (isBlank(matches)) {\n                matches = overrideMatches;\n\n            } else {\n                matches = Match.intersect(this._meta._rules, matches, overrideMatches,\n                    this._keysMatchedMask,\n                    this._overUnionMatch._keysMatchedMask);\n            }\n        }\n\n        let matchArray: MatchValue[];\n        if (Meta._UsePartialIndexing) {\n            matchArray = this._meta.newMatchArray();\n            this.initMatchValues(matchArray);\n        }\n\n        return this.filter(this._meta._rules, this._meta._ruleCount, matches, keysMatchedMask,\n            matchArray);\n    }\n\n\n    valueForKey(key: string): any\n    {\n        return (this._keyData._key === key) ? this._value :\n            (isPresent(this._prevMatch) ? this._prevMatch.valueForKey(key) : null);\n    }\n\n    immutableCopy(): Match\n    {\n        this._invalidateIfStale();\n        return new MatchWithUnion(this.matches(), this._keysMatchedMask, this._matchPathCRC,\n            this._overUnionMatch);\n    }\n\n    _invalidateIfStale(): void\n    {\n        if (this._metaGeneration < this._meta.ruleSetGeneration) {\n            this._initMatch();\n        }\n    }\n\n    protected join(a: number[], b: number[], aMask: number, bMask: number): number[]\n    {\n        return Match.intersect(this._meta._rules, a, b, aMask, bMask);\n    }\n\n\n    protected _initMatch(): void\n    {\n        let keyMask: number = shiftLeft(1, this._keyData._id);\n\n        // get vec for this key/value -- if value is list, compute the union\n        let newArr: number[];\n        if (isArray(this._value)) {\n\n            for (let v of this._value) {\n                let a: number[] = this._keyData.lookup(this._meta, v);\n                newArr = Match.union(a, newArr);\n            }\n        } else {\n            newArr = this._keyData.lookup(this._meta, this._value);\n        }\n\n        let prevMatches: number[] = (isBlank(this._prevMatch)) ? null : this._prevMatch.matches();\n\n        this._keysMatchedMask = (isBlank(\n            this._prevMatch)) ? keyMask : (keyMask | this._prevMatch._keysMatchedMask);\n        if (isBlank(prevMatches)) {\n            this._matches = newArr;\n            // Todo: not clear why this is needed, but without it we end up failing to filter\n            // certain matches that should be filtered (resulting in bad matches)\n            if (!Meta._UsePartialIndexing) {\n                this._keysMatchedMask = keyMask;\n            }\n\n        } else {\n            if (isBlank(newArr)) {\n                newArr = Match.EmptyMatchArray;\n            }\n            // Join\n            this._matches = this.join(newArr, prevMatches, keyMask,\n                this._prevMatch._keysMatchedMask);\n        }\n\n        // compute path CRC\n        this._matchPathCRC = -1;\n        for (let mr: MatchResult = this; mr != null; mr = mr._prevMatch) {\n            this._matchPathCRC = crc32(this._matchPathCRC, mr._keyData._key.length);\n\n            if (isPresent(mr._value)) {\n                let value = isArray(mr._value) ? mr._value.join(',') : mr._value;\n                this._matchPathCRC = crc32(this._matchPathCRC, hashCode(value));\n            }\n        }\n        if (this._matchPathCRC === 0) {\n            this._matchPathCRC = 1;\n        }\n        this._metaGeneration = this._meta.ruleSetGeneration;\n        this._properties = null;\n    }\n\n\n    _logMatchDiff(a: number[], b: number[]): void\n    {\n        let iA = 1, sizeA = a[0], iB = 1, sizeB = b[0];\n\n        while (iA <= sizeA || iB <= sizeB) {\n            let c = (iA > sizeA ? 1 : (iB > sizeB ? -1 : (a[iA] - b[iB])));\n            if (c === 0) {\n                iA++;\n                iB++;\n            } else if (c < 0) {\n                // If A not in B, but A doesn't filter on B's mask, then add it\n                print('  -- Only in A: ' + this._meta._rules[a[iA]]);\n                iA++;\n            } else {\n                print('  -- Only in B: ' + this._meta._rules[b[iB]]);\n                iB++;\n            }\n        }\n    }\n\n    properties(): PropertyMap\n    {\n        this._invalidateIfStale();\n        if (isBlank(this._properties)) {\n            this._properties = this._meta.propertiesForMatch(this);\n        }\n        return this._properties;\n    }\n\n    debugString(): string\n    {\n\n        let sj = new StringJoiner(['Match Result path: \\n']);\n        this._appendPrevPath(sj);\n\n        if (isPresent(this._overUnionMatch)) {\n            sj.add('\\nOverrides path: ');\n            this._overUnionMatch._appendPrevPath(sj);\n        }\n        return sj.toString();\n    }\n\n    _appendPrevPath(buf: StringJoiner): void\n    {\n        if (isPresent(this._prevMatch)) {\n            this._prevMatch._appendPrevPath(buf);\n            buf.add(' -> ');\n        }\n        buf.add(this._keyData._key);\n        buf.add('=');\n        buf.add(this._value);\n    }\n\n    _checkMatch(values: Map<string, any>, meta: Meta): void\n    {\n        let arr: number[] = this.filterResult();\n        if (isBlank(arr)) {\n            return;\n        }\n        // first entry is count\n        let count: number = arr[0];\n        for (let i = 0; i < count; i++) {\n            let r = this._meta._rules[arr[i + 1]];\n            r._checkRule(values, meta);\n        }\n\n    }\n\n\n    equalsTo(o: any): boolean\n    {\n        return (o instanceof MatchResult) && super.equalsTo(\n                o) && (o._metaGeneration === this._metaGeneration) &&\n            o._properties.size === this._properties.size;\n    }\n}\n\nexport class UnionMatchResult extends MatchResult\n{\n\n    constructor(meta: Meta, keyData: KeyData, value: any, prevMatch: MatchResult)\n    {\n        super(meta, keyData, value, prevMatch);\n    }\n\n\n    protected join(a: number[], b: number[], aMask: number, bMask: number): number[]\n    {\n        return Match.union(a, b);\n\n    }\n}\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {isBlank, isPresent, unimplemented} from '@aribaui/core';\n\n/**\n A map that masks on top of an (immutable) parent map\n */\nexport class NestedMap<K, V> implements Map<K, V>\n{\n    static readonly _NullMarker: any = {nesnullmarker: true};\n\n    [Symbol.toStringTag]: 'Map';\n\n    _overrideCount: number = 0;\n    private _size: number = 0;\n\n\n    static toMapEntry(iteratorResult: IteratorResult<any>): MapEntry\n    {\n        let value = iteratorResult.value;\n\n        if (isPresent(value) && NestedMap.isMapEntry(value)) {\n            return value;\n        }\n\n        let entry: MapEntry = {\n\n            key: (isPresent(\n                iteratorResult.value)) ? iteratorResult.value[0] : iteratorResult.value,\n            value: (isPresent(\n                iteratorResult.value)) ? iteratorResult.value[1] : iteratorResult.value,\n            hasNext: !iteratorResult.done\n        };\n        return entry;\n    }\n\n    static isMapEntry(value: any): value is MapEntry\n    {\n        return isPresent(value) && isPresent(value.hasNext);\n    }\n\n    static isNMNullMarker(value: any): boolean\n    {\n        return isPresent(value) && value['nesnullmarker'];\n    }\n\n    constructor(private _parent: Map<K, V>, private _map?: Map<K, any>)\n    {\n\n        if (isBlank(_map)) {\n            this._map = new Map <K, any>();\n        }\n    }\n\n    toMap(): Map<K, V>\n    {\n        return this._parent;\n    }\n\n\n    reparentedMap(newParent: Map<K, V>): NestedMap<K, V>\n    {\n        let newMap = new NestedMap<K, V>(newParent, this._map);\n        newMap._overrideCount = this._overrideCount;\n        return newMap;\n    }\n\n\n    get(key: K): any|V\n    {\n        let val = this._map.has(key) ? this._map.get(key) : this._parent.get(key);\n        return NestedMap.isNMNullMarker(val) ? null : val;\n    }\n\n\n    keys(): IterableIterator<K>\n    {\n        return unimplemented();\n    }\n\n\n    values(): IterableIterator<V>\n    {\n        return unimplemented();\n    }\n\n    clear(): void\n    {\n        this._parent.clear();\n        this._map.clear();\n    }\n\n    set(key: K, value?: V): any\n    {\n        let orig = this._map.get(key);\n\n        if ((NestedMap.isNMNullMarker(orig) || isBlank(orig)) && this._parent.has(key)) {\n            this._overrideCount += (NestedMap.isNMNullMarker(orig) ? -1 : 1);\n        }\n\n        this._map.set(key, value);\n\n        return this;\n    }\n\n\n    delete(key: K): boolean\n    {\n\n        let returnVal = false;\n        let orig: any = null;\n        if (this._map.has(key)) {\n            orig = this._map.delete(key);\n\n            returnVal = true;\n            // print('Removing: ' , orig);\n\n            if (this._parent.has(key)) {\n                this._map.set(key, NestedMap._NullMarker);\n                // _overrideCount--;\n                this._overrideCount++;\n            }\n\n        } else if (this._parent.has(key)) {\n            // we're \"removing\" a value we don't have (but that our parent does)\n            // we need to store a null override\n            orig = this._parent.get(key);\n            // print('Removing: ' , orig);\n            this._map.set(key, NestedMap._NullMarker);\n            this._overrideCount += 2;\n        }\n        return returnVal;\n    }\n\n    forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void\n    {\n\n        let entries = this.entries();\n\n        let nextEntry: MapEntry;\n        while ((nextEntry = NestedMap.toMapEntry(entries.next())) && nextEntry.hasNext) {\n            callbackfn(nextEntry.value, nextEntry.key, this._parent);\n        }\n    }\n\n\n    has(key: K): boolean\n    {\n\n        return this._map.has(key) ? ( !NestedMap.isNMNullMarker(\n                this._map.get(key)) ) : this._parent.has(key);\n    }\n\n\n    [Symbol.iterator](): IterableIterator<any>\n    {\n        return new NestedEntryIterator<K, V>(this);\n    }\n\n\n    entries(): IterableIterator<any>\n    {\n        return new NestedEntryIterator<K, V>(this);\n    }\n\n\n    get size(): number\n    {\n        return this._parent.size + this._map.size - this._overrideCount;\n    }\n\n    get map(): Map<K, Object>\n    {\n        return this._map;\n    }\n\n    get parent(): Map<K, V>\n    {\n        return this._parent;\n    }\n\n\n    toString(): string\n    {\n        return 'NestedMap';\n    }\n}\n\nexport interface MapEntry\n{\n    value: any;\n    key: any;\n    hasNext: boolean;\n}\n\nclass NestedEntryIterator<K, V> implements IterableIterator<MapEntry>\n{\n    _parentIterator: IterableIterator<any>;\n    _nestedIterator: IterableIterator<any>;\n    _currentEntry: MapEntry;\n    _nextEntry: MapEntry;\n    _fromNested: boolean;\n\n\n    _currentParentEntry: MapEntry;\n    _currentNestedEntry: MapEntry;\n\n    constructor(private _nestedMap: NestedMap<K, V>)\n    {\n        this._parentIterator = _nestedMap.parent.entries();\n        this._nestedIterator = _nestedMap.map.entries();\n\n        this.advanceToNext();\n    }\n\n\n    next(): IteratorResult<MapEntry>\n    {\n        // assert(isPresent(this._nextEntry) , 'next() when no more elements\"');\n\n        this._currentEntry = this._nextEntry;\n        this.advanceToNext();\n\n        let next: IteratorResult<MapEntry> = {\n            value: this._currentEntry,\n            done: !this._currentEntry.hasNext\n\n        };\n        return next;\n    }\n\n\n    [Symbol.iterator](): IterableIterator<MapEntry>\n    {\n        return this;\n    }\n\n    private advanceToNext()\n    {\n        this._fromNested = false;\n\n        // Note: we need to skip nulls (masked values)\n\n        while (!this._fromNested && (this._currentNestedEntry = NestedMap.toMapEntry(\n            this._nestedIterator.next())) && this._currentNestedEntry.hasNext) {\n            this._nextEntry = this._currentNestedEntry;\n            if (!NestedMap.isNMNullMarker(this._nextEntry.value)) {\n                this._fromNested = true;\n            }\n        }\n\n        if (!this._fromNested) {\n            while ((this._currentParentEntry = NestedMap.toMapEntry(\n                this._parentIterator.next())) && this._currentParentEntry.hasNext) {\n                this._nextEntry = this._currentParentEntry;\n\n                if (!this._nestedMap.map.has(this._nextEntry.key)) {\n                    return;\n                }\n            }\n\n            this._nextEntry = this._currentParentEntry;\n        }\n\n\n    }\n\n}\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {\n    BooleanWrapper,\n    evalExpressionWithCntx,\n    FieldPath,\n    isBlank,\n    isBoolean,\n    isFunction,\n    isNumber,\n    isPresent,\n    isString,\n    StringJoiner,\n    unimplemented\n} from '@aribaui/core';\nimport {isPropertyMapAwaking, Meta, PropertyMap, PropertyMapAwaking, PropertyMerger} from './meta';\nimport {Context} from './context';\n\n\nexport abstract class DynamicPropertyValue\n{\n    evaluate(context: Context): any\n    {\n        return unimplemented();\n    }\n\n    bind(context: any): void\n    {\n        return unimplemented();\n    }\n\n\n}\n\nexport interface DynamicSettablePropertyValue\n{\n    settable: boolean;\n\n    evaluateSet (context: Context, value: any): void;\n}\n\n/**\n * ;marker; interface for DynamicPropertyValues that depend only on their match context and\n * therefore can be computed and cached statically in the Context Activation tree\n */\nexport class StaticallyResolvable extends DynamicPropertyValue\n{\n\n\n}\n\n\nexport class StaticDynamicWrapper extends StaticallyResolvable implements PropertyMapAwaking\n{\n    private _cached: any;\n    propertyAwaking: boolean = true;\n\n    constructor(private _orig: StaticallyResolvable)\n    {\n        super();\n    }\n\n\n    getDynamicValue(): StaticallyResolvable\n    {\n        return this._orig;\n    }\n\n    awakeForPropertyMap(map: PropertyMap): any\n    {\n        // copy ourselves so there's a fresh copy for each context in which is appears\n\n        let origaw = (isPropertyMapAwaking(this._orig)) ?\n            <StaticallyResolvable>(<PropertyMapAwaking>this._orig).awakeForPropertyMap(map)\n            : this._orig;\n        return new StaticDynamicWrapper(origaw);\n    }\n\n    evaluate(context: Context): any\n    {\n        // we lazily static evaluate our value and cache the result\n        if (isBlank(this._cached)) {\n            this._cached = context.staticallyResolveValue(this._orig);\n        }\n        return this._cached;\n    }\n\n\n    toString(): string\n    {\n        let sj = new StringJoiner(['StaticDynamicWrapper']);\n        sj.add('(');\n        sj.add(((isPresent(this._cached)) ? this._cached : this._orig));\n        sj.add(((isBlank(this._cached)) ? ' unevaluated' : ''));\n        sj.add(')');\n\n        return sj.toString();\n    }\n\n}\n\n// Wrapper that marks a normally dynamic value (e.g. an Expr) as StaticallyResolvable\nexport class StaticallyResolvableWrapper extends StaticallyResolvable\n{\n\n    constructor(private _orig: DynamicPropertyValue)\n    {\n        super();\n    }\n\n    evaluate(context: Context): any\n    {\n        return this._orig.evaluate(context);\n    }\n\n    toString(): string\n    {\n        let sj = new StringJoiner(['StaticallyResolvableWrapper']);\n        sj.add('(');\n        sj.add(this._orig.toString());\n        sj.add(')');\n\n        return sj.toString();\n    }\n}\n\n\nexport class ContextFieldPath extends DynamicPropertyValue implements DynamicSettablePropertyValue\n{\n    settable: boolean = true;\n\n    protected fieldPath: FieldPath;\n\n    constructor(path: string)\n    {\n        super();\n\n        this.fieldPath = new FieldPath(path);\n    }\n\n    evaluate(context: Context): any\n    {\n        return this.fieldPath.getFieldValue(context);\n    }\n\n    evaluateSet(context: Context, value: any): void\n    {\n\n        this.fieldPath.setFieldValue(context, value);\n    }\n}\n\nexport function isDynamicSettable(arg: any): arg is DynamicSettablePropertyValue\n{\n    return isPresent(arg.settable);\n}\n\n\nexport class Expr extends DynamicPropertyValue\n{\n    private _extendedObjects: Map<string, any> = new Map<string, any>();\n\n    constructor(private _expressionString: string)\n    {\n        super();\n\n        this.addTypeToContext('Meta', Meta);\n        this.addTypeToContext('FieldPath', FieldPath);\n    }\n\n\n    addTypeToContext(name: string, context: any): void\n    {\n        if (isFunction(context)) {\n            this._extendedObjects.set(name, context);\n        }\n    }\n\n    evaluate(context: Context): any\n    {\n        let index = 0;\n        this._extendedObjects.forEach((v, k) =>\n        {\n            const typeName = `DynObj${index++}`;\n            (<any>context)[typeName] = v;\n\n            if (this._expressionString.indexOf(`${k}.`) !== -1) {\n                this._expressionString = this._expressionString.replace(`${k}.`, `${typeName}.`);\n            }\n        });\n\n        let result = evalExpressionWithCntx(this._expressionString, '', context, context);\n\n        index = 0;\n        this._extendedObjects.forEach((v, k) =>\n        {\n            const typeName = `DynObj${index++}`;\n            if (isPresent((<any>context)[typeName])) {\n                delete (<any>context)[typeName];\n                // check if we can use undefined. Delete is pretty slow\n            }\n        });\n        return result;\n    }\n\n    toString(): string\n    {\n        let sj = new StringJoiner(['expr:']);\n        sj.add('(');\n        sj.add(this._expressionString);\n        sj.add(')');\n\n        return sj.toString();\n    }\n}\n\nexport class DeferredOperationChain extends DynamicPropertyValue implements PropertyMapAwaking\n{\n    propertyAwaking: boolean = true;\n\n    constructor(private _merger: PropertyMerger, private _orig: any, private _override: any)\n    {\n        super();\n    }\n\n\n    evaluate(context: Context): any\n    {\n        return this._merger.merge(context.resolveValue(this._override),\n            context.resolveValue(this._orig),\n            context.isDeclare());\n    }\n\n\n    awakeForPropertyMap(map: PropertyMap): any\n    {\n        let orig = this._orig;\n        let over = this._override;\n\n        if (isPropertyMapAwaking(orig)) {\n            orig = (<PropertyMapAwaking>orig).awakeForPropertyMap(map);\n        }\n        if (isPropertyMapAwaking(over)) {\n            over = (<PropertyMapAwaking>over).awakeForPropertyMap(map);\n        }\n        if (orig !== this._orig || over !== this._override) {\n            return new DeferredOperationChain(this._merger, orig, over);\n        }\n        return this;\n    }\n\n\n    toString(): string\n    {\n        let sj = new StringJoiner(['Chain']);\n        sj.add('<');\n        sj.add(this._merger.toString());\n        sj.add('>');\n        sj.add(': ');\n        sj.add(this._override);\n        sj.add(' => ');\n        sj.add(this._orig);\n\n        return sj.toString();\n    }\n\n}\n\n\nexport class ValueConverter\n{\n\n    static value(toType: string, value: any): any\n    {\n\n        if (toType === 'String') {\n            if (isBlank(value) || isString(value)) {\n                return value;\n            }\n            return value.toString();\n\n        } else if (toType === 'Boolean') {\n            if (isBlank(value) || isBoolean(value)) {\n                return value;\n            }\n\n            return BooleanWrapper.boleanValue(value);\n\n        } else if (toType === 'Number') {\n            if (isBlank(value) || isNumber(value)) {\n                return value;\n            }\n\n            // ignore dec. points for now\n            return parseInt(value.toString());\n        }\n        return value;\n\n    }\n}\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\n/**\n * Special import to be able to convert string to type using Collections[string type] => type\n */\nimport * as Collections from 'typescript-collections';\nimport {\n    assert,\n    BooleanWrapper, className,\n    Extensible,\n    FieldPath,\n    isArray,\n    isBlank,\n    isNumber,\n    isPresent,\n    isString,\n    isStringMap,\n    ListWrapper,\n    MapWrapper,\n    objectToName,\n    print,\n    StringJoiner\n} from '@aribaui/core';\nimport {MatchResult, UnionMatchResult} from './match';\nimport {Meta, OverrideValue, PropertyManager, PropertyMap} from './meta';\nimport {ObjectMeta, ObjectMetaPropertyMap} from './object-meta';\nimport {UIMeta} from './uimeta';\nimport {NestedMap} from './nested-map';\nimport {\n    DynamicPropertyValue,\n    DynamicSettablePropertyValue,\n    Expr,\n    isDynamicSettable,\n    StaticallyResolvable\n} from './property-value';\n\n/**\n *\n * Context represents a stack of assignments (e.g. class=User, field=birthDay, operation=edit)\n *  The current set of assignments can be retrieved via values().\n *\n * The current values are run against the Meta rule set to compute the effective PropertyMap\n * (e.g. visible:true, editable:true, component:AWTextField).\n * Some rule evaluations result in *chaining* -- where additional assignments that are\n * 'implied' by the current assignments are applied, (resulting in a revised computation\n * of the current PropertyMap, and possible further chaining).\n * (e.g. field=birthDay may result in type=Date which may result in component:DatePicker)\n *\n * Assignments can be scoped and popped (push(), set(key, value); ...; pop()).\n *\n * The actual computation of rule matches is cached so once a 'path' down the context\n * tree has been exercized subsequent matching traversals (even by other threads/users)\n * is fast.\n *\n *\n * examples of property maps for different scope key\n *\n * <code>\n *     {\n        'visible': true,\n        'class_trait': 'fiveZones',\n        'editable': true,\n        'bindings': {\n            'value': 'Default Title'\n        },\n        'field_trait': 'required',\n        'label': 'Title',\n        'type': 'string',\n        'required': true,\n        'editing': true,\n        'valid': '{{(value && value.length > 0) ? true : \\'Answer required\\'}}',\n        'component': 'InputFieldComponent',\n        'field': 'title',\n        'layout_trait': 'Form',\n        'trait': 'required',\n        'rank': 20,\n        'after': 'zLeft',\n        'class': 'CheckRequest1'\n    }\n *\n * </code>\n *\n *\n *\n * <code>\n *     {\n        'visible': true,\n        'class_trait': 'fiveZones',\n        'label': 'Check Request1',\n        'zones': [\n            'zLeft',\n            'zRight',\n            'zTop',\n            'zBottom',\n            'zDetail'\n        ],\n        'editing': true,\n        'layout': '*',\n        'component': 'MetaFormComponent',\n        'layout_trait': 'Form',\n        'fiveZoneLayout': true,\n        'trait': 'fiveZones',\n        'layoutsByZone': {\n\n        },\n        'class': 'CheckRequest1',\n        'fieldsByZone': {\n            'zLeft': [\n                'title',\n                'name'\n            ],\n            'zNone': [\n                'fullName'\n            ]\n        }\n    }\n *\n * </code>\n *\n *\n *\n */\nexport class Context extends Extensible {\n    private static _CacheActivations: boolean = false;\n\n\n    static _ExpensiveContextConsistencyChecksEnabled: boolean = false;\n    static _DebugRuleMatches: boolean = false;\n    static _Debug_SetsCount: number = 0;\n\n\n    static MaxContextStackSize: number = 200;\n\n    static EmptyMap: PropertyMap = null;\n    static readonly EmptyRemoveMap: Map<any, any> = new Map<any, any>();\n\n    private _values: Map<string, any> = new Map<string, any>();\n    _entries: Array<Assignment> = [];\n    private _frameStarts: number[] = [];\n    protected _currentProperties: PropertyMap;\n    protected _rootNode: Activation;\n    private _currentActivation: Activation;\n    private _recPool: Array<Assignment> = [];\n\n    _accessor: PropertyAccessor;\n\n    isNested: boolean;\n\n\n    /**\n     * Implementation notes:\n     *\n     * Context maintains a stack (_entries) of _ContextRecs (one per assignment) as well as\n     * as _frameStack recording the stack positions for each push()/pop().\n\n     * Performance through aggressive global caching of all statically computatble data:\n     * - The static (reusable/immutable) part of a ContextRec is factored into _StaticRec\n     * - StaticRecs represent individual assignments (context key = value) and cache the\n     *      resulting Meta.MatchResult (and associated PropertyMap)\n     * - The sub-stack (of forward chained) records associated with each external set()\n     *      (or chained *dynamic* value) is recorded in an Activation.\n     * - Process-global tree of Activations\n     *      - each activation keeps list of its ContextKey/Value-keyed decended Activations\n     *\n     * Property Contexts.\n     *      The notion of a 'PropertyContext' makes the going tricky...\n     *       A 'PropertyContextKey' is a key for an 'entity' that properties describe.\n     *       (e.g. class, field, action, and layout are property context keys, but editing,\n     *       operation, ... are not)\n     *       E.g. On an assignment stack with module=Admin class=Foo, field=name, editable=false,\n     *       we want the property 'label' to be the label for the *field*, not the class or module\n     *       -- i.e. the *top-most* assignment of a PropertyContextKey determines which property\n     *       context rules are active.\n     *\n     *  These rules are activated via a synthetic context key of like 'field_p' or 'class_p'.\n     *  Logically, after each assigment we need to figure of which context key should be in\n     *  affect an set it on the context, but then automatically pop it off upon the next\n     *  assignment (and then recompute again).\n     *\n     *  Of course, actually pushing and popping context key assignment on every set()\n     *  would be expensive so instead we cache the 'propertyActivation' associated with\n     *  each activation, and use its values and properties rather than those on the\n     *  activation.\n     */\n\n    static getActivationTree(meta: Meta): Activation {\n        // todo: check the syntax Actionvation contructor name.\n        let name = objectToName(Activation);\n        let root: Activation = meta.identityCache.getValue(name);\n        if (isBlank(root)) {\n            root = new Activation();\n            meta.identityCache.setValue(name, root);\n        }\n        return root;\n    }\n\n\n    constructor(private _meta: Meta, private nested: boolean = false) {\n        super();\n\n        if (isBlank(Context.EmptyMap)) {\n            Context.EmptyMap = new PropertyMap();\n        }\n\n        Context._Debug_SetsCount = 0;\n\n        this._accessor = new PropertyAccessor(this);\n        this._currentActivation = Context.getActivationTree(_meta);\n        this._rootNode = this._currentActivation;\n\n        this.isNested = nested;\n    }\n\n\n    push(): void {\n        this._frameStarts.push(this._entries.length);\n    }\n\n    get meta(): Meta {\n        return this._meta;\n    }\n\n\n    pop(): void {\n        let size = this._frameStarts.length;\n        assert(size > 0, 'Popping empty stack');\n\n        let pos = this._frameStarts.pop();\n\n        let entriesSize: number;\n        while ((entriesSize = this._entries.length) > pos) {\n            let recIdx = entriesSize - 1;\n            let rec: Assignment = this._entries.splice(recIdx, 1)[0];\n\n            if (rec.srec.lastAssignmentIdx === -1) {\n                this._values.delete(rec.srec.key);\n            } else {\n                this._undoOverride(rec, recIdx);\n            }\n\n            this._currentActivation = (recIdx > 0)\n                ? this._entries[recIdx - 1].srec.activation\n                : this._rootNode;\n\n            this.assertContextConsistent();\n\n            // check rec back into pool for reuse\n            rec.reset();\n            this._recPool.push(rec);\n        }\n\n        this._currentProperties = null;\n    }\n\n\n    set(key: string, value: any): void {\n\n        this._set(key, value, false, false);\n\n        // implement default toString for our object so we can retrieve objectTitle\n        if (key === ObjectMeta.KeyObject) {\n            let toCheck = this._values.get(ObjectMeta.KeyObject);\n            if (isBlank(toCheck['$toString'])) {\n                toCheck['$toString'] = () => {\n                    let clazz = this.values.get(ObjectMeta.KeyClass);\n                    return UIMeta.beautifyClassName(clazz);\n                };\n            }\n        }\n    }\n\n\n    merge(key: string, value: any): void {\n        this._set(key, value, true, false);\n    }\n\n    setScopeKey(key: string) {\n        assert(this._meta.keyData(key).isPropertyScope, key + ' is not a valid context key');\n        let current: string = this._currentPropertyScopeKey();\n\n        // Assert.that(current != null, 'Can't set %s as context key when no context key on stack',\n        // key); TODO: if current key isChaining then we need to set again to get a non-chaining\n        // assignment\n\n        if (!(key === current)) {\n            let val: any = this.values.get(key);\n            // Assert.that(val != null, 'Can't set %s as context key when it has no value already\n            // on the context', key);\n            if (isBlank(val)) {\n                val = Meta.KeyAny;\n            }\n            this.set(key, val);\n        }\n    }\n\n    get values(): Map<string, any> {\n        let propVals: Map<string, any>;\n        return (ListWrapper.isEmpty(this._entries) ||\n            isBlank(\n                propVals = (ListWrapper.last<Assignment>(this._entries)).propertyLocalValues(\n                    this))) ? this._values : propVals;\n    }\n\n    get properties(): any {\n        return this._accessor;\n    }\n\n\n    propertyForKey(key: string): any {\n        let val = this.allProperties().get(key);\n\n        return this.resolveValue(val);\n    }\n\n    listPropertyForKey(key: string): Array<any> {\n        let val = this.propertyForKey(key);\n        return (isBlank(val)) ? [] : (isArray(val)) ? val : [val];\n    }\n\n    booleanPropertyForKey(key: string, defaultVal: boolean): boolean {\n        let val = this.propertyForKey(key);\n        return (isBlank(val)) ? defaultVal : BooleanWrapper.boleanValue(val);\n    }\n\n\n    allProperties(): PropertyMap {\n        if (isBlank(this._currentProperties)) {\n            let m: MatchResult = this.lastMatch();\n            if (isPresent(m)) {\n                this._currentProperties = m.properties();\n\n            }\n        }\n        return isPresent(this._currentProperties) ? this._currentProperties : Context.EmptyMap;\n    }\n\n\n    resolveValue(value: any | DynamicPropertyValue): any {\n        let lastValue: any;\n        while (value !== lastValue && isPresent(value) && value instanceof DynamicPropertyValue) {\n            lastValue = value;\n\n            let propValue: DynamicPropertyValue = value;\n            if (propValue instanceof Expr) {\n                propValue.addTypeToContext('UIMeta', UIMeta);\n            }\n            value = propValue.evaluate(this);\n        }\n\n        return value;\n    }\n\n\n    staticallyResolveValue(value: any | StaticallyResolvable): any {\n        let lastValue: any = null;\n        while (value !== lastValue && isPresent(value) && value instanceof StaticallyResolvable) {\n            lastValue = value;\n            value = value.evaluate(this);\n        }\n        return value;\n    }\n\n    pushAndResolveStatic(contextVals: Map<string, any>, propertyKey: string,\n                         staticResolve: boolean): any {\n        let scopeKey: string;\n        this.push();\n\n        MapWrapper.iterable(contextVals).forEach((value, key) => {\n            if ('*' === value) {\n                scopeKey = key;\n            } else {\n                this.set(key, value);\n            }\n        });\n\n        if (isPresent(scopeKey)) {\n            this.setScopeKey(scopeKey);\n        }\n        let val = this.allProperties().get(propertyKey);\n        val = staticResolve ? this.staticallyResolveValue(val) : this.resolveValue(val);\n        this.pop();\n\n        return val;\n\n    }\n\n    pushAndResolve(contextVals: Map<string, any>, propertyKey: string): any {\n        return this.pushAndResolveStatic(contextVals, propertyKey, false);\n    }\n\n    // a (usable) snapshot of the current state of the context\n    snapshot(): Snapshot {\n        return new Snapshot(this);\n    }\n\n\n    /**\n     * Represent current active assignment list meaning it will not include any entries which\n     * were overwritten by some late entry having the same key.\n     *\n     * It does not include entries that were pushed to stack from any Property -> Selector\n     * propagation. This creates shell copy and ignoring all last Matches which could be from\n     * some previous assignments that are now replaced with some new ones\n     *\n     */\n    activeAssignments(): Array<AssignmentSnapshot> {\n\n        let list: Array<AssignmentSnapshot> = new Array<AssignmentSnapshot>();\n\n        for (let i = 0, c = this._entries.length; i < c; i++) {\n            let rec: Assignment = this._entries[i];\n            if (rec.maskedByIdx === 0 && !rec.srec.fromChaining) {\n                let a: AssignmentSnapshot = new AssignmentSnapshot();\n                a.key = rec.srec.key;\n                a.value = rec.val;\n                a.salience = rec.srec.salience;\n                list.push(a);\n            }\n        }\n        return list;\n    }\n\n\n    /**\n     *\n     * Similar as <code>activeAssignments</code> but do include also those that were replaced later\n     * on with assignments having the same key.\n     *\n     * This is needed for cases where we need to have deep copy of current state along with\n     * all properties.\n     *\n     */\n    allAssignments(): Array<AssignmentSnapshot> {\n\n        let list: Array<AssignmentSnapshot> = new Array<AssignmentSnapshot>();\n\n        for (let i = 0, c = this._entries.length; i < c; i++) {\n            let rec: Assignment = this._entries[i];\n            if (!rec.srec.fromChaining) {\n                let a: AssignmentSnapshot = new AssignmentSnapshot();\n                a.key = rec.srec.key;\n                a.value = rec.val;\n                a.salience = rec.srec.salience;\n                list.push(a);\n            }\n        }\n        return list;\n    }\n\n\n    _set(key: string, value: any, merge: boolean, chaining: boolean): void {\n        let sval = this._meta.transformValue(key, value);\n        let didSet = false;\n\n        let registry = (<UIMeta>this.meta).componentRegistry;\n        if (key === ObjectMeta.KeyObject && isPresent(registry)) {\n            registry.registerType(className(value), value.constructor);\n        }\n\n        let activation: Activation = this._currentActivation.getChildActivation(key, sval,\n            chaining);\n\n        if (isBlank(activation)) {\n            didSet = this._createNewFrameForSet(key, sval, value, merge, chaining);\n        }\n        if (isPresent(activation)) {\n            didSet = this._applyActivation(activation, value);\n        }\n\n        if (didSet) {\n            this.awakeCurrentActivation();\n        }\n    }\n\n    newContextRec(): Assignment {\n        let count = this._recPool.length;\n        return (count > 0) ? this._recPool.splice(count - 1, 1)[0] : new Assignment();\n    }\n\n\n    /**\n     * Cached case: apply a previously computed Activation\n     */\n    _applyActivation(activation: Activation, firstVal: any): boolean {\n        assert(activation._parent === this._currentActivation,\n            'Attempt to apply activation on mismatched parent');\n\n        if (this._entries.length !== activation._origEntryCount) {\n            assert(false,\n                'Mismatched context stack size (%s) from when activation was popped ' +\n                this._entries.length + ' ' + activation._origEntryCount);\n        }\n        let count = activation._recs.length;\n        if (count === 0) {\n            return false;\n        }\n        for (let i = 0; i < count; i++) {\n            let srec: StaticRec = activation._recs[i];\n            let rec: Assignment = this.newContextRec();\n            rec.srec = srec;\n\n            // Apply masking for any property that we mask out\n            if (srec.lastAssignmentIdx !== -1) {\n                this._prepareForOverride(this._entries.length, srec.lastAssignmentIdx);\n            }\n\n\n            rec.val = (i === 0 && !this.meta.isNullMarker(firstVal)) ? firstVal : srec.val;\n            this._values.set(srec.key, rec.val);\n            this._entries.push(rec);\n        }\n        this._currentActivation = activation;\n        this._currentProperties = null;\n\n        return true;\n    }\n\n\n    private awakeCurrentActivation(): void {\n        // See if this activation requires further chaining\n        let currentActivation = this._currentActivation;\n        let deferredAssignments: Array<DeferredAssignment> = currentActivation.deferredAssignments;\n        if (isPresent(deferredAssignments)) {\n            this.applyDeferredAssignments(deferredAssignments);\n        }\n    }\n\n    private applyDeferredAssignments(deferredAssignments: Array<DeferredAssignment>): void {\n        for (let da of  deferredAssignments) {\n            // verify that deferred value still applies\n            let currentPropValue = this.staticallyResolveValue(this.allProperties().get(da.key));\n\n            if (da.value === currentPropValue) {\n\n                let resolvedValue = this.resolveValue(da.value);\n\n                this._set(da.key, resolvedValue, false, true);\n            } else {\n                // print('_set SKIPPING deferred assignment of derived value: %s <- %s --' +\n                //     ' no longer matches property in context: %s' , da.key , da.value ,\n                // currentPropValue);\n            }\n        }\n    }\n\n\n    _inDeclare(): boolean {\n        let match: MatchResult = this.lastMatchWithoutContextProps();\n        return isPresent(match) && (match._keysMatchedMask & this._meta.declareKeyMask) !== 0;\n    }\n\n\n    /**\n     Non-cached access: create a new activation\n     */\n    _createNewFrameForSet(key: string, svalue: any, value: any, merge: boolean,\n                          chaining: any): boolean {\n        let lastActivation: Activation = this._currentActivation;\n        let newActivation: Activation = new Activation(lastActivation);\n        newActivation._origEntryCount = this._entries.length;\n        this._currentActivation = newActivation;\n\n        // set this value\n        let didSet: boolean = this._set2(key, svalue, value, merge, chaining);\n        // mirror properties\n        if (didSet) {\n            while (this._checkApplyProperties()) {\n                /* repeat */\n            }\n        }\n\n        // Remember for the future\n        if (Context._CacheActivations) {\n            lastActivation.cacheChildActivation(key, svalue, newActivation, chaining);\n        }\n        this._currentActivation = (didSet) ? newActivation : lastActivation;\n        return this._currentActivation !== lastActivation;\n    }\n\n\n    /**\n     * Called lazily to compute the property activation for this activation\n     * Compute the static part of the property activation\n     * we accumulate the property settings on a side activation off the main stack\n     * and apply it virtually if our parent is not covered\n     *  (that way we don't have to apply and unapply all the time)\n     */\n    _createNewPropertyContextActivation(parentActivation: Activation): Activation {\n\n        this.push();\n        let propActivation: Activation = new Activation(parentActivation);\n        propActivation._origEntryCount = this._entries.length;\n\n        this._currentActivation = propActivation;\n        let origValues = this._values;\n\n        let nestedMap: NestedMap<string, any> = new NestedMap<string, any>(origValues);\n        this._values = nestedMap;\n        this.applyPropertyContextAndChain();\n\n        if (propActivation._recs.length > 0 || isPresent(propActivation.deferredAssignments)) {\n            propActivation._nestedValues = nestedMap;\n            this._values = Context.EmptyRemoveMap;  // hack -- empty map so that undo is noop --\n                                                    // ((NestedMap)_values).dup();\n        } else {\n            propActivation = null;\n        }\n        this.pop();\n        this._values = origValues;\n        this._currentActivation = parentActivation;\n\n        return propActivation;\n    }\n\n    _applyPropertyActivation(propActivation: Activation, rec: Assignment) {\n        let propValues = this._values;\n        if (isPresent(propActivation._nestedValues)) {\n            propValues = propActivation._nestedValues.reparentedMap(propValues);\n        }\n\n        // set up propLocal results\n        // Now, see if we need to compute a dynamic property activation as well\n        if (isPresent(propActivation.deferredAssignments)) {\n            this.push();\n            // nest a dynamic nested map on our static nested map (which is on our last dynamic\n            // nested map...)\n            let origValues = this._values;\n            this._values = new NestedMap<string, any>(propValues);\n            this._applyActivation(propActivation, Meta.NullMarker);\n            this.applyDeferredAssignments(propActivation.deferredAssignments);\n\n            rec._propertyLocalValues = this._values;\n            rec._propertyLocalSrec = ListWrapper.last(this._entries).srec;\n\n            this._values = Context.EmptyRemoveMap;  // hack -- empty map so that undo is noop --\n                                                    // ((NestedMap)_values).dup();\n            this.pop();\n            this._values = origValues;\n\n        } else {\n            // can use static versions\n            rec._propertyLocalValues = propValues;\n            rec._propertyLocalSrec = ListWrapper.last(propActivation._recs);\n        }\n    }\n\n    // todo: any equals old va === new val\n    _isNewValue(oldVal: any, newVal: any): boolean {\n        return (oldVal !== newVal && (isPresent(oldVal) ||\n            (!oldVal === newVal && (!isArray(oldVal)) || !(ListWrapper.contains(oldVal, newVal)))));\n    }\n\n\n    isDeclare(): boolean {\n        return isPresent(this.propertyForKey(Meta.KeyDeclare));\n    }\n\n\n    protected assertContextConsistent(): void {\n        if (!Context._ExpensiveContextConsistencyChecksEnabled) {\n            return;\n        }\n\n        // Verify that each value in context has matching (enabled) context record\n\n\n        MapWrapper.iterable(this._values).forEach((value, key) => {\n            let lastAssignmentIdx = this.findLastAssignmentOfKey(key);\n            assert(lastAssignmentIdx >= 0, 'Value in context but no assignment record found ' +\n                key + ' = ' + value);\n\n            let contextVal = this._entries[lastAssignmentIdx].val;\n\n            assert(value === contextVal || (isPresent(value) && value === contextVal),\n                'Value in context  doesnt match value on stack ' + value + ' / ' + contextVal);\n\n        });\n\n        // check entries for proper relationship with any previous records that they override\n        for (let i = this._entries.length - 1; i >= 0; i--) {\n            let r: Assignment = this._entries[i];\n            let foundFirst = false;\n\n            for (let j = i - 1; j >= 0; j--) {\n                let pred: Assignment = this._entries[j];\n                if (pred.srec.key === r.srec.key) {\n                    // Predecessors must be masked\n                    assert((!foundFirst && pred.maskedByIdx === i) ||\n                        ((foundFirst || pred.srec.fromChaining) && pred.maskedByIdx > 0),\n\n                        'Predecessor A does not have matching maskedByIdx B  for override C:' +\n                        pred.srec.key + ' = ' + pred.val + ', ' + pred.maskedByIdx + ', ' +\n                        i + ' = ' + r.val\n                    );\n\n                    assert(((!foundFirst && r.srec.lastAssignmentIdx === j) || foundFirst ||\n                        pred.srec.fromChaining),\n\n                        'Override A1=A2 does not have proper lastAssignmentIdx B1!=B2 ' +\n                        'for predecessor C' +\n                        pred.srec.key + ' = ' + pred.val + ', ' + r.srec.lastAssignmentIdx + ' = ' +\n                        j + ', ' + pred.val);\n                    foundFirst = true;\n                }\n            }\n        }\n    }\n\n\n    _set2(key: string, svalue: any, value: any, merge: boolean, isChaining: boolean): boolean {\n\n        Context._Debug_SetsCount++;\n        // print('Setting key/vale onto stack: ' + key + '=' + value);\n        let hasOldValue = this._values.has(key) && isPresent(this._values.get(key));\n        let oldVal = hasOldValue ? this._values.get(key) : null;\n\n        let isNewValue = !hasOldValue || this._isNewValue(oldVal, value);\n\n        let matchingPropKeyAssignment = !isNewValue && !isChaining &&\n            ((this._meta.keyData(key).isPropertyScope) &&\n                key !== this._currentPropertyScopeKey());\n        if (isNewValue || matchingPropKeyAssignment) {\n            let lastMatch: MatchResult;\n            let newMatch: MatchResult;\n\n            let salience = this._frameStarts.length;\n            let lastAssignmentIdx = -1;\n            if (isBlank(oldVal)) {\n                lastMatch = this.lastMatchWithoutContextProps();\n\n            } else {\n                // We recompute that match up to this point by recomputing forward\n                // from the point of the last assignment to this key (skipping it), then\n                // match against the array of our value and the old\n\n                let recIdx = this._entries.length;\n                lastAssignmentIdx = this.findLastAssignmentOfKey(key);\n                assert(lastAssignmentIdx >= 0,\n                    'Value in context but no assignment record found ' + key + ' = ' + oldVal);\n\n                if (matchingPropKeyAssignment) {\n                    // cheap version of masking for a matching set:\n                    this._entries[lastAssignmentIdx].maskedByIdx = recIdx;\n                    lastMatch = this.lastMatchWithoutContextProps();\n\n                } else {\n                    // be able to override a non-chaining assignment.  Our problem is, though, if\n                    // the developer wanted to force a re-assignment in the new frame, we'd filter\n                    // it out as a duplicate assignment above.  Now, we could allow that assignment\n                    // through, but it would then break inletiants when searching back to mask a\n                    // key (we wouldn't realize that we need to go further back to find the\n                    // original one).\n\n                    let oldRec: Assignment = this._entries[lastAssignmentIdx];\n\n                    if (oldRec.srec.salience === salience) {\n                        let prev = this.findLastAssignmentOfKeyWithValue(key, value);\n\n                        if (prev !== -1 && this._entries[prev].srec.salience === salience) {\n                            return false;\n                        }\n                    }\n\n                    if (isChaining &&\n                        (oldRec.srec.salience > salience || !oldRec.srec.fromChaining)) {\n                        // print('Set of key skipped (salience %s <= %s)' + key + ', ' + oldVal +\n                        // ', ' + value + ', ' + salience + ', ' + oldRec.srec.salience);\n                        return false;\n                    }\n                    let firstAssignmentIdx = this._prepareForOverride(recIdx, lastAssignmentIdx);\n                    newMatch = this._rematchForOverride(key, svalue, recIdx, firstAssignmentIdx);\n\n                    if (merge) {\n                        value = Meta.PropertyMerger_List.merge(oldVal, value, this.isDeclare());\n                    }\n                }\n            }\n\n            assert(this._entries.length <= Context.MaxContextStackSize,\n                'MetaUI context stack exceeded max size -- likely infinite chaining: ' +\n                this._entries.length\n            );\n            let srec: StaticRec = new StaticRec();\n            srec.key = key;\n            // todo: conversion\n            srec.val = svalue;\n            srec.lastAssignmentIdx = lastAssignmentIdx;\n            srec.salience = salience;\n            srec.fromChaining = isChaining;\n\n            if (isBlank(newMatch)) {\n                newMatch = (isPresent(value)) ? this._meta.match(key, svalue,\n                    lastMatch) : lastMatch;\n            }\n            srec.match = newMatch;\n            srec.activation = this._currentActivation;\n            this._currentActivation._recs.push(srec);\n\n            let rec = this.newContextRec();\n            rec.srec = srec;\n            rec.val = value;\n            this._entries.push(rec);\n            this._currentProperties = null;\n\n            this._values.set(key, value);\n\n            // console.log( this.debugName + ' => ' +\n            //     'Push(' + key + ', ' + svalue + '): ' + 'Matches: ' + newMatch.matches().length\n            //     + ', PropMap: ' + srec.properties().size);\n\n            if (Context._DebugRuleMatches) {\n                this._checkMatch(srec.match, key, value);\n            }\n            this.assertContextConsistent();\n            return true;\n        } else {\n\n            // print('Context skipped assignment of matching property value %s = %s (isChaining ==\n            // %s, isPropKey == %s)', key, value, isChaining,\n            // (this._meta.keyData(key).isPropertyScope));\n\n            if (!isChaining && this.meta.keyData(key).isPropertyScope) {\n                // slam down a rec for property context\n            }\n        }\n        return false;\n    }\n\n\n    get frameStarts(): number[] {\n        return this._frameStarts;\n    }\n\n    _undoRecValue(rec: Assignment): void {\n        if (rec.srec.lastAssignmentIdx === -1 ||\n            this._entries[rec.srec.lastAssignmentIdx].maskedByIdx > 0) {\n            this._values.delete(rec.srec.key);\n        } else {\n            this._values.set(rec.srec.key, this._entries[rec.srec.lastAssignmentIdx].val);\n        }\n    }\n\n\n    // Undoes and masks assignments invalidated by override of given record\n    // Returns stack index for first assignment (i.e. where match recomputation must start)\n    _prepareForOverride(overrideIndex: number, lastAssignmentIdx: number): number {\n        // if we're overriding a prop context override of a matching value, back up further\n        let lastLastIdx = 0;\n        while (((lastLastIdx = this._entries[lastAssignmentIdx].srec.lastAssignmentIdx) !== -1) &&\n        (this._entries[lastAssignmentIdx].maskedByIdx <= 0)) {\n            // mark it! (we'll pick it up below...)\n            this._entries[lastAssignmentIdx].maskedByIdx = -1;\n            lastAssignmentIdx = lastLastIdx;\n        }\n\n        // undo all conflicting or dervied assignments (and mark them)\n        for (let i = this._entries.length - 1; i >= lastAssignmentIdx; i--) {\n            let r = this._entries[i];\n            // we need to undo (and mask) any record that conflict or are derived\n            // NOTE: We are skipping the remove all chained records, because this can result in\n            // undoing derived state totally unrelated to this key.  Ideally we'd figure out what\n            // depended on what...\n            if (r.maskedByIdx <= 0 && (i === lastAssignmentIdx || r.maskedByIdx === -1)) {\n                // || r.srec.fromChaining\n                // mark and undo it\n                r.maskedByIdx = overrideIndex;\n                this._undoRecValue(r);\n            }\n        }\n        return lastAssignmentIdx;\n    }\n\n\n    _rematchForOverride(key: string, svalue: any, overrideIndex: number,\n                        firstAssignmentIdx: number): MatchResult {\n        // start from the top down looking for that last unmasked record\n        let lastMatch: MatchResult;\n        let i = 0;\n        for (; i < firstAssignmentIdx; i++) {\n            let rec = this._entries[i];\n            if (rec.maskedByIdx !== 0) {\n                break;\n            }\n            lastMatch = rec.srec.match;\n        }\n\n        let overridesMatch: UnionMatchResult;\n\n        // Rematch skipping over the last assignment of this property\n        // and all assignments from chainging\n        for (let end = this._entries.length; i < end; i++) {\n            let r: Assignment = this._entries[i];\n            // rematch on any unmasked records\n            if (r.maskedByIdx === 0) {\n                lastMatch = this._meta.match(r.srec.key, r.srec.val, lastMatch);\n            } else {\n                // accumulate masked ('_o') match\n                overridesMatch = this._meta.unionOverrideMatch(r.srec.key, r.srec.val,\n                    overridesMatch);\n            }\n        }\n\n        if (isPresent(svalue) || isBlank(lastMatch)) {\n            lastMatch = this._meta.match(key, svalue, lastMatch);\n        }\n        lastMatch.setOverridesMatch(overridesMatch);\n        return lastMatch;\n    }\n\n\n    private _undoOverride(rec: Assignment, recIdx: number) {\n        let lastAssignmentIdx = rec.srec.lastAssignmentIdx;\n        let lastLastIdx: number;\n\n\n        // bastick up further if necessary\n        while (((lastLastIdx = this._entries[lastAssignmentIdx].srec.lastAssignmentIdx) !== -1) &&\n        (this._entries[lastLastIdx].maskedByIdx === recIdx)) {\n            lastAssignmentIdx = lastLastIdx;\n        }\n\n        for (let i = lastAssignmentIdx, c = this._entries.length; i < c; i++) {\n            let r: Assignment = this._entries[i];\n\n            if (r.maskedByIdx === recIdx) {\n                this._values.set(r.srec.key, r.val);\n                r.maskedByIdx = 0;\n            }\n        }\n    }\n\n\n    _checkMatch(match: MatchResult, key: string, value: any): void {\n        match._checkMatch(this._values, this._meta);\n    }\n\n    findLastAssignmentOfKey(key: string): number {\n        for (let i = this._entries.length - 1; i >= 0; i--) {\n            let rec: Assignment = this._entries[i];\n            if (rec.srec.key === key && rec.maskedByIdx === 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    findLastAssignmentOfKeyWithValue(key: string, value: any): number {\n        for (let i = this._entries.length - 1; i >= 0; i--) {\n            let rec: Assignment = this._entries[i];\n            if (rec.srec.key === key && !this._isNewValue(rec.val, value)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n\n    /**\n     * Check if we have value mirroring (property to context) to do Dynamic property mirroring will\n     * be added to the currentActivation deferredAssignment list\n     *\n     */\n    _checkApplyProperties(): boolean {\n\n        let didSet = false;\n        let numEntries = 0;\n        let lastSize = 0;\n        let declareKey: string = this._inDeclare() ? this._values.get(Meta.KeyDeclare) : null;\n\n        while ((numEntries = this._entries.length) > lastSize) {\n            lastSize = numEntries;\n            let rec: Assignment = this._entries[numEntries - 1];\n            let properties: PropertyMap = rec.srec.properties();\n\n            let contextKeys: Array<PropertyManager> = properties.contextKeysUpdated;\n\n            if (isPresent(contextKeys)) {\n\n                for (let i = 0, c = contextKeys.length; i < c; i++) {\n\n                    let propMgr: PropertyManager = contextKeys[i];\n                    let key: string = propMgr._name;\n                    if (isPresent(declareKey) && key === declareKey) {\n                        continue;\n                    }\n                    // ToDo: applying resolved value -- need to defer resolution on true dynamic\n                    // values Suppress chained assignment if: 1) Our parent will assign this\n                    // property (has a deferred activation for it), or 2) There's already a\n                    // matching assignment with higher salience\n                    let newVal = this.staticallyResolveValue(properties.get(key));\n                    let prevProps: PropertyMap;\n\n                    let suppress: boolean = (isPresent(prevProps) && prevProps.has(key)\n                        && !this._isNewValue(this.staticallyResolveValue(prevProps.get(key)),\n                            newVal)) ||\n                        (this._currentActivation._parent.hasDeferredAssignmentForKey(key)\n                            /* && this._values.containsKey(key) */);\n\n                    if (!suppress) {\n                        let mirrorKey = propMgr._keyDataToSet._key;\n                        if (newVal instanceof DynamicPropertyValue) {\n                            // print('(deferred) chaining key: ' , propMgr._keyDataToSet._key);\n\n\n                            this._currentActivation.addDeferredAssignment(mirrorKey, newVal);\n                        } else {\n                            // compare this value to the value from the end of the last frame\n                            // print('chaining key: ' , propMgr._keyDataToSet._key);\n                            if (this._set2(mirrorKey, newVal, newVal, false, true)) {\n                                didSet = true;\n                            }\n                        }\n                    } else {\n                        // print('SUPPRESSED chaining key: ' , propMgr._keyDataToSet._key);\n                    }\n                }\n            }\n        }\n        return didSet;\n    }\n\n\n    applyPropertyContextAndChain(): void {\n        if (this._checkPropertyContext()) {\n            while (this._checkApplyProperties()) {\n                /* repeat */\n            }\n        }\n    }\n\n\n    _currentPropertyScopeKey(): string {\n        let foundKey: string;\n        let foundActivation: Activation;\n\n        for (let i = this._entries.length - 1; i >= 0; i--) {\n            let rec: Assignment = this._entries[i];\n            if (isPresent(foundActivation) && rec.srec.activation !== foundActivation) {\n                break;\n            }\n            if (this._meta.keyData(rec.srec.key).isPropertyScope) {\n                if (!rec.srec.fromChaining) {\n                    return rec.srec.key;\n                }\n                // for chaining assignments, we keep looking until we exhaust the first\n                // non-chaining activation Todo: broken -- disabling set of context key from\n                // chaining if (foundKey === null) foundKey = scopeKey;\n            }\n            if (isPresent(foundKey) && !rec.srec.fromChaining) {\n                foundActivation = rec.srec.activation;\n            }\n        }\n        return foundKey;\n\n    }\n\n\n    // Apply a 'property context' property (e.g. field_p for field) to the context if necessary\n    _checkPropertyContext(): boolean {\n        assert(this._values instanceof NestedMap, 'Property assignment on base map?');\n        let scopeKey: string = this._currentPropertyScopeKey();\n        if (isPresent(scopeKey)) {\n            return this._set2(Meta.ScopeKey, scopeKey, scopeKey, false, false);\n        }\n        return false;\n    }\n\n\n    debug(): void {\n        // set debugger breakpoint here\n        print('******  Debug Call ******');\n        this._logContext();\n    }\n\n\n    debugString(): string {\n        let buffer = new StringJoiner(['<b>Context:</b>&nbsp;']);\n\n        buffer.add('(&nbsp;');\n        buffer.add(this._entries.length + '');\n        buffer.add(' entries');\n        buffer.add('&nbsp;)<br/>');\n\n        for (let i = 0, c = this._entries.length; i < c; i++) {\n            let sp = i;\n            while (sp-- > 0) {\n                buffer.add('&nbsp;');\n            }\n\n\n            let r: Assignment = this._entries[i];\n\n            buffer.add('&nbsp;');\n            buffer.add(r.srec.key);\n            buffer.add('&nbsp;&nbsp;:&nbsp;');\n            buffer.add(r.srec.val);\n            buffer.add((r.srec.fromChaining ? ' ^' : ''));\n            buffer.add((r.maskedByIdx !== 0 ? ' X' : ''));\n            buffer.add('<br/>');\n        }\n\n        let propertyActivation: Activation = this.currentActivation._propertyActivation;\n        if (isPresent(propertyActivation)) {\n            let srecs: Array<StaticRec> = propertyActivation._recs;\n\n            buffer.add('&nbsp;&nbsp;&nbsp;<b>PropertyActivation...</b><br/>');\n\n            for (let i = 0, c = srecs.length; i < c; i++) {\n                let sp = i + this._entries.length + 1;\n\n                while (sp-- > 0) {\n                    buffer.add('&nbsp;&nbsp;');\n                }\n                let r: StaticRec = srecs[i];\n                buffer.add(r.key);\n                buffer.add('&nbsp;&nbsp;:&nbsp;');\n                buffer.add(r.val);\n                buffer.add((r.fromChaining ? '&nbsp;&nbsp;' : '&nbsp;&nbsp;!'));\n                buffer.add('<br/>');\n            }\n        }\n        buffer.add('&nbsp;<br/><b>Props:</b><br/>');\n        this.writeProperties(buffer, this.allProperties(), 1, false);\n\n        return buffer.toString();\n    }\n\n    _logContext(): void {\n        let debugString: string = this.debugString();\n        print(debugString);\n        print('\\n');\n    }\n\n    private writeProperties(buf: StringJoiner, properties: Map<string, any>, level: number,\n                            singleLine: boolean): void {\n        MapWrapper.iterable(properties).forEach((value, key) => {\n            if (!singleLine) {\n                while (level-- > 0) {\n                    buf.add('&nbsp;&nbsp;&nbsp;');\n                }\n            }\n            if (isBlank(value)) {\n                buf.add(key);\n                buf.add(' :null');\n                buf.add(singleLine ? ';&nbsp;&nbsp;' : ';<br/>');\n\n            } else {\n                buf.add('&nbsp;&nbsp;&nbsp;');\n                buf.add(key);\n                buf.add(':');\n\n                if (isString(value) || isNumber(value)) {\n                    buf.add('&nbsp;&nbsp;');\n                    buf.add(value);\n                    buf.add('&nbsp;&nbsp;');\n\n                } else if (isStringMap(value)) {\n                    buf.add('{');\n                    buf.add(value);\n                    buf.add('}');\n\n                } else if (value instanceof Expr) {\n                    buf.add(value.toString());\n                } else if (value instanceof Map) {\n                    buf.add(MapWrapper.toString(value));\n                } else if (isArray(value)) {\n                    ListWrapper.toString(value);\n\n                } else if (value instanceof OverrideValue) {\n                    buf.add(value.toString());\n\n                } else if (value instanceof FieldPath) {\n                    buf.add('$');\n                    buf.add(value.toString());\n                }\n\n                if (singleLine) {\n                    buf.add(';');\n                } else {\n                    buf.add('<br/>');\n                }\n            }\n        });\n    }\n\n\n    private lastMatchWithoutContextProps() {\n        return ListWrapper.isEmpty(\n            this._entries) ? null : this._entries[this._entries.length - 1].srec.match;\n    }\n\n\n    private lastMatch() {\n        if (ListWrapper.isEmpty(this._entries)) {\n            return null;\n        }\n        let match: MatchResult = ListWrapper.last<Assignment>(this._entries)\n            .propertyLocalMatches(this);\n        return (isPresent(match)) ? match : this.lastMatchWithoutContextProps();\n\n    }\n\n    lastStaticRec(): StaticRec {\n        if (ListWrapper.isEmpty(this._entries)) {\n            return null;\n        }\n        let rec: StaticRec = ListWrapper.last(this._entries).propertyLocalStaticRec(this);\n        return isPresent(rec) ? rec : ListWrapper.last(this._entries).srec;\n    }\n\n\n    get recPool(): Array<Assignment> {\n        return this._recPool;\n    }\n\n\n    get currentActivation(): Activation {\n        return this._currentActivation;\n    }\n\n\n    extendedFields(): Map<string, any> {\n        return this.values;\n    }\n}\n\n\n/**\n * A sharable/re-applicable block of setScopeKeyAssignment _StaticRecs.  An Activation contains\n * the list of assignment records resulting from (chaining from) a single original\n * assignment (as well as _DeferredAssignment records for dynamic values that cannot\n * be statically resolved to records).  Activations form a shared/cached tree, based\n * on context assignment paths previously traversed via assignments to some Context.\n * Subsequent traversals of these paths (likely by different Context instances)\n * are greatly optimized: an existing Activation is retrieved and its records appended\n * to the context's _entries stack; all of the traditional computation of rule match lookups,\n * chained assignments and override indexes is bypassed.\n * Activation gives special treatment to the 'propertyActivation', i.e. the activation\n * resulting from the application of the 'scopeKey' to the current context.  Property lookup\n * following and context assignment require application of the scopeKey, but then the scope key\n * must immediately be popped for the next context assignment.  To avoid this constant push/pop\n * on the bottom of the stack, _Activations cache a side activation (the propertyActivation)\n * for the result of applying the scopeKey to the current activation.  This stack (and its\n * properties) are cached on the side, and can be accessed without actually modifying the main\n * context stack.\n */\n\nexport class Activation {\n\n    _recs: Array<StaticRec> = new Array<StaticRec>();\n    _origEntryCount: number = 0;\n    _valueNodeMapByContextKey: Map<string, Collections.Dictionary<any, any>>;\n    _valueNodeMapByContextKeyChaining: Map<string, Collections.Dictionary<any, any>>;\n\n    _propertyActivation: Activation;\n    _nestedValues: NestedMap<string, any>;\n    deferredAssignments: Array<DeferredAssignment>;\n\n\n    constructor(public _parent?: Activation) {\n\n    }\n\n    getChildActivation(contextKey: string, value: any, chaining: boolean): Activation {\n        if (isBlank(value)) {\n            value = Meta.NullMarker;\n        }\n\n        let byKey: Map<string, Collections.Dictionary<any, any>> = (chaining)\n            ? this._valueNodeMapByContextKeyChaining :\n            this._valueNodeMapByContextKey;\n\n        if (isBlank(byKey)) {\n            return null;\n        }\n        let byVal: Collections.Dictionary<any, any> = byKey.get(contextKey);\n        return (isBlank(byVal)) ? null : byVal.getValue(value);\n    }\n\n    cacheChildActivation(contextKey: string, value: any, activation: Activation,\n                         chaining: boolean): void {\n        if (isBlank(value)) {\n            value = Meta.NullMarker;\n        }\n\n        let byKey: Map<string, Collections.Dictionary<any, any>>;\n        if (chaining) {\n            if (isBlank((byKey = this._valueNodeMapByContextKeyChaining))) {\n                byKey = this._valueNodeMapByContextKeyChaining\n                    = new Map<string, Collections.Dictionary<any, any>>();\n            }\n        } else {\n            if (isBlank((byKey = this._valueNodeMapByContextKey))) {\n                byKey = this._valueNodeMapByContextKey\n                    = new Map<string, Collections.Dictionary<any, any>>();\n            }\n\n        }\n\n        let byVal: Collections.Dictionary<any, any> = byKey.get(contextKey);\n        if (isBlank(byVal)) {\n            byVal = new Collections.Dictionary<any, any>();\n            byKey.set(contextKey, byVal);\n        }\n        byVal.setValue(value, activation);\n    }\n\n    addDeferredAssignment(key: string, value: DynamicPropertyValue): void {\n        let newDa: DeferredAssignment;\n\n        if (isBlank(this.deferredAssignments)) {\n            this.deferredAssignments = new Array<DeferredAssignment>();\n\n        } else {\n            for (let da of this.deferredAssignments) {\n                if (da.key === key) {\n                    newDa = da;\n                    break;\n                }\n            }\n        }\n        if (isBlank(newDa)) {\n            newDa = new DeferredAssignment();\n            newDa.key = key;\n            this.deferredAssignments.push(newDa);\n        }\n        newDa.value = value;\n    }\n\n    hasDeferredAssignmentForKey(key: string): boolean {\n        if (isPresent(this.deferredAssignments)) {\n            for (let da of this.deferredAssignments) {\n                if (da.key === key) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    propertyActivation(context: Context): Activation {\n        assert(context.currentActivation === this,\n            'PropertyActivation sought on non top of stack activation');\n\n        if (isBlank(this._propertyActivation)) {\n            this._propertyActivation = context._createNewPropertyContextActivation(this);\n\n            if (isBlank(this._propertyActivation)) {\n                this._propertyActivation = this;\n            } // this as null marker\n        }\n        return this._propertyActivation !== this ? this._propertyActivation : null;\n    }\n\n\n    findExistingPropertyActivation(): Activation {\n        let activation: Activation = this;\n        while (isPresent(activation)) {\n\n            let propertyActivation: Activation = activation._propertyActivation;\n\n            if (isPresent(propertyActivation) && propertyActivation !== activation\n                && !(isBlank(propertyActivation._recs) || ListWrapper.isEmpty(\n                    propertyActivation._recs))) {\n\n                return propertyActivation;\n            }\n            activation = activation._parent;\n        }\n        return null;\n    }\n\n\n    // todo: better better to string for hashing\n    toString(): string {\n        return Collections.util.makeString(this);\n    }\n}\n\n\nexport class DeferredAssignment {\n    key: string;\n    value: DynamicPropertyValue;\n}\n\n\nexport class AssignmentSnapshot {\n    key: string;\n    value: any;\n    salience: number;\n\n}\n\nexport class Assignment {\n    srec: StaticRec;\n    val: Object;\n\n    maskedByIdx: number = 0;\n    _didInitPropContext: boolean = false;\n    _propertyLocalSrec: StaticRec;\n    _propertyLocalValues: Map<string, any>;\n\n\n    propertyLocalMatches(context: Context): MatchResult {\n        if (!this._didInitPropContext) {\n            this.initPropContext(context);\n        }\n        return isPresent(this._propertyLocalSrec) ? this._propertyLocalSrec.match : null;\n    }\n\n    propertyLocalStaticRec(context: Context): StaticRec {\n        if (!this._didInitPropContext) {\n            this.initPropContext(context);\n        }\n        return this._propertyLocalSrec;\n    }\n\n    propertyLocalValues(context: Context): Map<string, any> {\n        if (!this._didInitPropContext) {\n            this.initPropContext(context);\n        }\n        return this._propertyLocalValues;\n    }\n\n\n    initPropContext(context: Context): void {\n        this._didInitPropContext = true;\n        assert(!Context._ExpensiveContextConsistencyChecksEnabled || ListWrapper.last(\n            context._entries) === this,\n            'initing prop context on record not on top of stack');\n\n        // Todo: base it on whether we've tries yet to process them.\n\n        let propActivation: Activation = (this.srec.activation.propertyActivation(context));\n        if (isPresent(propActivation)) {\n            context._applyPropertyActivation(propActivation, this);\n        }\n    }\n\n\n    reset(): void {\n        this.srec = null;\n        this.val = null;\n        this.maskedByIdx = 0;\n        this._didInitPropContext = false;\n        this._propertyLocalSrec = null;\n        this._propertyLocalValues = null;\n    }\n\n}\n\n/**\n * The 'static' (sharable) part of a context value assignment record.\n * Theses are created by the first _Assignment that needs them\n * and then cached for re-application in their _Activation\n *  (which, in turn, is stored in the global activation tree)\n */\nexport class StaticRec {\n    activation: Activation;\n    private _key: string;\n    private _val: any;\n    match: MatchResult;\n    salience: number = 0;\n    fromChaining: boolean;\n    lastAssignmentIdx: number = 0;\n\n    properties(): PropertyMap {\n        return (isPresent(this.match)) ? this.match.properties() : Context.EmptyMap;\n    }\n\n    get key(): string {\n        return this._key;\n    }\n\n    set key(value: string) {\n        this._key = value;\n    }\n\n    get val(): any {\n        return this._val;\n    }\n\n    set val(value: any) {\n        this._val = value;\n    }\n}\n\nexport class PropertyAccessor {\n\n    constructor(private context: Context) {\n    }\n\n    get(key: string): any {\n        return this.context.propertyForKey(key);\n    }\n\n    toString(): string {\n        return MapWrapper.toString(this.context.allProperties());\n    }\n\n}\n\n/**\n * Snapshot is the way how to capture a current state of the context and then replay it back so.\n * for cases when we need to run some rule execution outside of the push/pop cycle\n */\nexport class Snapshot {\n\n    _meta: Meta;\n    _origClass: string;\n    _assignments: Array<AssignmentSnapshot>;\n    _allAssignments: Array<AssignmentSnapshot>;\n    _isNested: boolean;\n\n\n    constructor(private _context: Context) {\n        this._meta = _context.meta;\n        this._origClass = _context.constructor.name;\n        this._assignments = _context.activeAssignments();\n        this._allAssignments = _context.allAssignments();\n        this._isNested = _context.isNested;\n\n    }\n\n\n    hydrate(shellCopy: boolean = true): Context {\n        let assignments = (shellCopy) ? this._assignments : this._allAssignments;\n        let newContext: Context = this._meta.newContext();\n        newContext.push();\n        let lastCnxGeneration = 1;\n        for (let a of  assignments) {\n            if (lastCnxGeneration < a.salience) {\n                newContext.push();\n            }\n            newContext.set(a.key, a.value);\n        }\n        newContext.isNested = this._isNested;\n        return newContext;\n    }\n\n}\n\n\nexport class ObjectMetaContext extends Context {\n    static readonly DefaultLocale = 'en';\n\n    private _formatters: Map<string, any>;\n\n    constructor(_meta: ObjectMeta, nested: boolean = false) {\n        super(_meta, nested);\n\n    }\n\n\n    get value(): any {\n        let obj = this.object;\n\n        if (isBlank(obj)) {\n            return null;\n        }\n        let fieldPath = this.fieldPath();\n        return isPresent(fieldPath) ? fieldPath.getFieldValue(obj) : this.propertyForKey('value');\n    }\n\n\n    set value(val: any) {\n        let fieldPath = this.fieldPath();\n        if (isPresent(fieldPath)) {\n            assert(isPresent(this.object), 'Call to setValue() with no current object');\n            fieldPath.setFieldValue(this.object, val);\n        } else {\n            let value = this.allProperties().get(ObjectMeta.KeyValue);\n            assert(isDynamicSettable(value), 'Cant set derived property: ' + value);\n\n            let settable: DynamicSettablePropertyValue = value;\n\n            ((<DynamicSettablePropertyValue>value)).evaluateSet(this, val);\n            settable.evaluateSet(this, val);\n        }\n\n    }\n\n    get object(): any {\n        return this.values.get(ObjectMeta.KeyObject);\n    }\n\n    get formatters(): Map<string, any> {\n        if (isBlank(this._formatters)) {\n            this._formatters = new Map<string, any>();\n        }\n        return this._formatters;\n    }\n\n    fieldPath(): FieldPath {\n        let propMap: ObjectMetaPropertyMap = <ObjectMetaPropertyMap> this.allProperties();\n        return propMap.fieldPath;\n    }\n\n\n    locale(): string {\n        return ObjectMetaContext.DefaultLocale;\n    }\n\n    timezone(): number {\n        return new Date().getTimezoneOffset();\n\n    }\n\n}\n\nexport class UIContext extends ObjectMetaContext {\n\n\n    constructor(_meta: UIMeta, nested: boolean = false) {\n        super(_meta, nested);\n    }\n\n\n    // user values from user settings/locales\n    locale(): string {\n        return super.locale();\n    }\n\n    timezone(): number {\n        return super.timezone();\n    }\n}\n\n\n\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {\n    BooleanWrapper,\n    isArray,\n    isBlank,\n    isPresent,\n    ListWrapper,\n    MapWrapper,\n    print,\n    shiftLeft,\n    StringJoiner\n} from '@aribaui/core';\nimport {KeyData, MatchValue, Meta, PropertyManager, PropertyMap, RuleSet} from './meta';\n\n\n/**\n * A Selector defines a sort of key/value predicate that must be satisfied for a\n * rule to apply.\n */\nexport class Selector\n{\n\n    private _matchArrayIdx: number = 0;\n    private _matchValue: MatchValue;\n\n\n    static fromMap(values: Map <string, any>): Array<Selector>\n    {\n        const result = new Array<Selector>();\n        MapWrapper.iterable(values).forEach((value, key) =>\n        {\n            result.push(new Selector(key, value, false));\n        });\n        return result;\n    }\n\n\n    constructor(private _key: string, private _value: any, public isDecl: boolean = false)\n    {\n    }\n\n\n    get key(): string\n    {\n        return this._key;\n    }\n\n    get value(): any\n    {\n        return this._value;\n    }\n\n    bindToKeyData(keyData: KeyData): void\n    {\n        this._matchArrayIdx = keyData._id;\n        this._matchValue = keyData.matchValue(this._value);\n\n    }\n\n    matches(matchArray: Array<MatchValue>): boolean\n    {\n        // If we haven't been initialized with a matchValue, then we were indexed and don't need to\n        // match\n        if (isBlank(this._matchValue)) {\n            return true;\n        }\n\n\n        const other: MatchValue = matchArray[this._matchArrayIdx];\n\n        return isPresent(other) ? other.matches(this._matchValue) : false;\n    }\n\n\n    toString(): string\n    {\n        const sj = new StringJoiner([]);\n\n        sj.add(this.key);\n        sj.add('=');\n        sj.add(this._value.toString());\n        sj.add('(');\n        sj.add(this.isDecl + '');\n        sj.add(')');\n        sj.add('[ ');\n        sj.add(this._matchArrayIdx + ']');\n\n        return sj.toString();\n    }\n}\n\n\n/**\n * A Rule defines a map of properties that should apply in the event that a set of Selectors\n * are matched.  Given a rule base (Meta) and a set of asserted values (Context) a list of matching\n * rules can be computed (by matching their selectors against the values) and by successively (in\n * rank / priority order) applying (merging) their property maps a set of effective properties can\n * be computed.\n *\n */\n\nexport class Rule\n{\n    private _id: number;\n    private _ruleSet: RuleSet;\n\n    keyMatchesMask: number = 0;\n    keyIndexedMask: number = 0;\n    keyAntiMask: number = 0;\n\n    static  merge(meta: Meta, src: Map<string, any>, dest: Map<string, any>,\n                  declareKey: string): number\n    {\n        let updatedMask = 0;\n\n        MapWrapper.iterable(src).forEach((value, key) =>\n        {\n            const propManager: PropertyManager = meta.managerForProperty(\n                key);\n            const orig = dest.get(key);\n            const isDeclare: boolean = (isPresent(declareKey) && key === declareKey);\n            const newVal = propManager.mergeProperty(key, orig, value, isDeclare);\n\n            if (newVal !== orig) {\n                dest.set(key, newVal);\n                const keyData: KeyData = propManager._keyDataToSet;\n\n                if (isPresent(keyData)) {\n                    const keymask: number = shiftLeft(1, keyData._id);\n\n                    if ((keymask & updatedMask) === 0 &&\n                        (dest instanceof PropertyMap)) {\n                        updatedMask |= keymask;\n                        (<PropertyMap>dest).addContextKey(\n                            propManager);\n                    }\n                }\n            }\n        });\n        return updatedMask;\n    }\n\n    constructor(public _selectors: Array<Selector>, private _properties?: Map<string, any>,\n                private _rank: number = -1,\n                private _lineNumber: number = -1)\n    {\n\n    }\n\n\n    matches(matchArray: Array<MatchValue>): boolean\n    {\n        for (let sel of this._selectors) {\n            if (!sel.matches(matchArray)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * returns context keys modified\n     */\n    apply(meta: Meta, properties: PropertyMap, declareKey: string): number\n    {\n        if (this._rank === Number.MIN_VALUE) {\n            return 0;\n        }\n        return Rule.merge(meta, this._properties, properties, declareKey);\n    }\n\n    disable(): void\n    {\n        this._rank = Number.MIN_VALUE;\n    }\n\n    disabled(): boolean\n    {\n        return this._rank === Number.MIN_VALUE;\n    }\n\n    get lineNumber(): number\n    {\n        return this._lineNumber;\n    }\n\n    set lineNumber(lineNumber)\n    {\n        this._lineNumber = lineNumber;\n    }\n\n\n    location(): string\n    {\n        let path: string = isPresent(this._ruleSet) ? this._ruleSet.filePath : 'Unknow';\n        return (this._lineNumber >= 0 ) ? (new StringJoiner([\n                path, ':', this._lineNumber + ''\n            ])).toString() : path;\n    }\n\n\n    get selectors(): Array<Selector>\n    {\n        return this._selectors;\n    }\n\n    set selectors(value: Array<Selector>)\n    {\n        this._selectors = value;\n    }\n\n    get properties(): Map<string, any>\n    {\n        return this._properties;\n    }\n\n    set properties(value: Map<string, any>)\n    {\n        this._properties = value;\n    }\n\n    get rank(): number\n    {\n        return this._rank;\n    }\n\n\n    set rank(value: number)\n    {\n        this._rank = value;\n    }\n\n    get ruleSet(): RuleSet\n    {\n        return this._ruleSet;\n    }\n\n\n    set ruleSet(value: RuleSet)\n    {\n        this._ruleSet = value;\n    }\n\n    get id(): number\n    {\n        return this._id;\n    }\n\n    set id(value: number)\n    {\n        this._id = value;\n    }\n\n    isEditable(): boolean\n    {\n        return (this._ruleSet !== null) && (this._ruleSet.editableStart > 0) &&\n            (this._id >= this._ruleSet.editableStart);\n    }\n\n    createDecl(): Rule\n    {\n        /*\n         @field=dyno { value:${ some expr} } becomes\n         declare { field:dyno }\n         field=dyno { field:dyno; value:${ some expr} }\n         */\n        // add rule for declaration\n\n        let selectors: Array<Selector> = this._selectors;\n        let declPred: Selector = selectors[selectors.length - 1];\n        let prePreds: Array<Selector> = this.convertKeyOverrides(\n            selectors.slice(0, selectors.length - 1));\n\n        if (isBlank(this._properties)) {\n            this._properties = new Map<string, any>();\n        }\n        for (let p of selectors) {\n            if (!(isArray(p.value))) {\n                this._properties.set(p.key, p.value);\n            }\n        }\n        // Flag the declaring rule as a property\n        this._properties.set(Meta.DeclRule, new RuleWrapper(this));\n\n        // check for override scope\n        let hasOverrideScope = false;\n        for (let p of prePreds) {\n            if (p.key === declPred.key) {\n                hasOverrideScope = true;\n            }\n        }\n\n        // if decl key isn't scoped, then select on no scope\n        if (!hasOverrideScope) {\n            let overrideKey: string = Meta.overrideKeyForKey(declPred.key);\n            prePreds.unshift(new Selector(overrideKey, Meta.NullMarker));\n        }\n\n        // The decl rule...\n        prePreds.push(new Selector(Meta.KeyDeclare, declPred.key));\n\n        let m = new Map<string, any>();\n        m.set(declPred.key, declPred.value);\n        return new Rule(prePreds, m, 0, -1);\n    }\n\n    /**\n     *  rewrite any selector of the form \"layout=L1, class=c, layout=L2\" to\n     *  \"layout_o=L1 class=c, layout=L2\"\n     */\n\n    convertKeyOverrides(orig: Array<Selector>): Array<Selector>\n    {\n\n        let result = orig;\n        let count: number = orig.length;\n        for (let i = 0; i < count; i++) {\n            let p: Selector = orig[i];\n            // See if overridded by same key later in selector\n            for (let j = i + 1; j < count; j++) {\n                let pNext: Selector = orig[j];\n\n                if (pNext.key === p.key) {\n                    // if we're overridden, we drop ours, and replace the next collision\n                    // with one with our prefix\n\n                    // make a copy if we haven't already\n                    if (result === orig) {\n                        result = orig.slice(0, i);\n                    }\n                    p = new Selector(Meta.overrideKeyForKey(p.key), p.value);\n                    break;\n                }\n            }\n            if (result !== orig) {\n                result.push(p);\n            }\n        }\n        return result;\n    }\n\n    toString(): string\n    {\n        let sj = new StringJoiner(['<Rule [']);\n        sj.add(this._rank + '] ');\n\n        if (isBlank(this.selectors)) {\n            sj.add('null, null --> null >');\n        } else {\n            sj.add(ListWrapper.toString<Selector>(this._selectors));\n\n            sj.add(' -> ');\n\n            if (!this._properties) {\n                sj.add('[,]' + ' >');\n            } else {\n                if (this._properties.has('declRule')) {\n\n                }\n\n                sj.add(MapWrapper.toString(this._properties) + ' >');\n            }\n\n            sj.add('[ ');\n            sj.add(this.keyIndexedMask + ', ');\n            sj.add(this.keyAntiMask + ', ');\n            sj.add(this.keyMatchesMask + '');\n            sj.add(' ]');\n\n        }\n\n\n        return sj.toString();\n    }\n\n    _checkRule(values: Map<string, any>, meta: Meta): void\n    {\n        ListWrapper.forEachWithIndex<Selector>(this.selectors, (p, i) =>\n        {\n            let contextValue = values.get(p.key);\n            let keyData: KeyData = meta.keyData(p.key);\n\n            if (isPresent(keyData._transformer)) {\n                contextValue = keyData._transformer.tranformForMatch(contextValue);\n            }\n\n            if (isPresent(contextValue) &&\n                ((Meta.KeyAny === p.value && BooleanWrapper.boleanValue(contextValue) ||\n                Meta.objectEquals(contextValue, p.value) ||\n                (isArray(p.value) && p.value.indexOf(contextValue) > -1) ||\n                (isArray(p.value) && contextValue.indexOf(p.value) > -1 )))) {\n                // okay\n            } else {\n                print('Possible bad rule match!  Rule: %s; selector: %s, context val: %s' + this +\n                    ' ' + p + ' ' + contextValue);\n            }\n        });\n    }\n\n\n}\n\n// here so logging of property map doesn't infinitely recurse\nexport class RuleWrapper\n{\n\n\n    constructor(public rule: Rule)\n    {\n    }\n}\n\n\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\n// todo: try to get rid of this library\nimport * as Collections from 'typescript-collections';\nimport {\n    assert,\n    BooleanWrapper,\n    CompositeType,\n    equals,\n    isArray,\n    isBlank,\n    isBoolean,\n    isEntity,\n    isFunction,\n    isPresent,\n    isString,\n    isStringMap,\n    isValue,\n    ListWrapper,\n    MapWrapper, objectToName,\n    print,\n    shiftLeft,\n    shiftRight,\n    StringJoiner,\n    StringWrapper,\n    unimplemented\n} from '@aribaui/core';\nimport {Match, MatchResult, UnionMatchResult} from './match';\nimport {RuleLoader} from './rule-loader.service';\nimport {Context} from './context';\nimport {DeferredOperationChain, DynamicPropertyValue} from './property-value';\nimport {Rule, Selector} from './rule';\n\n/**\n * Meta is the core class in MetaUI.  An instance of meta represents a 'Rule Base' (a repository\n * rules), and this rule base is used to compute property maps based on a series of key/value\n * constraints (typically based on the current values in a Context instance).\n *\n * Meta works in concert with Match.MatchResult to cache partial matches (match trees) with cached\n * computed property maps. Meta is generally used by way of its subclasses ObjectMeta and UIMeta\n * (which extend Meta with behaviors around auto-creating rules for references Typescripts classes\n * and dynamic properties for field and layout zoning)\n *\n *\n */\nexport class Meta {\n    static readonly KeyAny: string = '*';\n    static readonly KeyDeclare: string = 'declare';\n    static readonly KeyTrait: string = 'trait';\n\n    static readonly LowRulePriority: number = -100000;\n    static readonly SystemRulePriority: number = -200000;\n    static readonly ClassRulePriority: number = -100000;\n    static readonly TemplateRulePriority: number = 100000;\n    static readonly EditorRulePriority: number = 200000;\n\n    static readonly MaxKeyDatas: number = 64;\n    static readonly NullMarker: any = {markernull: true};\n\n    static readonly ScopeKey: string = 'scopeKey';\n    static readonly DeclRule: string = 'declRule';\n\n    /**\n     *\n     * PartialIndexing indexes each rule by a single (well chosen) key and evaluates other parts of\n     * the selector on the index-filtered matches (generally this is a  win since may selectors are\n     * not selective, resulting in huge rule vectors)\n     *\n     */\n    static _UsePartialIndexing: boolean = true;\n    static _DebugDoubleCheckMatches: boolean = false;\n\n    static PropertyMerger_DeclareList: any = null;\n    static PropertyMerger_Traits: any = null;\n    static PropertyMerger_List: any = null;\n    static Transformer_KeyPresent: any = null;\n\n\n    _rules: Rule[] = new Array<Rule>();\n    _ruleCount: number = 0;\n    _testRules: Map<string, any> = new Map<string, any>();\n\n    protected _currentRuleSet: RuleSet;\n    private _nextKeyId: number = 0;\n    private _ruleSetGeneration: number = 0;\n\n    private _keyData: Map<string, KeyData> = new Map<string, KeyData>();\n\n    private _keyDatasById: KeyData[] = new Array<KeyData>(Meta.MaxKeyDatas);\n    private _MatchToPropsCache: Collections.Dictionary<Match, PropertyMap> =\n        new Collections.Dictionary<Match, PropertyMap>();\n    private _PropertyMapUniquer: Collections.Dictionary<PropertyMap, PropertyMap> =\n        new Collections.Dictionary<PropertyMap, PropertyMap>();\n\n    private _identityCache = new Collections.Dictionary<any, any>();\n    private _managerForProperty: Map<string, PropertyManager> = new Map<string, PropertyManager>();\n\n\n    private _declareKeyMask: number = 0;\n\n    protected _ruleLoader: RuleLoader;\n\n\n    /*\n     A few handy utilities (for which we probably already have superior versions elsewhere)\n     */\n    static booleanValue(value: any): boolean {\n        return BooleanWrapper.boleanValue(value);\n    }\n\n    static toList(value: any): Array<any> {\n        return (isArray(value)) ? value : [value];\n    }\n\n    static objectEquals(one: any, two: any) {\n        if (isBlank(one) && isBlank(two)) {\n            return true;\n        }\n        if (isBlank(one) || isBlank(two)) {\n            return false;\n        }\n        return equals(one, two);\n    }\n\n    static overrideKeyForKey(key: string): string {\n        return key + '_o';\n    }\n\n    static addTraits(traits: string[], map: Map<string, any>): void {\n        let current: string[] = map.get(Meta.KeyTrait);\n        if (isBlank(current)) {\n            map.set(Meta.KeyTrait, traits);\n\n        } else {\n            ListWrapper.addAll(current, traits);\n            map.set(Meta.KeyTrait, current);\n        }\n    }\n\n    static addTrait(trait: string, map: Map<string, any>): void {\n        let current: string[] = map.get(Meta.KeyTrait);\n        if (isBlank(current)) {\n            map.set(Meta.KeyTrait, Meta.toList(trait));\n        } else {\n            current.push(trait);\n            map.set(Meta.KeyTrait, current);\n        }\n    }\n\n\n    static className(object: any): string {\n        if (isStringMap(object) && (isEntity(object) || isValue(object))) {\n            return (<CompositeType>object).className();\n\n        } else if (isStringMap(object)) {\n            return objectToName(object);\n\n        } else if (isFunction(object)) {\n            return object.name;\n        }\n        return object;\n    }\n\n    constructor() {\n        Meta.PropertyMerger_DeclareList = new PropertyMergerDeclareList();\n        Meta.PropertyMerger_Traits = new PropertyMergerDeclareListForTrait();\n        Meta.PropertyMerger_List = new PropertyMerger_List();\n        Meta.Transformer_KeyPresent = new KeyValueTransformer_KeyPresent();\n\n\n        this._declareKeyMask = this.keyData(Meta.KeyDeclare).maskValue();\n        this.registerPropertyMerger(Meta.KeyTrait, Meta.PropertyMerger_Traits);\n\n\n        let nooprule: Rule = new Rule(null, null, 0, 0);\n        nooprule.disable();\n        this._rules[0] = nooprule;\n        this._ruleCount = 1;\n    }\n\n    registerLoader(loader: RuleLoader): void {\n        this._ruleLoader = loader;\n    }\n\n    addRule(rule: Rule): void {\n\n        let selectors: Array<Selector> = rule.selectors;\n\n        if (selectors.length > 0 && selectors[selectors.length - 1].isDecl) {\n            let decl = rule.createDecl();\n            this._addRule(decl, true);\n        }\n\n        // we allow null to enable creation of a decl, but otherwise this rule has no effect\n        if (isPresent(rule.properties)) {\n            // After we've captured the decl, do the collapse\n            rule._selectors = rule.convertKeyOverrides(rule._selectors);\n            this._addRule(rule, true);\n        }\n\n    }\n\n    _addToRules(rule: Rule, pos: number): void {\n        this._rules[pos] = rule;\n    }\n\n\n    // todo: TEST unit test this\n    _addRule(rule: Rule, checkPropScope: boolean): void {\n        assert(isPresent(this._currentRuleSet), 'Attempt to add rule without current RuleSet');\n        let selectors: Array<Selector> = rule._selectors;\n\n        let entryId: number = this._currentRuleSet.allocateNextRuleEntry();\n        rule.id = entryId;\n        if (rule.rank === 0) {\n            rule.rank = this._currentRuleSet._rank++;\n        }\n        rule.ruleSet = this._currentRuleSet;\n        this._addToRules(rule, entryId);\n\n        // index it\n        let lastScopeKeyData: KeyData;\n        let declKey: string;\n        let declMask: number = this.declareKeyMask;\n        let matchMask = 0, indexedMask = 0, antiMask = 0;\n        let count = selectors.length;\n\n        let indexOnlySelector: Selector = Meta._UsePartialIndexing ? this.bestSelectorToIndex(\n            selectors) : null;\n        for (let i = count - 1; i >= 0; i--) {\n            let p: Selector = selectors[i];\n\n            let shouldIndex: boolean = (indexOnlySelector === null || p === indexOnlySelector);\n\n            let data: KeyData = this.keyData(p.key);\n            let dataMask: number = data.maskValue();\n            if (!this.isNullMarker(p.value)) {\n                if (shouldIndex || Meta._DebugDoubleCheckMatches) {\n                    if (isArray(p.value)) {\n                        for (let v of p.value) {\n                            data.addEntry(v, entryId);\n                        }\n\n                    } else {\n                        data.addEntry(p.value, entryId);\n                    }\n                    if (shouldIndex) {\n                        indexedMask |= shiftLeft(1, data.id);\n                    }\n                }\n                if (!shouldIndex) {\n                    // prepare selector for direct evaluation\n                    p.bindToKeyData(data);\n                }\n                matchMask |= dataMask;\n\n                if (data.isPropertyScope && isBlank(lastScopeKeyData)) {\n                    lastScopeKeyData = data;\n                }\n                if ((dataMask & declMask) !== 0) {\n                    declKey = p.value;\n                }\n            } else {\n                antiMask |= dataMask;\n            }\n        }\n        let isDecl: boolean = isPresent(declKey);\n        let nonScopeKeyDecl: boolean = isPresent(declKey) && !this.keyData(declKey).isPropertyScope;\n        if (!isDecl || nonScopeKeyDecl) {\n\n            // all non-decl rules don't apply outside decl context\n            if (!isDecl) {\n                antiMask |= declMask;\n            }\n\n            if (isPresent(lastScopeKeyData) && checkPropScope) {\n                let traitVal = rule.properties.get(Meta.KeyTrait);\n\n\n                if (isPresent(traitVal)) {\n                    let traitKey: string = lastScopeKeyData._key + '_trait';\n\n                    let properties = MapWrapper.createEmpty<string, any>();\n                    properties.set(traitKey, traitVal);\n\n                    let traitRule: Rule = new Rule(rule._selectors, properties, rule.rank,\n                        rule.lineNumber);\n\n                    this._addRule(traitRule, false);\n                }\n\n                rule._selectors = selectors.slice(0);\n\n                let scopeSel: Selector = new Selector(Meta.ScopeKey, lastScopeKeyData.key);\n                rule.selectors.push(scopeSel);\n\n                let data: KeyData = this.keyData(Meta.ScopeKey);\n\n                if (!Meta._UsePartialIndexing || Meta._DebugDoubleCheckMatches) {\n                    data.addEntry(lastScopeKeyData._key, entryId);\n                    indexedMask |= shiftLeft(1, data._id);\n                }\n                scopeSel.bindToKeyData(data);\n                matchMask |= shiftLeft(1, data._id);\n            }\n        }\n        rule.keyMatchesMask = matchMask;\n        rule.keyIndexedMask = indexedMask;\n        rule.keyAntiMask = antiMask;\n    }\n\n    bestSelectorToIndex(selectors: Array<Selector>): Selector {\n        let best: Selector;\n        let bestRank = Number.MIN_VALUE;\n        let pos = 0;\n        for (let sel of  selectors) {\n            let rank = this.selectivityRank(sel) + pos++;\n            if (rank > bestRank) {\n                best = sel;\n                bestRank = rank;\n            }\n        }\n        return best;\n    }\n\n    selectivityRank(selector: Selector): number {\n        // Score selectors: good if property scope, key !== '*' or bool\n        // '*' is particularly bad, since these are inherited by all others\n        let score = 1;\n        let value = selector.value;\n\n        if (isPresent(value) && !(Meta.KeyAny === value)) {\n            score += (isBoolean(value) ? 1 : 9);\n        }\n\n        let keyData: KeyData = this.keyData(selector.key);\n        if (keyData.isPropertyScope) {\n            score *= 5;\n        }\n        // Todo: we could score based on # of entries in KeyData\n        return score;\n    }\n\n\n    /**\n     * if addition of this rule results in addition of extra rules, those are returned\n     * (null otherwise)\n     */\n    _editingRuleEnd(): number {\n        return Math.max(this._currentRuleSet.end, this._ruleCount);\n    }\n\n\n    _addRuleAndReturnExtras(rule: Rule): Array<Rule> {\n        let start = this._editingRuleEnd();\n        let extras: Array<Rule>;\n\n        this.addRule(rule);\n\n        // Return any extra rules created by addition of this one\n        for (let i = start, c = this._editingRuleEnd(); i < c; i++) {\n            let r = this._rules[i];\n            if (r !== rule) {\n                if (isBlank(extras)) {\n                    extras = new Array<Rule>();\n                }\n                extras.push(r);\n            }\n        }\n        return extras;\n    }\n\n    // Icky method to replace an exited rule in place\n    _updateEditedRule(rule: Rule, extras: Array<Rule>): Array<Rule> {\n        // in place replace existing rule with NoOp\n        let nooprule: Rule = new Rule(null, null, 0, 0);\n        nooprule.disable();\n\n        this._rules[rule.id] = nooprule;\n\n        if (isPresent(extras)) {\n            for (let r of extras) {\n                r.disable();\n            }\n        }\n\n        // Since this rule has already been mutated (the first time it was added) we need to\n        // reverse the addition of the scopeKey\n        let preds = rule.selectors;\n\n        if ((isPresent(preds) && preds.length > 0) && ListWrapper.last<Selector>(\n                preds).key === Meta.ScopeKey) {\n            ListWrapper.removeAt<Selector>(preds, preds.length);\n        }\n\n        // now (re)-add it and invalidate\n        extras = this._addRuleAndReturnExtras(rule);\n        this.invalidateRules();\n        return extras;\n    }\n\n\n    scopeKeyForSelector(preds: Array<Selector>): string {\n        for (let i = preds.length - 1; i >= 0; i--) {\n            let pred = preds[i];\n            let data = this.keyData(pred.key);\n            if (data.isPropertyScope) {\n                return pred.key;\n            }\n        }\n        return null;\n    }\n\n\n    addRuleFromSelectorMap(selectorMap: Map<string, any>, propertyMap: Map<string, any>): void {\n        this.addRuleFromSelectorMapWithRank(selectorMap, propertyMap, 0);\n    }\n\n    addRuleFromSelectorMapWithRank(selectorMap: Map<string, any>, propertyMap: Map<string, any>,\n                                   rank: number): void {\n        let rule = new Rule(Selector.fromMap(selectorMap), propertyMap, 0, -1);\n        if (rank !== 0) {\n            rule.rank = rank;\n        }\n        this.addRule(rule);\n    }\n\n\n    addRules(ruleSet: Map<string, any>, selectors: Array<Selector>) {\n        // Special keys:  'props, 'rules'.  Everthing else is a selector\n        let props: Map<string, any>;\n        let rules: Array<Map<string, any>>;\n\n        MapWrapper.iterable(ruleSet).forEach((value, key) => {\n            if (key === 'props') {\n                props = value;\n\n            } else if (key === 'rules') {\n                rules = value;\n            } else {\n                selectors.push(new Selector(key, value));\n            }\n        });\n\n        if (isPresent(props)) {\n            this.addRule(new Rule(selectors, props, 0));\n        }\n        if (isPresent(rules)) {\n            for (let r of rules) {\n                this.addRules(r, selectors);\n            }\n        }\n    }\n\n    // this one expect that we already opened the ruleset\n    _loadRules(ruleText?: any, module: string = 'system',\n               editable: boolean = true): void {\n        try {\n\n            if (isPresent(this._ruleLoader)) {\n                this._ruleLoader.loadRules(this, ruleText, module, (rule) => this.addRule(rule));\n            }\n        } catch (e) {\n            this.endRuleSet().disableRules();\n            throw new Error('Error loading rule: ' + e);\n        }\n    }\n\n\n    loadRules(ruleText?: any): void {\n        this._loadRulesWithRuleSet('StringLiteral', ruleText, 0);\n        this.endRuleSet();\n    }\n\n\n    _loadRulesWithRuleSet(filename: string, ruleText: any, rank: number): void {\n        this.beginRuleSetWithRank(rank, filename);\n        try {\n            this._loadRules(ruleText);\n\n        } catch (e) {\n            this.endRuleSet().disableRules();\n            throw new Error('Error loading rule: ' + e);\n        }\n    }\n\n\n    loadUserRule(source: any, userClass: string): boolean {\n        return unimplemented();\n    }\n\n    parsePropertyAssignment(propString: string, propertyMap: Map<string, any>): string {\n        // todo: implement this\n        return unimplemented();\n    }\n\n\n    clearCaches(): void {\n        this._MatchToPropsCache = new Collections.Dictionary<Match, PropertyMap>();\n        this._PropertyMapUniquer = new Collections.Dictionary<PropertyMap, PropertyMap>();\n        this._identityCache = new Collections.Dictionary<any, any>();\n    }\n\n\n    isTraitExportRule(rule: Rule): boolean {\n        if (isBlank(rule.properties) || rule || rule.properties.size === 1) {\n\n            let key: string = Array.from(rule.properties.keys())[0];\n            return StringWrapper.endsWidth(key, '_trait');\n        }\n        return false;\n    }\n\n    beginRuleSet(identificator: string): void {\n        this.beginRuleSetWithRank(this._ruleCount, identificator);\n    }\n\n\n    beginRuleSetWithRank(rank: number, filePath: string): void {\n        try {\n            assert(isBlank(this._currentRuleSet),\n                'Can t start new rule set while one in progress');\n\n            this._currentRuleSet = new RuleSet(this);\n            this._currentRuleSet._start = this._ruleCount;\n            this._currentRuleSet._end = this._ruleCount;\n            this._currentRuleSet._rank = rank;\n            this._currentRuleSet._filePath = filePath;\n        } catch (e) {\n\n            throw e;\n        }\n    }\n\n    beginReplacementRuleSet(orig: RuleSet): void {\n        let origRank = orig.startRank();\n        this.beginRuleSetWithRank(this._ruleCount, orig._filePath);\n        this._currentRuleSet._rank = origRank;\n    }\n\n\n    endRuleSet(): RuleSet {\n        assert(isPresent(this._currentRuleSet), 'No rule set progress');\n        let result: RuleSet = this._currentRuleSet;\n        if (this._ruleCount < result._end) {\n            this._ruleCount = result._end;\n        }\n        this._currentRuleSet = null;\n        this._ruleSetGeneration++;\n\n        return result;\n    }\n\n\n    get ruleSetGeneration(): number {\n        return this._ruleSetGeneration;\n    }\n\n    invalidateRules(): void {\n        this._ruleSetGeneration++;\n        this.clearCaches();\n    }\n\n\n    newContext(): Context {\n        return new Context(this);\n    }\n\n    get declareKeyMask(): number {\n        return this._declareKeyMask;\n    }\n\n\n    // Touch a key/value to force pre-loading/registration of associated rule files\n    touch(key: string, value: any): void {\n        let context = this.newContext();\n        context.push();\n        context.set(key, value);\n        context.allProperties();\n        context.pop();\n    }\n\n\n    transformValue(key: string, value: any): any {\n        let keyData = this._keyData.get(key);\n        if (isPresent(keyData) && isPresent(keyData._transformer)) {\n            value = keyData._transformer.tranformForMatch(value);\n        }\n        return value;\n    }\n\n    match(key: string, value: any, intermediateResult: MatchResult): MatchResult {\n        let keyData = this._keyData.get(key);\n        if (isBlank(keyData)) {\n            return intermediateResult;\n        }\n        let keyMask: number = shiftLeft(1, keyData._id);\n\n        // Does our result already include this key?  Then no need to join again\n        // if (intermediateResult !== null && (intermediateResult._keysMatchedMask & keyMask) !==\n        // 0) return intermediateResult;\n\n        return new MatchResult(this, keyData, value, intermediateResult);\n    }\n\n\n    unionOverrideMatch(key: string, value: any,\n                       intermediateResult: UnionMatchResult): UnionMatchResult {\n        let keyData: KeyData = this._keyData.get(Meta.overrideKeyForKey(key));\n        if (isBlank(keyData)) {\n            return intermediateResult;\n        }\n        return new UnionMatchResult(this, keyData, value, intermediateResult);\n    }\n\n    newPropertiesMap(): PropertyMap {\n        return new PropertyMap();\n    }\n\n    propertiesForMatch(matchResult: MatchResult): PropertyMap {\n        let properties: PropertyMap = this._MatchToPropsCache.getValue(matchResult);\n        if (isPresent(properties)) {\n            return properties;\n        }\n\n        properties = this.newPropertiesMap();\n\n        let arr: number[] = matchResult.filteredMatches();\n        if (isBlank(arr)) {\n            return properties;\n        }\n\n        // first entry is count\n        let count: number = arr[0];\n        let rules: Array<Rule> = new Array<Rule>(count);\n\n        for (let i = 0; i < count; i++) {\n            rules[i] = this._rules[arr[i + 1]];\n        }\n\n        ListWrapper.sort<Rule>(rules, (o1, o2) => o1.rank - o2.rank);\n\n        let modifiedMask = 0;\n        let declareKey: string = ((this._declareKeyMask & matchResult.keysMatchedMask) !== 0)\n            ? matchResult.valueForKey(Meta.KeyDeclare) : null;\n\n\n        for (let r in rules) {\n            modifiedMask |= rules[r].apply(this, properties, declareKey);\n        }\n\n        properties.awakeProperties();\n        this._MatchToPropsCache.setValue(matchResult.immutableCopy(), properties);\n        return properties;\n    }\n\n\n    keyData(key: string): KeyData {\n        let data: KeyData = this._keyData.get(key);\n\n        if (isBlank(data)) {\n            let id: number = this._nextKeyId;\n\n            if (id >= Meta.MaxKeyDatas - 1) {\n                print('Exceeded maximum number of context keys');\n            }\n            this._nextKeyId++;\n            data = new KeyData(key, id);\n\n            this._keyDatasById[id] = data;\n            this._keyData.set(key, data);\n        }\n        return data;\n    }\n\n\n    _keysInMask(mask: number): string[] {\n        let matches: string[] = [];\n        let pos = 0;\n        while (mask !== 0) {\n            if ((mask & 1) !== 0) {\n                matches.push(this._keyDatasById[pos]._key);\n            }\n            pos++;\n            mask = shiftRight(mask, 1);\n        }\n        return matches;\n    }\n\n    registerKeyInitObserver(key: string, o: ValueQueriedObserver): void {\n        this.keyData(key).addObserver(o);\n    }\n\n    registerValueTransformerForKey(key: string, transformer: KeyValueTransformer): void {\n        this.keyData(key)._transformer = transformer;\n    }\n\n\n    get identityCache(): Collections.Dictionary<any, any> {\n        return this._identityCache;\n    }\n\n\n    newMatchArray(): MatchValue[] {\n        return [];\n    }\n\n    matchArrayAssign(array: MatchValue[], keyData: KeyData, matchValue: MatchValue): void {\n        let idx = keyData._id;\n        let curr = array[idx];\n        if (isPresent(curr)) {\n            matchValue = curr.updateByAdding(matchValue);\n        }\n        array[idx] = matchValue;\n    }\n\n\n    propertyWillDoMerge(propertyName: string, origValue: any): boolean {\n        let merger: PropertyMerger = this.mergerForProperty(propertyName);\n\n        return this.isPropertyMergerIsChaining(merger) || (isPresent(\n            origValue) && (origValue instanceof Map));\n    }\n\n\n    managerForProperty(name: string): PropertyManager {\n        let manager: PropertyManager = this._managerForProperty.get(name);\n        if (isBlank(manager)) {\n            manager = new PropertyManager(name);\n            this._managerForProperty.set(name, manager);\n        }\n        return manager;\n    }\n\n\n    mirrorPropertyToContext(propertyName: string, contextKey: string): void {\n        let keyData = this.keyData(contextKey);\n        let manager = this.managerForProperty(propertyName);\n        manager._keyDataToSet = keyData;\n    }\n\n\n    defineKeyAsPropertyScope(contextKey: string): void {\n        let keyData: KeyData = this.keyData(contextKey);\n        keyData.isPropertyScope = true;\n\n        let traitKey: string = contextKey + '_trait';\n        this.mirrorPropertyToContext(traitKey, traitKey);\n        this.registerPropertyMerger(traitKey, Meta.PropertyMerger_DeclareList);\n    }\n\n    isPropertyScopeKey(key: string): boolean {\n        return Meta.ScopeKey === key;\n    }\n\n    registerPropertyMerger(propertyName: string, merger: PropertyMerger): void {\n        if (isBlank(merger._meta)) {\n            merger._meta = this;\n        }\n        let manager: PropertyManager = this.managerForProperty(propertyName);\n        manager._merger = merger;\n    }\n\n    mergerForProperty(propertyName: string): PropertyMerger {\n        let manager: PropertyManager = this.managerForProperty(propertyName);\n        return manager._merger;\n    }\n\n    private isPropertyMergerIsChaining(val: any): val is PropertyMergerIsChaining {\n        return isPresent(val.isPropMergerIsChainingMark) && val.isPropMergerIsChainingMark;\n    }\n\n\n    groupForTrait(trait: string): string {\n        return 'default';\n    }\n\n    _logRuleStats(): void {\n        let total = 0;\n\n        let values = this._keyData.keys();\n\n        let counts: any[] = [];\n\n        for (const id of Array.from(values)) {\n            let keyData = this._keyData.get(id);\n            let valuess = keyData.ruleVecs.values();\n\n            for (let vm  of valuess) {\n                let kvc = new KeyValueCount(keyData._key, (<any>vm)['_value'], isPresent(\n                    vm._arr) ? vm._arr[0] : 0);\n\n                total += kvc.count;\n                counts.push(kvc);\n            }\n        }\n        ListWrapper.sort<KeyValueCount>(counts, (o1, o2) => o2.count - o1.count);\n\n        let buf = new StringJoiner([]);\n        let c = Math.min(10, counts.length);\n\n        buf.add('Total index entries comparisons performed: ' + Match._Debug_ElementProcessCount);\n        buf.add('\\nTotal index entries: ' + total);\n        buf.add('\\nTop  keys/values: ' + c);\n\n\n        for (let i = 0; i < c; i++) {\n            let kvc = counts[i];\n\n            buf.add('     ' + kvc.key + '  = ' + kvc.value + ' : ' + kvc.count + ' entries');\n            buf.add('\\n');\n        }\n        print(buf.toString());\n    }\n\n    toString(): string {\n        return 'Meta';\n    }\n\n\n    isNullMarker(value: any): boolean {\n        return isPresent(value) && value['markernull'];\n    }\n\n\n    addTestUserRule(testRuleName: string, source: any) {\n        this._testRules.set(testRuleName, source);\n    }\n\n\n}\n\n\nexport class KeyValueCount {\n\n    constructor(public key: string, public value: any, public count: number) {\n    }\n}\n\n/**\n * Store of policy information for particular properties -- most significantly, how\n * successive values of this property are to be *merged* during rule application.\n * (See Meta.registerPropertyMerger).  E.g. 'visible', 'trait', and 'valid' all have unique\n * merge policies.\n */\nexport class PropertyManager {\n    _merger: PropertyMerger;\n    _keyDataToSet: KeyData;\n\n\n    constructor(public _name: string) {\n    }\n\n\n    mergeProperty(propertyName: string, orig: any, newValue: any, isDeclare: boolean): any {\n        if (isBlank(orig)) {\n            return newValue;\n        }\n\n        if (newValue instanceof OverrideValue) {\n            return (<OverrideValue> newValue).value();\n        }\n\n        if (isBlank(this._merger)) {\n            // Perhaps should have a data-type-based merger registry?\n            if (orig instanceof Map) {\n                if (isPresent(newValue) && newValue instanceof Map) {\n                    // merge maps\n                    // todo: TEST check outcome of the merge and compare\n                    let origClone = MapWrapper.clone<string, any>(orig);\n                    newValue = MapWrapper.mergeMapIntoMapWithObject(origClone, newValue, true);\n                }\n            }\n            return newValue;\n        }\n\n        if (!(this._merger instanceof PropertyMergerDynamic) &&\n            (orig instanceof DynamicPropertyValue || newValue instanceof DynamicPropertyValue)) {\n\n            return new DeferredOperationChain(this._merger, orig, newValue);\n        }\n\n        return this._merger.merge(orig, newValue, isDeclare);\n    }\n\n}\n\n/**\n * Wrapper for a value that should, in rule application, override any previous value for its\n * property.  This can be used to override default property value merge policy, for instance\n * allowing the 'visible' property to be forced from false to true.\n */\nexport class OverrideValue {\n    constructor(private _value: any) {\n    }\n\n    value(): any {\n        return this._value === 'null' ? null : this._value;\n    }\n\n    toString(): string {\n        return isPresent(this._value) ? this._value.toString() + '!' : 'null' + '!';\n    }\n}\n\n\n/**\n * KeyData is the primary structure for representing information about context keys\n * (e.g. 'class', 'layout', 'operation', 'field', ...), including an index of rules\n * that match on particular values of that key (_ValueMatches).\n *\n * Note that every context key has a small integer ID (0-63) and these are uses in\n * (long) masks for certain rule matching operations.\n */\n\nexport class KeyData {\n    private _ruleVecs: Collections.Dictionary<any, ValueMatches>;\n    private _observers: Array<ValueQueriedObserver>;\n\n    private _any: ValueMatches;\n    _transformer: KeyValueTransformer;\n\n    private _isPropertyScope: boolean = false;\n\n\n    constructor(public _key: string, public _id: number) {\n        this._ruleVecs = new Collections.Dictionary<any, ValueMatches>();\n        this._any = this.get(Meta.KeyAny);\n\n    }\n\n    maskValue(): number {\n        return shiftLeft(1, this._id);\n    }\n\n    private get(value: any): ValueMatches {\n        if (isBlank(value)) {\n            value = Meta.NullMarker;\n\n        } else if (isPresent(this._transformer)) {\n            value = this._transformer.tranformForMatch(value);\n        }\n        let matches: ValueMatches = this._ruleVecs.getValue(value);\n\n        if (isBlank(matches)) {\n            matches = new ValueMatches(value);\n\n            if (isPresent(value) && !BooleanWrapper.isFalse(value)) {\n                matches._parent = this._any;\n            }\n            this._ruleVecs.setValue(value, matches);\n        }\n        return matches;\n    }\n\n    matchValue(value: any): MatchValue {\n        if (isArray(value)) {\n            let list = value;\n            if (list.length === 1) {\n                return this.get(list[0]);\n            }\n            let multi: MultiMatchValue = new MultiMatchValue();\n\n            ListWrapper.forEachWithIndex(list, (v, i) => {\n                multi.data.push(this.get(v));\n            });\n            return multi;\n        } else {\n            return this.get(value);\n        }\n    }\n\n\n    addEntry(value: any, id: number): void {\n        let matches: ValueMatches = this.get(value);\n        let before: number[] = matches._arr;\n        let after: number[] = Match.addInt(before, id);\n        if (before !== after) {\n            matches._arr = after;\n        }\n    }\n\n\n    lookup(owner: Meta, value: any): number[] {\n        let matches: ValueMatches = this.get(value);\n        if (!matches._read && isPresent(this._observers)) {\n\n            try {\n                if (!matches._read) {\n                    // notify\n                    if (isPresent(value)) {\n                        ListWrapper.forEachWithIndex(this._observers, (v, i) => {\n                            v.notify(owner, this._key, value);\n                        });\n                    }\n                }\n                matches._read = true;\n            } finally {\n\n            }\n        }\n        // check if parent has changed and need to union in parent data\n        matches.checkParent();\n        return matches._arr;\n    }\n\n\n    setParent(value: any, parentValue: any): void {\n        let parent: ValueMatches = this.get(parentValue);\n        let child: ValueMatches = this.get(value);\n        child._parent = parent;\n    }\n\n\n    parent(value: any): any {\n        let child: ValueMatches = this.get(value);\n        return child._parent._value;\n    }\n\n\n    addObserver(o: ValueQueriedObserver): void {\n        if (isBlank(this._observers)) {\n            this._observers = new Array<ValueQueriedObserver>();\n        }\n        this._observers.push(o);\n    }\n\n\n    // If this key defines a scope for properties (e.g. field, class, action)\n    // this this returns the name of the selector key for those properties\n    // (e.g. field_p, class_p)\n    get isPropertyScope(): boolean {\n        return this._isPropertyScope;\n    }\n\n    set isPropertyScope(yn: boolean) {\n        this._isPropertyScope = yn;\n    }\n\n\n    get ruleVecs(): Collections.Dictionary<any, ValueMatches> {\n        return this._ruleVecs;\n    }\n\n    get key(): string {\n        return this._key;\n    }\n\n    get id(): number {\n        return this._id;\n    }\n\n\n    get observers(): Array<ValueQueriedObserver> {\n        return this._observers;\n    }\n}\n\n\n/**\n * Store of policy information for particular properties -- most significantly, how\n * successive values of this property are to be *merged* during rule application.\n * (See Meta.registerPropertyMerger).  E.g. 'visible', 'trait', and 'valid' all have unique\n * merge policies.\n */\nexport class PropertyMap implements Map<string, any> {\n\n    private _contextPropertiesUpdated: Array<PropertyManager>;\n    protected _map: Map<string, any>;\n\n    [Symbol.toStringTag]: 'Map';\n\n\n    constructor(entries?: Map<string, any>) {\n        if (isPresent(entries)) {\n            this._map = new Map<string, any>(entries);\n        } else {\n            this._map = new Map<string, any>();\n        }\n    }\n\n\n    get(key: string): any {\n        return this._map.get(key);\n    }\n\n\n    keys(): IterableIterator<string> {\n        return this._map.keys();\n    }\n\n\n    values(): IterableIterator<any> {\n        return this._map.values();\n    }\n\n    clear(): void {\n        this._map.clear();\n    }\n\n    set(key: string, value?: any): any {\n        return this._map.set(key, value);\n    }\n\n\n    delete(key: string): boolean {\n\n        return this._map.delete(key);\n    }\n\n    forEach(callbackfn: (value: any, index: string, map: Map<string, any>) => void,\n            thisArg?: any): void {\n        this._map.forEach(callbackfn);\n    }\n\n\n    has(key: string): boolean {\n        return this._map.has(key);\n    }\n\n\n    [Symbol.iterator](): IterableIterator<any> {\n        return this._map[Symbol.iterator]();\n    }\n\n\n    entries(): IterableIterator<any> {\n        return this._map.entries();\n    }\n\n\n    get size(): number {\n        return this._map.size;\n    }\n\n\n    awakeProperties(): void {\n        MapWrapper.iterable(this).forEach((value, key) => {\n            if (isPropertyMapAwaking(value)) {\n                let newValue = value.awakeForPropertyMap(this);\n                if (newValue !== value) {\n                    this.set(key, newValue);\n                }\n            }\n        });\n    }\n\n    addContextKey(key: PropertyManager): void {\n        if (isBlank(this._contextPropertiesUpdated)) {\n            this._contextPropertiesUpdated = new Array<PropertyManager>();\n        }\n        this._contextPropertiesUpdated.push(key);\n    }\n\n\n    get contextKeysUpdated(): Array<PropertyManager> {\n        return this._contextPropertiesUpdated;\n    }\n\n    toString() {\n        // todo: find better way for the string. thsi is also used as key for the dictionary\n        // not really efficient\n        let sj = new StringJoiner(['PropertyMap:']);\n        sj.add(this.size + ',');\n        MapWrapper.iterable(this).forEach((value, key) => {\n            if (isPropertyMapAwaking(value)) {\n                let newValue = value.awakeForPropertyMap(this);\n                if (newValue !== value) {\n                    sj.add(key + ':' + value);\n                    sj.add(', ');\n                }\n            }\n        });\n        return sj.toString();\n    }\n}\n\n\n// Marker interface\nexport interface PropertyMergerIsChaining {\n    isPropMergerIsChainingMark: boolean;\n\n}\n\n/**\n * Define policy for merging a property value assigned by one rule\n * to a subsequent value from a higher ranked rule.\n */\nexport interface PropertyMerger {\n\n    _meta: Meta;\n\n    /**\n     * Called during rule application to merge an earlier (lower ranked) value with a newer one.\n     * @param orig the previous value accumulated in the property map\n     * @param override the new value from the higher ranked rule\n     * @param isDeclare whether we are currently accumulating matched for declarations of the\n     *     property/value\n     * @return the new property value to be put in the property map\n     */\n    merge (orig: any, override: any, isDeclare: boolean): any;\n\n    toString(): string;\n}\n\n// marker interface for PropertyMerges that can handle dynamic values\nexport abstract class PropertyMergerDynamic implements PropertyMerger {\n    _meta: Meta;\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        return unimplemented();\n    }\n\n    toString(): string {\n        return 'PropertyMergerDynamic';\n    }\n}\n\n\nexport class PropertyMerger_Overwrite implements PropertyMerger {\n    _meta: Meta;\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        return override;\n    }\n\n    toString(): string {\n        return 'OVERWRITE';\n    }\n}\n\n/**\n PropertyMerger for properties the should be unioned as lists\n */\nexport class PropertyMerger_List implements PropertyMerger {\n    _meta: Meta;\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        if (!(isArray(orig)) && !(isArray(override)) && Meta.objectEquals(orig, override)) {\n            return orig;\n        }\n        let l1 = Meta.toList(orig);\n        let l2 = Meta.toList(override);\n\n        let result = ListWrapper.clone(l1);\n\n        ListWrapper.addElementsIfAbsent(result, l2);\n        return result;\n    }\n}\n\n\n/**\n * PropertyMerger for properties the should override normally, but return lists when\n * in declare mode (e.g. 'class', 'field', 'layout', ...)\n */\nexport class PropertyMergerDeclareList extends PropertyMergerDynamic {\n\n    constructor() {\n        super();\n    }\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        if (!isDeclare) {\n            return override;\n        }\n\n        if (!(isArray(orig)) && !(isArray(override)) && Meta.objectEquals(orig, override)) {\n            return orig;\n        }\n\n        let result: any[] = [];\n        ListWrapper.addElementsIfAbsent(result, Meta.toList(orig));\n        ListWrapper.addElementsIfAbsent(result, Meta.toList(override));\n\n        return result;\n    }\n\n    toString(): string {\n        return 'PropertyMergerDeclareList';\n    }\n}\n\n/**\n * PropertyMerger for the 'trait' property.  Generally, traits are unioned, except for traits\n * from the same 'traitGroup', which override (i.e. only one trait from each traitGroup should\n * survive).\n */\nexport class PropertyMergerDeclareListForTrait extends PropertyMergerDeclareList {\n\n    _meta: Meta;\n\n\n    constructor() {\n        super();\n    }\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        if (isDeclare) {\n            return super.merge(orig, override, isDeclare);\n        }\n\n        // if we're override a single element with itself, don't go List...\n        if (!isArray(orig) && !isArray(override) && Meta.objectEquals(orig, override)) {\n            return orig;\n        }\n        let origL = Meta.toList(orig);\n        let overrideL = Meta.toList(override);\n        let result: any[] = [];\n        for (let trait of origL) {\n            if (trait instanceof OverrideValue) {\n                trait = (<OverrideValue> trait).value();\n            }\n\n            let canAdd = true;\n            let group = this._meta.groupForTrait(trait);\n\n            if (isPresent(group)) {\n\n                for (let overrideTrait of overrideL) {\n                    if (overrideTrait instanceof OverrideValue) {\n                        overrideTrait = (<OverrideValue>overrideTrait).value();\n                    }\n\n\n                    if (group === this._meta.groupForTrait(overrideTrait)) {\n                        canAdd = false;\n                        break;\n                    }\n                }\n            }\n            if (canAdd) {\n                result.push(trait);\n            }\n        }\n        ListWrapper.addElementsIfAbsent(result, overrideL);\n        return result;\n    }\n\n\n    toString(): string {\n        return 'PropertyMergerDeclareListForTrait';\n    }\n}\n\n\n/**\n * PropertyMerger implementing AND semantics -- i.e. false trumps true.\n * (Used, for instance, for the properties 'visible' and 'editable')\n */\nexport class PropertyMerger_And extends PropertyMergerDynamic implements PropertyMergerIsChaining {\n    isPropMergerIsChainingMark: boolean = true;\n\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        // null will reset (so that it can be overridden to true subsequently\n        if (isBlank(override)) {\n            return null;\n        }\n\n        // If we can evaluate statically, do it now\n\n\n        if ((isBoolean(orig) && !(BooleanWrapper.boleanValue(orig))) ||\n            (isBoolean(override) && !(BooleanWrapper.boleanValue(override)))) {\n\n            return false;\n        }\n        // ANDing with true is a noop -- return new value\n        if (isBoolean(orig) && BooleanWrapper.boleanValue(orig)) {\n\n            return (override instanceof DynamicPropertyValue) ? override\n                : BooleanWrapper.boleanValue(\n                    override);\n        }\n\n        if (isBoolean(override) && BooleanWrapper.boleanValue(override)) {\n            return (orig instanceof DynamicPropertyValue) ? orig : BooleanWrapper.boleanValue(\n                override);\n        }\n\n        // if one of our values is dynamic, defer\n        if ((orig instanceof DynamicPropertyValue || override instanceof DynamicPropertyValue)) {\n            return new DeferredOperationChain(this, orig, override);\n        }\n        return BooleanWrapper.boleanValue(orig) && BooleanWrapper.boleanValue(override);\n    }\n\n    toString(): string {\n        return 'AND';\n    }\n}\n\n\nexport class PropertyMerger_Valid implements PropertyMerger,\n    PropertyMergerIsChaining {\n    _meta: Meta;\n    isPropMergerIsChainingMark: boolean = true;\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        /**\n         *\n         *\n         return (isString(override) || ( isBoolean(override) &&\n         !(BooleanWrapper.boleanValue(override)))) ? override : orig;\n         */\n\n        // if first is error (error message or false, it wins), otherwise second\n        return (isString(override) || (isBoolean(override) && BooleanWrapper.isFalse(override)))\n            ? override : orig;\n    }\n\n    toString(): string {\n        return 'VALIDATE';\n    }\n}\n\n\n/**\n * A group of rules originating from a common source.\n * All rules must be added to the rule base as part of a RuleSet.\n */\nexport class RuleSet {\n\n    _filePath: string;\n    _start: number = 0;\n    _end: number = 0;\n    _editableStart: number = -1;\n\n    _rank: number = 0;\n\n\n    constructor(private _meta: Meta) {\n    }\n\n    disableRules(): void {\n        for (let i = this._start; i < this._end; i++) {\n            this._meta._rules[i].disable();\n        }\n        this._meta.clearCaches();\n\n    }\n\n\n    get filePath(): string {\n        return this._filePath;\n    }\n\n    rules(editableOnly: any): Array<Rule> {\n        let result: Array<Rule> = [];\n        let i = (editableOnly) ? (this._editableStart === -1 ? this._end : this._editableStart)\n            : this._start;\n        for (; i < this._end; i++) {\n            let r = this._meta._rules[i];\n            if (!r.disabled() && !this._meta.isTraitExportRule(r)) {\n                result.push(r);\n            }\n        }\n        return result;\n\n    }\n\n    startRank(): number {\n        return (this._start < this._meta._ruleCount)\n            ? this._meta._rules[this._start].rank\n            : this._rank - (this._end - this._start);\n    }\n\n    allocateNextRuleEntry(): number {\n        return (this._meta._ruleCount > this._end) ? this._meta._ruleCount++ : this._end++;\n    }\n\n    get start(): number {\n        return this._start;\n    }\n\n    get end(): number {\n        return this._end;\n    }\n\n    get editableStart(): number {\n        return this._editableStart;\n    }\n}\n\n\n/**\n * Abstraction for values (or sets of values) that can be matched against others\n * (in the context of Selector key/value) matching.  Subtypes take advantage of\n * the fact that ValueMatches instances globally uniquely represent key/value pairs\n * to enable efficient matching entirely through identity comparison.\n */\n\nexport interface MatchValue {\n    matches (other: MatchValue): boolean;\n\n    updateByAdding (other: MatchValue): MatchValue;\n}\n\n\n/**\n *\n * Uniquely represents a particular key/value in the Meta scope, and indexes all rules\n * with (indexed) Selectors matching that key/value.\n\n * ValueMatches also models *inheritance* by allowing one key/value to have another\n * as its 'parent' and thereby match on any Selector (and rule) that its parent would.\n *\n * For instance, this enables a rule on class=Number to apply to class=Integer and\n * class=BigDecimal, and one on class=* to apply to any.\n *\n * The utility of 'parent' is not limited, of course, to the key 'class': all keys\n * take advantage of the parent '*' to support unqualified matches on that key, and\n * keys like 'operation' define a value hierarchy ( 'inspect' -> {'view', 'search'},\n * 'search' -> {'keywordSearch', 'textSearch'})\n */\n\nexport class ValueMatches implements MatchValue {\n\n    _value: any;\n    _read: boolean = false;\n    _arr: number[];\n\n    _parent: ValueMatches;\n    _parentSize: number = 0;\n\n\n    constructor(value: any) {\n        this._value = value;\n    }\n\n    checkParent() {\n        // todo: performance: keep a rule set version # and only do this when the rule set has\n        // reloaded\n\n        if (isPresent(this._parent)) {\n            this._parent.checkParent();\n\n            let parentArr: number[] = this._parent._arr;\n\n            if (isPresent(parentArr) && parentArr[0] !== this._parentSize) {\n                this._arr = Match.union(this._arr, parentArr);\n                this._parentSize = parentArr[0];\n            }\n\n        }\n    }\n\n    matches(other: MatchValue): boolean {\n        if (!(other instanceof ValueMatches)) {\n            return other.matches(this);\n        }\n\n        // we recurse up parent chain to do superclass matches\n        return (other === this) || (isPresent(this._parent) && this._parent.matches(other));\n    }\n\n    updateByAdding(other: MatchValue): MatchValue {\n        let multi: MultiMatchValue = new MultiMatchValue();\n        multi.data.push(this);\n        return multi.updateByAdding(other);\n    }\n\n}\n\n// https://github.com/Microsoft/TypeScript/wiki/FAQ#why-doesnt-extending-built-ins-like-error-\n//  array-and-map-work\nexport class MultiMatchValue implements MatchValue {\n\n    data: Array<MatchValue> = [];\n\n\n    matches(other: MatchValue): boolean {\n        if (other instanceof MultiMatchValue) {\n            // list / list comparison: any combo can match\n            for (let i = 0; i < this.data.length; i++) {\n                if (other.matches(this.data[i])) {\n                    return true;\n                }\n            }\n        } else {\n            // single value against array: one must match\n            for (let i = 0; i < this.data.length; i++) {\n                if (this.data[i].matches(other)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    updateByAdding(other: MatchValue): MatchValue {\n        if (other instanceof MultiMatchValue) {\n            let matchValue: MultiMatchValue = <MultiMatchValue> other;\n            ListWrapper.addAll(this.data, matchValue.data);\n        } else {\n            this.data.push(other);\n        }\n        return this;\n    }\n}\n\n\nexport interface ValueQueriedObserver {\n\n    notify (meta: Meta, key: string, value: any): void;\n\n}\n\n\n/**\n * Used to transform values into the (static) version they should be indexed / searched under\n * For instance, 'object' may be indexed as true/false (present or not)\n */\nexport interface KeyValueTransformer {\n    tranformForMatch (o: any): any;\n}\n\n\nexport class KeyValueTransformer_KeyPresent implements KeyValueTransformer {\n\n\n    tranformForMatch(o: any): any {\n        return (isPresent(o) && !(BooleanWrapper.isFalse(o))) ? true : false;\n    }\n\n\n}\n\n\n/**\n * Called on implementing values to allow statically resolvable (but dynamic) values\n * to evaluate/copy themselves for inclusion in a new map (to ensure that a value that\n * derived its value based on a different context doesn't get reused in another)\n */\nexport interface PropertyMapAwaking {\n    propertyAwaking: boolean;\n\n    awakeForPropertyMap (map: PropertyMap): any;\n}\n\n\nexport function isPropertyMapAwaking(arg: any): arg is PropertyMapAwaking {\n    return isPresent(arg) && isPresent(arg.propertyAwaking);\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\n\nexport class ItemProperties\n{\n\n    constructor(public name: string, public properties: Map<string, any>, public hidden: boolean)\n    {\n    }\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Injector, Type} from '@angular/core';\nimport {\n    assert,\n    BooleanWrapper,\n    FieldPath,\n    isArray,\n    isBlank,\n    isBoolean,\n    isPresent,\n    isString\n} from '@aribaui/core';\nimport {ComponentRegistry} from '@aribaui/components';\nimport {\n    Meta,\n    PropertyMap,\n    PropertyMerger,\n    PropertyMerger_And,\n    PropertyMergerIsChaining,\n    ValueQueriedObserver\n} from './meta';\nimport {Context, ObjectMetaContext} from './context';\nimport {ItemProperties} from './item-properties';\nimport {Rule, Selector} from './rule';\n\n/**\n * ObjectMeta is resposible for setting up everything related to class, field, actions\n *\n */\nexport class ObjectMeta extends Meta {\n    static KeyClass = 'class';\n    static KeyField = 'field';\n    static KeyAction = 'action';\n    static KeyActionCategory = 'actionCategory';\n    static KeyObject = 'object';\n    static KeyValue = 'value';\n    static KeyType = 'type';\n    static KeyElementType = 'elementType';\n    static readonly KeyTraitGroup = 'traitGroup';\n    static KeyVisible = 'visible';\n    static KeyEditable = 'editable';\n    static KeyValid = 'valid';\n    static KeyRank = 'rank';\n    static readonly DefaultActionCategory = 'General';\n\n    static readonly _FieldPathNullMarker = new FieldPath('null');\n\n\n    _traitToGroup: Map<string, string>;\n    _traitToGroupGeneration: number = -1;\n\n\n    /**\n     *  Can inject these directly but want to keep this as much as possible with any angular\n     *  dependecies as we will be using these core rule classes outside of UI code\n     */\n    protected _componentRegistry: ComponentRegistry;\n    protected _injector: Injector;\n\n\n    static validationError(context: Context): string {\n        let error = context.propertyForKey(ObjectMeta.KeyValid);\n        if (isBlank(error)) {\n            return null;\n        }\n\n        if (isBoolean(error)) {\n            return BooleanWrapper.boleanValue(error) ? null : 'Invalid entry';\n        }\n        return error.toString();\n    }\n\n    // todo: implement new decorators in typescript if we want ot annotate _annotationProcessors\n\n    constructor() {\n        super();\n\n        this.registerKeyInitObserver(ObjectMeta.KeyClass, new IntrospectionMetaProvider());\n        this.registerKeyInitObserver(ObjectMeta.KeyType, new FieldTypeIntrospectionMetaProvider());\n\n        // These keys define scopes for their properties\n        this.defineKeyAsPropertyScope(ObjectMeta.KeyField);\n        this.defineKeyAsPropertyScope(ObjectMeta.KeyAction);\n        this.defineKeyAsPropertyScope(ObjectMeta.KeyActionCategory);\n        this.defineKeyAsPropertyScope(ObjectMeta.KeyClass);\n\n        // policies for chaining certain well known properties\n        this.registerPropertyMerger(ObjectMeta.KeyVisible, new PropertyMerger_And());\n        this.registerPropertyMerger(ObjectMeta.KeyEditable, new PropertyMerger_And());\n        this.registerPropertyMerger(ObjectMeta.KeyValid, new OMPropertyMerger_Valid());\n\n        this.registerPropertyMerger(ObjectMeta.KeyClass, Meta.PropertyMerger_DeclareList);\n        this.registerPropertyMerger(ObjectMeta.KeyField, Meta.PropertyMerger_DeclareList);\n        this.registerPropertyMerger(ObjectMeta.KeyAction, Meta.PropertyMerger_DeclareList);\n        this.registerPropertyMerger(ObjectMeta.KeyActionCategory, Meta.PropertyMerger_DeclareList);\n        this.registerPropertyMerger(ObjectMeta.KeyTraitGroup, Meta.PropertyMerger_DeclareList);\n\n        this.mirrorPropertyToContext(ObjectMeta.KeyClass, ObjectMeta.KeyClass);\n        this.mirrorPropertyToContext(ObjectMeta.KeyType, ObjectMeta.KeyType);\n        this.mirrorPropertyToContext(ObjectMeta.KeyElementType, ObjectMeta.KeyElementType);\n        this.mirrorPropertyToContext(ObjectMeta.KeyTrait, Meta.KeyTrait);\n        this.mirrorPropertyToContext(ObjectMeta.KeyEditable, ObjectMeta.KeyEditable);\n\n        this.registerValueTransformerForKey(ObjectMeta.KeyObject, Meta.Transformer_KeyPresent);\n\n        // todo: try to support decorators and how we can put meta data into object @Traits,\n        // @Properties, @Action\n    }\n\n\n    /*\n     *  Provide subclass context with conveniences for getting object field values\n     */\n    newContext(): Context {\n        return new ObjectMetaContext(this, false);\n    }\n\n\n    // Use a special map subsclass for our Properties\n    newPropertiesMap(): PropertyMap {\n        return new ObjectMetaPropertyMap();\n    }\n\n    itemNames(context: Context, key: string): Array<string> {\n        context.push();\n        context.set(ObjectMeta.KeyDeclare, key);\n        let itemsNames = context.listPropertyForKey(key);\n        context.pop();\n\n        return itemsNames;\n    }\n\n\n    itemProperties(context: Context, key: string, filterHidden: boolean): Array<ItemProperties> {\n        return this.itemPropertiesForNames(context, key, this.itemNames(context, key),\n            filterHidden);\n    }\n\n    itemPropertiesForNames(context: Context, key: string, itemNames: string[],\n                           filterHidden: boolean): Array<ItemProperties> {\n        let result: Array<ItemProperties> = [];\n        for (let itemName of itemNames) {\n            context.push();\n            context.set(key, itemName);\n\n            let isVisible = context.allProperties().get(ObjectMeta.KeyVisible);\n            let visible = context.staticallyResolveValue(isVisible);\n\n            let isHidden = (isBlank(visible)) || BooleanWrapper.isFalse(visible);\n\n            if (!isHidden || !filterHidden) {\n                result.push(new ItemProperties(itemName, context.allProperties(), isHidden));\n            }\n            context.pop();\n        }\n        return result;\n    }\n\n\n    groupForTrait(trait: string): string {\n        if (this._traitToGroup == null || this._traitToGroupGeneration < this.ruleSetGeneration) {\n            this._traitToGroupGeneration = this.ruleSetGeneration;\n            this._traitToGroup = new Map<string, string>();\n\n            let context = this.newContext();\n            for (let group of this.itemNames(context, ObjectMeta.KeyTraitGroup)) {\n                context.push();\n                context.set(ObjectMeta.KeyTraitGroup, group);\n\n                for (let name of this.itemNames(context, ObjectMeta.KeyTrait)) {\n                    this._traitToGroup.set(name, group);\n                }\n                context.pop();\n            }\n        }\n        return this._traitToGroup.get(trait);\n    }\n\n    set injector(value: Injector) {\n        this._injector = value;\n    }\n\n\n    get injector(): Injector {\n        return this._injector;\n    }\n\n    get componentRegistry(): ComponentRegistry {\n        return this._componentRegistry;\n    }\n\n    set componentRegistry(value: ComponentRegistry) {\n        this._componentRegistry = value;\n    }\n}\n\n/**\n * When a class is pushed either directly or indirectly (using deffered rules) we receive a\n * ValueQueriedObserver notification in order to register  types for the object. Trying to achieve\n * at least some kind of introspection we need to implement $proto method inside the object that\n * instantiates all types which we can query.\n *\n * Ideally we want to use decorators when dealing with client side typescript class. but for cases\n * where Rules will be loaded using Rest API along with the object instance its impossible.\n */\nexport class IntrospectionMetaProvider implements ValueQueriedObserver {\n    private _meta: Meta;\n\n    notify(meta: Meta, key: string, value: any): void {\n        this._meta = meta;\n        let myObject;\n\n        let componentRegistry: ComponentRegistry = (<ObjectMeta>this._meta).componentRegistry;\n        assert(isPresent(componentRegistry),\n            'Component registry is not initialized');\n\n        let clazz: Type<any> = null;\n        if (isString(value) && (clazz = componentRegistry.nameToType.get(value))\n            && isPresent(clazz)) {\n            myObject = new clazz();\n        } else if (isBlank(clazz)) {\n            return;\n        }\n\n        assert(Meta.className(myObject) === value,\n            'Trying to process and register a class that does not exists on Context');\n        this.registerRulesForClass(myObject, value);\n\n    }\n\n    private registerRulesForClass(object: any, className: string): void {\n        this._meta.keyData(ObjectMeta.KeyClass).setParent(className, 'Object');\n\n        this._meta.beginRuleSet(className);\n\n        try {\n            let selectors: Array<Selector> = [new Selector(ObjectMeta.KeyClass, className)];\n            let propertyMap = this._meta.newPropertiesMap();\n            selectors[0].isDecl = true;\n\n            let rule: Rule = new Rule(selectors, propertyMap, ObjectMeta.ClassRulePriority);\n            this._meta.addRule(rule);\n\n            this.registerRulesForFields(object, className);\n\n        } finally {\n            this._meta.endRuleSet();\n        }\n    }\n\n\n    private registerRulesForFields(object: any, className: string): void {\n        // todo: Can we somehow utilize decorators? Maybe for local typescript defined object, but\n        // not objects loaded as json from rest API\n        assert(isPresent(object['$proto']),\n            'Cannot register fields without a $proto method that will expose all the fields');\n        let instance: any = object['$proto']();\n        let fieldNames = Object.keys(instance);\n\n        let rank = 0;\n        for (let name of fieldNames) {\n            // todo: check=>  can we rely on this ?\n            let type = instance[name].constructor.name;\n\n            let properties = new Map<string, any>();\n\n            properties.set(ObjectMeta.KeyField, name);\n            properties.set(ObjectMeta.KeyType, type);\n\n            properties.set(ObjectMeta.KeyVisible, true);\n\n            if (isArray(instance[name])) {\n                assert(instance[name].length > 0,\n                    ' Cannot register type[array] and its type without properly initialized ' +\n                    'prototype');\n                let item = instance[name][0];\n                let collectionElementType = item.constructor.name;\n                properties.set(ObjectMeta.KeyElementType, collectionElementType);\n            }\n\n            let selectorList: Array<Selector> = [\n                new Selector(ObjectMeta.KeyClass, className),\n                new Selector(ObjectMeta.KeyField, name),\n            ];\n            selectorList[1].isDecl = true;\n            properties.set(ObjectMeta.KeyRank, (rank++ + 1) * 10);\n\n            let rule: Rule = new Rule(selectorList, properties, ObjectMeta.ClassRulePriority);\n            this._meta.addRule(rule);\n        }\n    }\n}\n\n/**\n * Registers specials types that we are read during introspections\n */\nexport class FieldTypeIntrospectionMetaProvider implements ValueQueriedObserver {\n\n    notify(meta: Meta, key: string, value: any): void {\n        // print('FieldTypeIntrospectionMetaProvider notified of first use of field:  ' , value);\n    }\n\n}\n\n\nexport class ObjectMetaPropertyMap extends PropertyMap {\n    private _fieldPath: FieldPath;\n\n\n    get fieldPath(): FieldPath {\n        if (isBlank(this._fieldPath)) {\n            let value = this.get(ObjectMeta.KeyValue);\n            let fieldName = this.get(ObjectMeta.KeyField);\n\n            this._fieldPath = (isPresent(fieldName) && isBlank(value))\n                ? new FieldPath(fieldName)\n                : ObjectMeta._FieldPathNullMarker;\n        }\n        let isNullPath = this._fieldPath === ObjectMeta._FieldPathNullMarker;\n        return isNullPath ? null : this._fieldPath;\n    }\n\n    isFieldNullMarker(value: FieldPath): boolean {\n        return isPresent(value) && value.path === 'null';\n    }\n}\n\n\nexport class OMPropertyMerger_Valid implements PropertyMerger, PropertyMergerIsChaining {\n    _meta: Meta;\n    isPropMergerIsChainingMark: boolean = true;\n\n\n    merge(orig: any, override: any, isDeclare: boolean): any {\n        // if first is error (error message or false, it wins), otherwise second\n        return (isString(override) || (isBoolean(override) && BooleanWrapper.isFalse(\n            override))) ? override : orig;\n    }\n\n\n    toString() {\n        return 'VALIDATE';\n    }\n}\n\n\n","/**\n *  This is generated file. Do not edit !!\n *\n *  @formatter:off\n *\n */\n/* tslint:disable */\nexport const SystemRules = {\n \t\toss:\t\t\t[\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'object',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'class': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'Meta.className(object)'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'object',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'declare',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'class': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'Meta.className(object)'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'search',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'class': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'values.get(\"class\")'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editing': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'view',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'SDW',\n\t\t\t        'v': '!properties.get(\"hidden\")'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editing',\n\t\t\t        '_value': true,\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editable': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editing',\n\t\t\t        '_value': false,\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editable': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'fiveZones',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'fiveZoneLayout': true,\n\t\t\t      'zones': [\n\t\t\t        'zLeft',\n\t\t\t        'zMiddle',\n\t\t\t        'zRight',\n\t\t\t        'zTop',\n\t\t\t        'zBottom',\n\t\t\t        'zDetail'\n\t\t\t      ]\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'oneZone',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'zones': [\n\t\t\t        'zLeft',\n\t\t\t        'zDetail'\n\t\t\t      ]\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'tableZones',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'zones': [\n\t\t\t        'zMain',\n\t\t\t        'zLeft',\n\t\t\t        'zRight',\n\t\t\t        'zTop',\n\t\t\t        'zBottom',\n\t\t\t        'zDetail'\n\t\t\t      ]\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'create',\n\t\t\t          'edit',\n\t\t\t          'view',\n\t\t\t          'search'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'fiveZones'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'list',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'tableZones'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FormZones',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FormZones',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'fiveZones',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FormZones',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FormZones',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'oneZone',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FormZones',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'StringComponent',\n\t\t\t      'bindings': {\n\t\t\t        'value': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'boolean',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'boolean',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'Checkbox'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'boolean',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Number',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'formatter': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'formatters.integer'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Number',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'InputFieldComponent'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Number',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Number',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'search',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'formatter': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'formatters.blankNull.integer'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Number',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Date',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'DateAndTimeComponent',\n\t\t\t      'bindings': {\n\t\t\t        'formatter': 'shortDate',\n\t\t\t        'showTime': false\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Date',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'fiveZoneLayout',\n\t\t\t        '_value': true,\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Date',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Date',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'dateTime',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'formatter': 'dateTime',\n\t\t\t        'showTime': true\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Date',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'java.lang.Enum',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'java.lang.Enum',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'GenericChooserComponent',\n\t\t\t      'bindings': {\n\t\t\t        'destinationClass': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'type'\n\t\t\t        },\n\t\t\t        'displayKey': 'name',\n\t\t\t        'formatter': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'formatters.identifier'\n\t\t\t        },\n\t\t\t        'key': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'field'\n\t\t\t        },\n\t\t\t        'object': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'object'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'java.lang.Enum',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'search',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'type': 'Popup'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'java.lang.Enum',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'java.lang.Enum',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': [\n\t\t\t          'Array',\n\t\t\t          'Set'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': [\n\t\t\t          'Array',\n\t\t\t          'Set'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'enum',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'GenericChooserComponent',\n\t\t\t      'bindings': {\n\t\t\t        'multiselect': true,\n\t\t\t        'destinationClass': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"enumClass\")'\n\t\t\t        },\n\t\t\t        'displayKey': 'name',\n\t\t\t        'formatter': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'formatters.identifier'\n\t\t\t        },\n\t\t\t        'key': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'field'\n\t\t\t        },\n\t\t\t        'object': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'object'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': [\n\t\t\t          'Array',\n\t\t\t          'Set'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': [\n\t\t\t          'Array',\n\t\t\t          'Set'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'search',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': [\n\t\t\t          'Array',\n\t\t\t          'Set'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': [\n\t\t\t          'Array',\n\t\t\t          'Set'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'ownedToMany',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaDetailTable',\n\t\t\t      'after': 'zDetail'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': [\n\t\t\t          'Array',\n\t\t\t          'Set'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': '[B',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': '[B',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'FileUploadChooser',\n\t\t\t      'bindings': {\n\t\t\t        'bytes': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': '[B',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': '[B',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': false,\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'value': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'value ? (\"\" + value.length + \" bytes\") : \"(none)\"'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': '[B',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'File',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'File',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'FileUploadChooser',\n\t\t\t      'bindings': {\n\t\t\t        'file': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'File',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'File',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': false,\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'value': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'value ? value.name : \"(none)\"'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'File',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'InputFieldComponent'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'longtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'after': 'zBottom'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'longtext',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'TextAreaComponent',\n\t\t\t      'bindings': {\n\t\t\t        'rows': 10,\n\t\t\t        'cols': 60\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'longtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'longtext',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'search',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'longtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'escapeUnsafeHtml': true\n\t\t\t      },\n\t\t\t      'after': 'zBottom'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'RichTextArea',\n\t\t\t      'bindings': {\n\t\t\t        'rows': 10,\n\t\t\t        'cols': 60\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'search',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'after': 'zNone'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'list',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editable': false,\n\t\t\t      'after': 'zDetail'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'secret',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'formatter': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'formatters.hiddenPassword'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'secret',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'AWPasswordField',\n\t\t\t      'bindings': {}\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'secret',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'secret',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'search',\n\t\t\t          'list'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'secret',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'truncated',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'TruncateString',\n\t\t\t      'bindings': {\n\t\t\t        'size': 10\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'String',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Binary',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Binary',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'imageData',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'contentType': 'image/jpeg'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Binary',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'imageData',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': false,\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'AWImageData',\n\t\t\t      'bindings': {\n\t\t\t        'bytes': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        },\n\t\t\t        'contentType': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'ContentTypeUtils.contentTypeNamed(properties.get(\"contentType\"))'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Binary',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'imageData',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Binary',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'imageData',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'awcontentLayouts': {\n\t\t\t          '_main': '_imgUploadPreview'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Binary',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'imageData',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Binary',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'type',\n\t\t\t        '_value': 'Money',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'CurrencyComponent',\n\t\t\t      'bindings': {\n\t\t\t        'money': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        },\n\t\t\t        'currencies': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"currencies\")'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '_imgUploadPreview',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'MetaContext',\n\t\t\t      'component': 'AWImageData',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'scopeKey': 'field'\n\t\t\t      },\n\t\t\t      'bindings': {\n\t\t\t        'bytes': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        },\n\t\t\t        'style': 'width:100px',\n\t\t\t        'contentType': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'ContentTypeUtils.contentTypeNamed(properties.get(\"contentType\"))'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'derived',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'editable': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'derived',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editing',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'after': 'zNone'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'derived',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'searchable',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'searchable',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'search',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': true,\n\t\t\t      'editable': {\n\t\t\t        't': 'OV',\n\t\t\t        'v': 'true'\n\t\t\t      },\n\t\t\t      'after': {\n\t\t\t        't': 'OV',\n\t\t\t        'v': 'null'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'searchable',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'required',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'required',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'required': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'required',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'object',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'valid': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': '((value != undefined) && (value != null)) ? true : \"Answer required\"'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'required',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': [\n\t\t\t          'edit',\n\t\t\t          'create'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'required',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'list',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'list',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'GenericChooserComponent',\n\t\t\t      'bindings': {\n\t\t\t        'list': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"choices\")'\n\t\t\t        },\n\t\t\t        'type': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"chooserStyle\")'\n\t\t\t        },\n\t\t\t        'key': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"field\")'\n\t\t\t        },\n\t\t\t        'object': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'object'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'list',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'withHoverDetails',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'withHoverDetails',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': false,\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'HoverCardComponent',\n\t\t\t      'bindings': {\n\t\t\t        'linkTitle': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        },\n\t\t\t        'appendContentToBody': false,\n\t\t\t        'ngcontentLayout': 'Content'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'withHoverDetails',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'Content',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaObjectDetailComponent',\n\t\t\t      'bindings': {\n\t\t\t        'layout': 'Inspect',\n\t\t\t        'object': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'value'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'noCreate',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'noCreate',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'create',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'noCreate',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'noSearch',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'noSearch',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'search',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'noSearch',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Popup',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'type': 'Dropdown'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'PopupControl',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'type': 'PopupControl'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Chooser',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'type': 'Chooser'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'PostOnChange',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {}\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'GenericChooserComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'bold',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'GenericContainerComponent',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'tagName': 'b'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'italic',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'GenericContainerComponent',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'tagName': 'i'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'heading1',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'GenericContainerComponent',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'tagName': 'h1'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'heading2',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'GenericContainerComponent',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'tagName': 'h2'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'heading3',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'GenericContainerComponent',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'tagName': 'h3'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': [\n\t\t\t          'StringComponent',\n\t\t\t          'AWHyperlink',\n\t\t\t          'PopupMenuLink'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FieldType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FieldType',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'longtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FieldType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FieldType',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'richtext',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FieldType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FieldType',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'secret',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'FieldType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'ChooserType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'ChooserType',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Popup',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'ChooserType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'ChooserType',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'PopupControl',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'ChooserType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'ChooserType',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Chooser',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'ChooserType',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'bold',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'italic',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'heading1',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'heading2',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'heading3',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'WrapperStyle',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'SDW',\n\t\t\t        'v': '!properties.get(\"hidden\")'\n\t\t\t      },\n\t\t\t      'enabled': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'pageAction',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'actionResults': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'meta.routingService.routeForPage(properties.get(\"pageName\"))'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'modalComponentPage',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'pageBindings': {\n\t\t\t        'componentName': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"componentName\")'\n\t\t\t        },\n\t\t\t        'title': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"title\")'\n\t\t\t        }\n\t\t\t      },\n\t\t\t      'actionResults': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'meta.compPageWithName(\"MetaModalPage\")'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'modalComponentPanel',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'pageBindings': {\n\t\t\t        'clientPanel': true,\n\t\t\t        'componentName': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"componentName\")'\n\t\t\t        },\n\t\t\t        'title': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"title\")'\n\t\t\t        }\n\t\t\t      },\n\t\t\t      'actionResults': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'meta.compPageWithName(\"MetaModalPage\")'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'messageResults',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'actionResults': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'var o = (properties.isInstanceAction ? object : ariba.ui.aribaweb.util.AWUtil.classForName(properties.class)), var v = ariba.util.fieldvalue.FieldValue.getFieldValue(o, properties.action), var m = ariba.util.core.Fmt.S(properties.message, v), ariba.ui.widgets.AribaPageContent.setMessage(m, requestContext.session()), null'\n\t\t\t      },\n\t\t\t      'message': 'Action Performed: %s'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'instance',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'isInstanceAction': true,\n\t\t\t      'enabled': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'object != null'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'filterActions',\n\t\t\t        '_value': 'instance',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'properties.get(\"isInstanceAction\") == true'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'filterActions',\n\t\t\t        '_value': 'static',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': '!properties.get(\"isInstanceAction\")'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'zones': [\n\t\t\t        'zMain'\n\t\t\t      ]\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'ActionButtons',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaActionListComponent',\n\t\t\t      'visible': true,\n\t\t\t      'bindings': {\n\t\t\t        'defaultStyle': 'primary',\n\t\t\t        'renderAs': 'buttons',\n\t\t\t        'align': 'right'\n\t\t\t      },\n\t\t\t      'elementClass': 'l-action-buttons'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'ActionLinks',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaActionListComponent',\n\t\t\t      'visible': true,\n\t\t\t      'bindings': {\n\t\t\t        'renderAs': 'links',\n\t\t\t        'align': 'right'\n\t\t\t      },\n\t\t\t      'elementClass': 'l-action-buttons'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'ActionMenu',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaActionListComponent',\n\t\t\t      'visible': true,\n\t\t\t      'bindings': {\n\t\t\t        'renderAs': 'menu',\n\t\t\t        'align': 'right'\n\t\t\t      },\n\t\t\t      'elementClass': 'l-action-buttons'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'InstanceActionButtons',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaActionListComponent',\n\t\t\t      'visible': true,\n\t\t\t      'bindings': {\n\t\t\t        'filterActions': 'instance',\n\t\t\t        'renderAs': 'buttons',\n\t\t\t        'align': 'right'\n\t\t\t      },\n\t\t\t      'elementClass': 'l-action-buttons'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'StaticActionButtons',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaActionListComponent',\n\t\t\t      'visible': true,\n\t\t\t      'bindings': {\n\t\t\t        'filterActions': 'static',\n\t\t\t        'renderAs': 'buttons',\n\t\t\t        'align': 'right'\n\t\t\t      },\n\t\t\t      'elementClass': 'l-action-buttons'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Tabs',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaTabs',\n\t\t\t      'visible': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Sections',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaSectionsComponent',\n\t\t\t      'visible': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Form',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaFormComponent',\n\t\t\t      'visible': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Stack',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaElementListComponent',\n\t\t\t      'visible': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'OwnZone',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'zonePath': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'layout'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'pad8',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'GenericContainerComponent',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'style': 'padding:8px',\n\t\t\t        'tagName': 'div'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'component',\n\t\t\t        '_value': 'MetaFormComponent',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'labelsOnTop',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout_trait',\n\t\t\t        '_value': 'labelsOnTop',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'bindings': {\n\t\t\t        'showLabelsAboveControls': true\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Tabs',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Sections',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Form',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Stack',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'LayoutGrouping',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': [\n\t\t\t          'Inspect',\n\t\t\t          'SearchForm'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'Form',\n\t\t\t      'label': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'UIMeta.beautifyClassName(values.class)'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': {},\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': [\n\t\t\t          'Inspect',\n\t\t\t          'SearchForm'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'StringComponent',\n\t\t\t      'bindings': {}\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'InspectWithActions',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'Stack'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'InspectWithActions',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'Actions',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'ActionMenu'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'InspectWithActions',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'InspectWithActions',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'Inspect',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'Form'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'InspectWithActions',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'ButtonArea',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'StaticActionButtons'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'SelectionButtonArea',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'InstanceActionButtons'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'Links',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'trait': 'ActionLinks'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'LabelField',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'LabelField',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'labelField',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'OV',\n\t\t\t        'v': 'true'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'LabelField',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': [\n\t\t\t          'Table',\n\t\t\t          'DetailTable'\n\t\t\t        ],\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaTable',\n\t\t\t      'bindings': {\n\t\t\t        'enableScrolling': true,\n\t\t\t        'showSelectionColumn': false,\n\t\t\t        'displayGroup': {\n\t\t\t          't': 'CFP',\n\t\t\t          'v': 'displayGroup'\n\t\t\t        },\n\t\t\t        'title': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"label\")'\n\t\t\t        },\n\t\t\t        'submitOnSelectionChange': true,\n\t\t\t        'singleSelect': true\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'ListItem',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'StringComponent',\n\t\t\t      'bindings': {\n\t\t\t        'value': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'properties.get(\"objectTitle\")'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'object',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'objectTitle': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'FieldPath.getFieldValue(object, meta.displayKeyForClass(values.get(\"class\")))'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'object',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'objectTitle': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': 'FieldPath.getFieldValue(object, meta.displayKeyForClass(values.get(\"class\")))'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'module',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'pageBindings': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': '(properties.get(\"homePage\") == \"MetaHomePageComponent\") ? new Map().set(\"module\", values.get(\"module\")) : null'\n\t\t\t      },\n\t\t\t      'component': 'MetaDashboardLayoutComponent',\n\t\t\t      'visible': {\n\t\t\t        't': 'SDW',\n\t\t\t        'v': '!properties.get(\"hidden\")'\n\t\t\t      },\n\t\t\t      'homePage': 'MetaHomePageComponent'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'module',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'module',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'module',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'ActionTOC',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'module',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'ActionTOC',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'layout',\n\t\t\t        '_value': 'Actions',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'MetaActionListComponent',\n\t\t\t      'label': 'Actions',\n\t\t\t      'after': 'zToc'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'module',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'ActionTOC',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'module',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'actionCategory',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'SDW',\n\t\t\t        'v': '!properties.get(\"hidden\")'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'actionCategory',\n\t\t\t        '_value': 'General',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'after': 'zMain',\n\t\t\t      'label': {\n\t\t\t        't': 'i18n',\n\t\t\t        'v': {\n\t\t\t          'key': 'a001',\n\t\t\t          'defVal': 'General'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  }\n\t\t\t]\n};\n\n/* tslint:disable */\n/**\n *  @formatter:on\n *\n */\n","/**\n *  This is generated file. Do not edit !!\n *\n *  @formatter:off\n *\n */\n/* tslint:disable */\nexport const SystemPersistenceRules = {\n \t\toss:\t\t\t[\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'displayKey': 'toString',\n\t\t\t      'searchOperation': 'search'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'Searchable',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'textSearchSupported': true,\n\t\t\t      'searchOperation': 'keywordSearch'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'keywordSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'useTextIndex': true\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'keywordSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': false\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'keywordSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'keywordSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': 'keywords',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'OV',\n\t\t\t        'v': 'true'\n\t\t\t      },\n\t\t\t      'bindings': {\n\t\t\t        'size': 30\n\t\t\t      },\n\t\t\t      'trait': 'SearchableProperty',\n\t\t\t      'rank': 0,\n\t\t\t      'after': 'zTop',\n\t\t\t      'type': 'java.lang.String'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'keywordSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'textSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'textSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'textSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'SearchableProperty',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'visible': {\n\t\t\t        't': 'OV',\n\t\t\t        'v': 'true'\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'textSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'operation',\n\t\t\t        '_value': 'textSearch',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toOneRelationship',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toOneRelationship',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'GenericChooserComponent',\n\t\t\t      'bindings': {\n\t\t\t        'destinationClass': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'elementType'\n\t\t\t        },\n\t\t\t        'multiselect': false,\n\t\t\t        'displayKey': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'meta.displayLabel(type, properties.get(\"labelField\"))'\n\t\t\t        },\n\t\t\t        'type': 'Dropdown',\n\t\t\t        'key': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'field'\n\t\t\t        },\n\t\t\t        'object': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'object'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toOneRelationship',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toManyChooser',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toManyChooser',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'editable',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'GenericChooserComponent',\n\t\t\t      'bindings': {\n\t\t\t        'destinationClass': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'elementType'\n\t\t\t        },\n\t\t\t        'multiselect': true,\n\t\t\t        'displayKey': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'meta.displayLabel(type, properties.get(\"labelField\"))'\n\t\t\t        },\n\t\t\t        'type': 'Chooser',\n\t\t\t        'key': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'field'\n\t\t\t        },\n\t\t\t        'object': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'object'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toManyChooser',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toManyLink',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'component': 'AWHyperlink',\n\t\t\t      'bindings': {\n\t\t\t        'omitTags': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': '!value || (value.size() == 0)'\n\t\t\t        },\n\t\t\t        'awcontent': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'value ? (\"\" + value.size() + \" items\") : \"(none)\"'\n\t\t\t        },\n\t\t\t        'action': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'set(\"object\", value), set(\"actionCategory\", \"General\"), set(\"action\", \"Inspect\"), ariba.ui.meta.core.UIMeta.getInstance().fireAction(this, requestContext)'\n\t\t\t        }\n\t\t\t      }\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': '*',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'RelViewers',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'RelViewers',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toOneRelationship',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'RelViewers',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'RelViewers',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toManyChooser',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'RelViewers',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'RelViewers',\n\t\t\t        '_isDecl': true\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'trait',\n\t\t\t        '_value': 'toManyLink',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'traitGroup',\n\t\t\t        '_value': 'RelViewers',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'action',\n\t\t\t        '_value': 'Inspect',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'pageBindings': {\n\t\t\t        'layout': 'Inspect',\n\t\t\t        'clientPanel': true,\n\t\t\t        'operation': 'view',\n\t\t\t        'object': {\n\t\t\t          't': 'Expr',\n\t\t\t          'v': 'object'\n\t\t\t        }\n\t\t\t      },\n\t\t\t      'visible': true,\n\t\t\t      'trait': 'pageAction',\n\t\t\t      'pageName': 'MetaContentPageComponent'\n\t\t\t    },\n\t\t\t    '_rank': 0\n\t\t\t  }\n\t\t\t]\n};\n\n/* tslint:disable */\n/**\n *  @formatter:on\n *\n */\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Type} from '@angular/core';\nimport {\n    AppConfig,\n    assert,\n    decamelize,\n    Environment,\n    FieldPath,\n    isArray,\n    isBlank,\n    isPresent,\n    isString,\n    isStringMap,\n    ListWrapper,\n    MapWrapper,\n    RoutingService,\n    warn\n} from '@aribaui/core';\nimport {ObjectMeta} from './object-meta';\nimport {ComponentRegistry} from '@aribaui/components';\nimport {\n    Meta,\n    PropertyMap,\n    PropertyMapAwaking,\n    PropertyMerger_And,\n    ValueQueriedObserver\n} from './meta';\nimport {Context, UIContext} from './context';\nimport {SystemRules} from './widgets-rules';\nimport {DynamicPropertyValue, StaticallyResolvable, StaticDynamicWrapper} from './property-value';\nimport {Rule, Selector} from './rule';\nimport {JsonRule} from './json-rule';\nimport {ItemProperties} from './item-properties';\nimport {SystemPersistenceRules} from './persistence-rules';\nimport {ACTIVE_CNTX} from './meta-context/meta-context.component';\n\n\n/**\n * UIMeta is responsible setting layouts and all around this. We can either use this as a singleton\n * or use it as a service using Angular @Inject()\n * Right now we use still singleton as we need this class as a library for some other projects\n *\n *\n * todo: Convert to Injectable\n */\n\n    // @Injectable()\nexport class UIMeta extends ObjectMeta {\n    static KeyOperation = 'operation';\n    static KeyModule = 'module';\n    static KeyLayout = 'layout';\n    static KeyArea = 'area';\n    static KeyEditing = 'editing';\n    static KeyAfter = 'after';\n    static KeyHidden = 'hidden';\n    static KeyLabel = 'label';\n    static KeyComponentName = 'component';\n    static KeyBindings = 'bindings';\n    static KeyHomePage = 'homePage';\n    static KeyZonePath = 'zonePath';\n    static PropFieldsByZone = 'fieldsByZone';\n    static PropIsFieldsByZone = 'fiveZoneLayout';\n    static PropActionsByCategory = 'actionsByCategory';\n    static PropActionCategories = 'actionCategories';\n    static PropFieldPropertyList = 'fieldPropertyList';\n    static PropLayoutsByZone = 'layoutsByZone';\n    static KeyWrapperComponent = 'wrapperComponent';\n    static KeyWrapperBinding = 'wrapperBindings';\n\n\n    static RootPredecessorKey = '_root';\n    static readonly ZoneMain = 'zMain';\n    static readonly ZoneTop = 'zTop';\n    static readonly ZoneLeft = 'zLeft';\n    static readonly ZoneMiddle = 'zMiddle';\n    static readonly ZoneRight = 'zRight';\n    static readonly ZoneBottom = 'zBottom';\n    static readonly ZoneDetail = 'zDetail';\n\n    static readonly AppConfigRuleFilesParam = 'metaui.rules.file-names';\n    static readonly AppConfigUserRulesParam = 'metaui.rules.user-rules';\n\n    static ZonesTLRMB = [\n        UIMeta.ZoneTop, UIMeta.ZoneLeft, UIMeta.ZoneMiddle,\n        UIMeta.ZoneRight, UIMeta.ZoneBottom\n    ];\n    static ZonesMTLRB = [\n        UIMeta.ZoneMain, UIMeta.ZoneTop, UIMeta.ZoneLeft, UIMeta.ZoneRight, UIMeta.ZoneBottom\n    ];\n    static ZonesDetail = [UIMeta.ZoneDetail];\n\n    private static _instance: UIMeta = null;\n\n    static ModuleActionZones: string[] = ['zNav', 'zGlobal'];\n    static ActionZones: string[] = ['zGlobal', 'zMain', 'zGeneral'];\n\n\n    static getInstance(): UIMeta {\n        return this._instance || (this._instance = new this());\n    }\n\n    static defaultLabelForIdentifier(fieldName: string) {\n        let lastDot = fieldName.lastIndexOf('.');\n        if (lastDot !== -1 && lastDot !== fieldName.length - 1) {\n            fieldName = fieldName.substring(lastDot + 1);\n        }\n        return decamelize(fieldName);\n    }\n\n    static beautifyClassName(className: string): string {\n        return decamelize(className, ' ');\n    }\n\n    static beautifyFileName(field: string): string {\n        return decamelize(field, ' ');\n    }\n\n\n    private constructor() {\n        super();\n\n        // if (isPresent(loader)) {\n        //     this.registerLoader(loader);\n        // }\n\n        try {\n            this.beginRuleSet('UIMeta');\n\n            this.registerKeyInitObserver(UIMeta.KeyClass, new UserMetaDataProvider());\n\n            // These keys define scopes for their properties\n            // defineKeyAsPropertyScope(KeyArea);\n            this.defineKeyAsPropertyScope(UIMeta.KeyLayout);\n            this.defineKeyAsPropertyScope(UIMeta.KeyModule);\n\n            // Default rule for converting field name to label\n            this.registerDefaultLabelGeneratorForKey(UIMeta.KeyClass);\n            this.registerDefaultLabelGeneratorForKey(UIMeta.KeyField);\n            this.registerDefaultLabelGeneratorForKey(UIMeta.KeyLayout);\n            this.registerDefaultLabelGeneratorForKey(UIMeta.KeyModule);\n            this.registerDefaultLabelGeneratorForKey(UIMeta.KeyAction);\n            this.registerDefaultLabelGeneratorForKey(UIMeta.KeyActionCategory);\n\n            // policies for chaining certain well known properties\n            this.registerPropertyMerger(UIMeta.KeyArea, Meta.PropertyMerger_DeclareList);\n            this.registerPropertyMerger(UIMeta.KeyLayout, Meta.PropertyMerger_DeclareList);\n            this.registerPropertyMerger(UIMeta.KeyModule, Meta.PropertyMerger_DeclareList);\n\n            this.mirrorPropertyToContext(UIMeta.KeyEditing, UIMeta.KeyEditing);\n            this.mirrorPropertyToContext(UIMeta.KeyLayout, UIMeta.KeyLayout);\n            this.mirrorPropertyToContext(UIMeta.KeyComponentName, UIMeta.KeyComponentName);\n\n            this.registerPropertyMerger(UIMeta.KeyEditing, new PropertyMerger_And());\n\n            // this.registerValueTransformerForKey('requestContext', UIMeta.Transformer_KeyPresent);\n            // this.registerValueTransformerForKey('displayGroup', UIMeta.Transformer_KeyPresent);\n\n            // define operation hierarchy\n            this.keyData(UIMeta.KeyOperation).setParent('view', 'inspect');\n            this.keyData(UIMeta.KeyOperation).setParent('print', 'view');\n            this.keyData(UIMeta.KeyOperation).setParent('edit', 'inspect');\n            this.keyData(UIMeta.KeyOperation).setParent('search', 'inspect');\n            this.keyData(UIMeta.KeyOperation).setParent('keywordSearch', 'search');\n            this.keyData(UIMeta.KeyOperation).setParent('textSearch', 'keywordSearch');\n\n            this.registerStaticallyResolvable(UIMeta.PropFieldsByZone,\n                new PropFieldsByZoneResolver(),\n                UIMeta.KeyClass);\n            this.registerStaticallyResolvable(UIMeta.PropFieldPropertyList,\n                new PropFieldPropertyListResolver(),\n                UIMeta.KeyClass);\n            this.registerStaticallyResolvable(UIMeta.PropLayoutsByZone,\n                new PropLayoutsByZoneResolver(),\n                UIMeta.KeyLayout);\n\n\n            // this.registerStaticallyResolvable(UIMeta.PropLayoutsByZone , new\n            // PropLayoutsByZoneResolver() , UIMeta.KeyLayout);\n            // registerStaticallyResolvable('bindingsDictionary' , dyn , KeyField);\n            // registerStaticallyResolvable('bindingsDictionary' , dyn , KeyLayout);\n            // registerStaticallyResolvable('bindingsDictionary' , dyn , KeyClass);\n            // registerStaticallyResolvable('bindingsDictionary' , dyn , KeyModule);\n        } finally {\n            this.endRuleSet();\n        }\n\n    }\n\n\n    zones(context: Context): Array<string> {\n        let zones: Array<string> = context.propertyForKey('zones');\n        return (isBlank(zones)) ? Meta.toList(UIMeta.ZoneMain) : zones;\n    }\n\n\n    zonePath(context: Context): string {\n        let zonePath: any;\n        if (isPresent(context.values.get(UIMeta.KeyLayout))) {\n            context.push();\n            context.setScopeKey(UIMeta.KeyLayout);\n            zonePath = context.propertyForKey(UIMeta.KeyZonePath);\n            context.pop();\n        }\n        return zonePath;\n    }\n\n\n    newContext(isNested: boolean = false): Context {\n        return new UIContext(this, isNested);\n    }\n\n    // Load system rules\n    loadDefaultRuleFiles(references?: any): boolean {\n\n        if (isPresent(SystemRules.oss)) {\n            this.beginRuleSetWithRank(Meta.SystemRulePriority, 'system');\n            try {\n                this._loadRules(SystemRules.oss, 'system', false);\n            } finally {\n                this.endRuleSet();\n            }\n        }\n\n        if (isPresent(SystemPersistenceRules.oss)) {\n            this.beginRuleSetWithRank(Meta.SystemRulePriority + 2000, 'system-persistence');\n            try {\n                this._loadRules(SystemPersistenceRules.oss, 'system-persistence', false);\n            } finally {\n                this.endRuleSet();\n            }\n        }\n        if (isPresent(references)) {\n            this.registerComponents(references);\n        }\n        return false;\n    }\n\n\n    /**\n     * loads application level rules. Application level rules are global rules\n     */\n    loadApplicationRules(): void {\n        let aRules: Array<JsonRule>;\n        let userReferences: any[];\n        let appRuleFiles: string[] = ['Application'];\n\n        if (isPresent(this.appConfig)) {\n            appRuleFiles = this.appConfig.get(UIMeta.AppConfigRuleFilesParam) || ['Application'];\n            userReferences = this.appConfig.get(UIMeta.AppConfigUserRulesParam);\n\n            // make sure we have always Application and make it more additive.\n            if (!ListWrapper.contains<string>(appRuleFiles, 'Application')) {\n                appRuleFiles.unshift('Application');\n            }\n        }\n\n        for (let ruleFile of appRuleFiles) {\n            let rule = ruleFile + 'Rule';\n\n            if (this._testRules.has(rule)) {\n                // since we are in development mode and test mode is on we can check extra\n                // repository used by tests, we need to check if we are not running unittest\n                // and a class is not defined but unittest\n\n                if (this._testRules.has(rule) &&\n                    isPresent(this._testRules.get(rule).oss)) {\n                    aRules = this._testRules.get(rule).oss;\n\n                    if (isPresent(aRules)) {\n                        this.beginRuleSetWithRank(Meta.LowRulePriority, ruleFile.toLowerCase());\n                        try {\n                            this._loadRules(aRules, ruleFile.toLowerCase(), false);\n                        } finally {\n                            this.endRuleSet();\n                        }\n                    }\n                }\n            } else {\n                for (let i in userReferences) {\n                    let userRule = userReferences[i];\n\n                    if (isPresent(userRule)) {\n\n                        if (isPresent(userRule[rule]) && isPresent(userRule[rule].oss)) {\n                            aRules = userRule[rule].oss;\n                        }\n                    }\n                    if (isPresent(aRules)) {\n                        this.beginRuleSetWithRank(Meta.LowRulePriority, ruleFile.toLowerCase());\n                        try {\n                            this._loadRules(aRules, ruleFile.toLowerCase(), false);\n                        } finally {\n                            this.endRuleSet();\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n    loadUserRule(source: any, userClass: string): boolean {\n\n        if (isPresent(source)) {\n            this.beginRuleSetWithRank(this._ruleCount, 'user:' + userClass);\n            try {\n                this._loadRules(source, 'user', false);\n            } finally {\n                this.endRuleSet();\n            }\n        }\n        return false;\n    }\n\n\n    defaultLabelGeneratorForKey(key: string): DynamicPropertyValue {\n        return new _DefaultLabelGenerator(key);\n    }\n\n\n    registerDerivedValue(propKey: string, dynamicValue: DynamicPropertyValue,\n                         contextKey: string,\n                         contextValue: string): void {\n        let m = new Map<string, any>();\n        m.set(propKey, dynamicValue);\n        this.addRule(new Rule(Meta.toList(\n            new Selector(contextKey, contextValue)), m, Meta.SystemRulePriority));\n    }\n\n\n    registerStaticallyResolvable(propKey: string, dynamicValue: StaticallyResolvable,\n                                 contextKey: string): void {\n        this.registerDerivedValue(propKey, new StaticDynamicWrapper(dynamicValue), contextKey,\n            Meta.KeyAny);\n    }\n\n    registerDefaultLabelGeneratorForKey(key: string): void {\n        this.registerDerivedValue(UIMeta.KeyLabel, new LocalizedLabelString(this), key,\n            UIMeta.KeyAny);\n    }\n\n    fieldList(context: Context): Array<ItemProperties> {\n        return this.itemList(context, UIMeta.KeyField, UIMeta.ZonesTLRMB);\n    }\n\n    fieldsByZones(context: Context): Map<string, any> {\n        return this.itemsByZones(context, UIMeta.KeyField, UIMeta.ZonesTLRMB);\n    }\n\n    itemNamesByZones(context: Context, key: string, zones: string[]): Map<string, any> {\n        let itemsByZones: Map<string, any> = this.itemsByZones(context, key, zones);\n        return this.mapItemPropsToNames(itemsByZones);\n    }\n\n    mapItemPropsToNames(itemsByZones: Map<string, any>): Map<string, any> {\n        let namesByZones: Map<string, any> = new Map<string, any>();\n\n        MapWrapper.iterable(itemsByZones).forEach((value, key) => {\n            if (isPresent(value) && isArray(value)) {\n                let names: string[] = [];\n                for (let item of value) {\n                    if (item instanceof ItemProperties) {\n                        names.push(\n                            (<ItemProperties>item).name);\n                    }\n                }\n                namesByZones.set(key, names);\n\n            } else {\n                namesByZones.set(key,\n                    this.mapItemPropsToNames(\n                        value));\n            }\n        });\n        return namesByZones;\n    }\n\n    predecessorMap(context: Context, key: string,\n                   defaultPredecessor: string): Map<string, Array<ItemProperties>> {\n        let fieldInfos: Array<ItemProperties> = this.itemProperties(context, key, false);\n        let predecessors: Map<string, Array<ItemProperties>> = MapWrapper.groupBy<ItemProperties>(\n            fieldInfos, (item: ItemProperties) => {\n                let pred = item.properties.get(UIMeta.KeyAfter);\n                return isPresent(pred) ? pred : defaultPredecessor;\n            });\n\n        return predecessors;\n    }\n\n    itemList(context: Context, key: string, zones: string[]): Array<ItemProperties> {\n        let predecessors: Map<string, Array<ItemProperties>> = this.predecessorMap(context, key,\n            zones[0]);\n        let result: Array<ItemProperties> = [];\n\n        for (let zone of zones) {\n            this.accumulatePrecessors(predecessors, zone, result);\n        }\n        return result;\n    }\n\n    isZoneReference(key: string): boolean {\n        // keys of the form 'z<Name>' and 'foo.bar.z<Name>' are considered zone keys\n        let lastDot = key.lastIndexOf('.');\n        let suffix = (lastDot === -1) ? key : key.substring(lastDot + 1);\n        return (suffix.length > 1) && (suffix[0] === 'z') && (\n            suffix[1].toUpperCase() === suffix[1] // is uppercase ?s\n        );\n    }\n\n    itemsByZones(context: Context, property: string, zones: string[]): Map<string, any> {\n        let predecessors = this.predecessorMap(context, property, zones[0]);\n        let byZone = new Map<string, any>();\n\n\n        MapWrapper.iterable(predecessors).forEach((value, zone) => {\n            if (this.isZoneReference(zone)) {\n                let list: any[] = [];\n                this.accumulatePrecessors(predecessors,\n                    zone, list);\n\n                FieldPath.setFieldValue(byZone, zone, list);\n            }\n        });\n\n        return byZone;\n    }\n\n    // recursive decent of predecessor tree...\n    accumulatePrecessors(predecessors: Map<string, Array<ItemProperties>>, key: string,\n                         result: any): void {\n        let items: Array<ItemProperties> = predecessors.get(key);\n        if (isBlank(items)) {\n            return;\n        }\n\n        ListWrapper.sort<ItemProperties>(items, (o1, o2) => {\n            let r1 = o1.properties.get(UIMeta.KeyRank);\n            let r2 = o2.properties.get(UIMeta.KeyRank);\n\n            if (r1 === null) {\n                r1 = 100;\n            }\n            if (r2 === null) {\n                r2 = 100;\n            }\n\n            return (r1 === r2) ? 0 : (r1 === null) ? 1 : (r2 === null) ? -1 : (r1 - r2);\n        });\n\n        for (let item of items) {\n            if (!item.hidden) {\n                result.push(item);\n            }\n            this.accumulatePrecessors(predecessors, item.name, result);\n        }\n    }\n\n    /**\n     * Called by Parser to handle decls like 'zLeft => lastName#required'\n     *\n     */\n    addPredecessorRule(itemName: string, contextPreds: Array<Selector>, predecessor: string,\n                       traits: any,\n                       lineNumber: number): Rule {\n        if (isBlank(predecessor) && isBlank(traits)) {\n            return null;\n        }\n\n        let key: string = this.scopeKeyForSelector(contextPreds);\n        if (isBlank(key) || key === UIMeta.KeyClass) {\n            key = UIMeta.KeyField;\n        }\n        let selector: Array<Selector> = new Array<Selector>();\n        ListWrapper.addAll<Selector>(selector, contextPreds);\n\n        selector.push(new Selector(key, itemName));\n        let props: Map<string, any> = new Map<string, any>();\n\n        if (isPresent(predecessor)) {\n            props.set(UIMeta.KeyAfter, predecessor);\n        }\n\n        if (isPresent(traits)) {\n            props.set(UIMeta.KeyTrait, traits);\n        }\n        let rule = new Rule(selector, props, 0, lineNumber);\n        this.addRule(rule);\n        return rule;\n    }\n\n    flattenVisible(fieldsByZones: Map<string, Array<string>>, zoneList: string[], key: string,\n                   context: Context): string[] {\n        let result: string[] = [];\n\n        if (isPresent(fieldsByZones)) {\n\n            for (let zone of  zoneList) {\n                let fields: string[] = fieldsByZones.get(zone);\n\n                if (isBlank(fields)) {\n                    continue;\n                }\n\n                for (let field of fields) {\n                    context.push();\n                    context.set(key, field);\n                    if (context.booleanPropertyForKey(UIMeta.KeyVisible, false)) {\n                        result.push(field);\n                    }\n                    context.pop();\n                }\n            }\n        }\n        return result;\n    }\n\n    displayKeyForClass(className: string): string {\n        // performance: should use registerDerivedValue('...', new Context.StaticDynamicWrapper\n        // to get cached resolution here...\n        let context = this.newContext();\n        context.set(UIMeta.KeyLayout, 'LabelField');\n        context.set(UIMeta.KeyClass, className);\n        let fields: Array<ItemProperties> = this.itemProperties(context, UIMeta.KeyField, true);\n\n        return ListWrapper.isEmpty(fields) ? '$toString' : fields[0].name;\n    }\n\n\n    displayLabel(className: string, propertiesValue: string): string {\n\n        if (isPresent(propertiesValue)) {\n            return propertiesValue;\n        }\n        return this.displayKeyForClass(className);\n    }\n\n\n    createLocalizedString(key: string, defaultValue: string): LocalizedString {\n        assert(isPresent(this._currentRuleSet),\n            'Attempt to create localized string without currentRuleSet in place');\n\n        return new LocalizedString(this, this._currentRuleSet.filePath, key, defaultValue);\n    }\n\n\n    get routingService(): RoutingService {\n        return (isPresent(this._injector)) ? this._injector.get(RoutingService) : null;\n    }\n\n    get env(): Environment {\n        return (isPresent(this._injector)) ? this._injector.get(Environment) : new Environment();\n    }\n\n\n    get appConfig(): AppConfig {\n        return (isPresent(this._injector)) ? this._injector.get(AppConfig) : null;\n    }\n\n    /**\n     * Registers framework level components and listen for user level rules to be registered.\n     * After we register user level rules it will load application.oss.\n     *\n     *\n     */\n    private registerComponents(sysReferences: any): void {\n        assert(isPresent(this.injector), 'Cannot register components without Injector in order' +\n            ' to get access to ComponentRegistry Service');\n\n        assert(this.env.inTest || isPresent(this.appConfig.get(UIMeta.AppConfigUserRulesParam)),\n            'Unable to initialize MetaUI as user rules are missing. please use:' +\n            ' metaui.rules.user-rules configuration param');\n\n        this.componentRegistry = this.injector.get(ComponentRegistry);\n        if (isPresent(this.componentRegistry)) {\n\n            this.componentRegistry.registerTypes(sysReferences);\n\n            if (!this.env.inTest) {\n                let userReferences: any[] = this.appConfig.get(UIMeta.AppConfigUserRulesParam);\n                for (let uRule of userReferences) {\n                    this.componentRegistry.registerTypes(uRule);\n                }\n                this.loadApplicationRules();\n            }\n\n        } else if (!this.env.inTest) {\n            warn('UIMeta.registerComponents() No components were registered !');\n        }\n\n    }\n\n\n    /**\n     *\n     * Just need to call it different than the other fireAction as I can not do any method\n     * overloading here.\n     *\n     */\n    fireActionFromProps(action: ItemProperties, context: Context): void {\n        context.push();\n        let actionCategory = action.properties.get(ObjectMeta.KeyActionCategory);\n        if (isBlank(actionCategory)) {\n            actionCategory = ObjectMeta.DefaultActionCategory;\n        }\n        context.set(ObjectMeta.KeyActionCategory, actionCategory);\n        context.set(ObjectMeta.KeyAction, action.name);\n\n        this._fireAction(context, false);\n        context.pop();\n\n    }\n\n    fireAction(context: UIContext, withBackAction: boolean = false): void {\n        context.push();\n        this._fireAction(context, withBackAction);\n        context.pop();\n\n    }\n\n    private _fireAction(context: Context, withBackAction: boolean): void {\n        let actionResults = context.propertyForKey('actionResults');\n        if (isBlank(actionResults) || !this.isRoute(actionResults)) {\n            return;\n        }\n        this.naviateToPage(context, actionResults, withBackAction);\n    }\n\n    naviateToPage(context: Context, route: any, withBackAction: boolean): void {\n        let params = this.prepareRoute(context, withBackAction);\n\n        let uiContex: UIContext = <UIContext> context;\n        this.routingService.navigateWithRoute(route, params, uiContex.object);\n    }\n\n\n    prepareRoute(context: Context, withBackAction: boolean): any {\n        let params = {};\n        let pageBindings = context.propertyForKey('pageBindings');\n        if (isPresent(pageBindings)) {\n            pageBindings.forEach((v: any, k: any) => {\n                if (k !== ObjectMeta.KeyObject) {\n                    (<any>params)[k] = context.resolveValue(v);\n                }\n            });\n            if (isPresent(withBackAction)) {\n                (<any>params)['b'] = withBackAction;\n            }\n\n        }\n\n        return params;\n    }\n\n\n    prepareRouteForComponent(component: any, context: Context, withBackAction: boolean): any {\n        let params = {};\n        let pageBindings = context.propertyForKey('pageBindings');\n        if (isPresent(pageBindings)) {\n            pageBindings.forEach((v: any, k: any) => {\n                component[k] = v;\n            });\n        }\n\n        return params;\n    }\n\n\n    gotoModule(module: ItemProperties, activatedPath?: string): void {\n\n        this.env.deleteValue(ACTIVE_CNTX);\n        let context = this.newContext();\n\n\n        context.push();\n        context.set(UIMeta.KeyModule, module.name);\n        let pageName = context.propertyForKey(UIMeta.KeyHomePage);\n\n\n        let route = this.routingService.routeForPage(pageName, module.name.toLowerCase(),\n            activatedPath);\n        if (activatedPath === '/') {\n            activatedPath = '';\n        }\n        let path = `${activatedPath}/${route.path}`;\n\n        let params = this.prepareRoute(context, null);\n        context.pop();\n\n        this.routingService.navigate([path, params], {skipLocationChange: true});\n    }\n\n    private isRoute(actionResult: any): boolean {\n        return isStringMap(actionResult) && isPresent(actionResult['path']);\n\n    }\n\n    compPageWithName(name: string): Type<any> {\n        let currType = this.componentRegistry.nameToType.get(name);\n        if (isBlank(currType)) {\n            assert(false, name + ' component does not exists. Create Dummy Component instead of' +\n                ' throwing this error');\n            return;\n        }\n        return currType;\n    }\n\n\n    // caller must push/pop!\n    actionsByCategory(context: Context, result: Map<string, Array<ItemProperties>>,\n                      zones: string[]): Array<ItemProperties> {\n        let catNames: string[] = [];\n        let actionCategories = this.itemList(context, ObjectMeta.KeyActionCategory, zones);\n\n        if (isPresent(actionCategories)) {\n            actionCategories.forEach((item: ItemProperties) => catNames.push(item.name));\n        }\n\n        this.addActionsForCategories(context, result, catNames);\n        return actionCategories;\n    }\n\n    addActionsForCategories(context: Context, result: Map<string, Array<ItemProperties>>,\n                            catNames: string[]): void {\n        for (let cat of catNames) {\n            context.push();\n            if (cat !== ObjectMeta.DefaultActionCategory) {\n                context.set(ObjectMeta.KeyActionCategory, cat);\n            }\n\n            this.collectActionsByCategory(context, result, cat);\n            context.pop();\n        }\n\n    }\n\n\n    collectActionsByCategory(context: Context, result: Map<string, Array<ItemProperties>>,\n                             targetCat: string): void {\n        let actionInfos: ItemProperties[] = this.itemProperties(context, ObjectMeta.KeyAction,\n            true);\n        for (let actionInfo of actionInfos) {\n            context.push();\n            context.set(ObjectMeta.KeyAction, actionInfo.name);\n\n            let visible = context.booleanPropertyForKey(ObjectMeta.KeyVisible, true);\n            context.pop();\n\n            if (visible) {\n                let category = actionInfo.properties.get(ObjectMeta.KeyActionCategory);\n\n                if (category == null) {\n                    category = ObjectMeta.DefaultActionCategory;\n                }\n                if (targetCat !== category) {\n                    continue;\n                }\n\n                let forCategory: ItemProperties[] = result.get(category);\n                if (isBlank(forCategory)) {\n                    forCategory = [];\n                    result.set(category, forCategory);\n                }\n                forCategory.push(actionInfo);\n            }\n        }\n    }\n\n\n    computeModuleInfo(context: Context = this.newContext(),\n                      checkVisibility: boolean = true): ModuleInfo {\n\n        let moduleInfo: ModuleInfo = new ModuleInfo();\n        moduleInfo.modules = [];\n\n        let allModuleProps: Array<ItemProperties> = this.itemList(context, UIMeta.KeyModule,\n            UIMeta.ActionZones);\n        moduleInfo.moduleNames = [];\n        moduleInfo.moduleByNames = new Map<string, ItemProperties>();\n\n        for (let module of allModuleProps) {\n\n            context.push();\n            context.set(UIMeta.KeyModule, module.name);\n\n            if (checkVisibility && !context.booleanPropertyForKey(UIMeta.KeyVisible, true)) {\n                context.pop();\n                continue;\n            }\n\n            moduleInfo.moduleNames.push(module.name);\n\n            // // todo: create typescript anotation\n            // context.push();\n            // context.set(\"homeForClasses\", true);\n            // let homeClasses: Array<string> = this.itemNames(context, UIMeta.KeyClass);\n            // context.pop();\n\n\n            let modProperties = new ItemProperties(module.name, context.allProperties(), false);\n            moduleInfo.modules.push(modProperties);\n\n            moduleInfo.moduleByNames.set(module.name, modProperties);\n\n            context.pop();\n        }\n\n        context.push();\n        context.set(UIMeta.KeyModule, moduleInfo.moduleNames);\n        moduleInfo.actionsByCategory = new Map<string, Array<ItemProperties>>();\n        moduleInfo.actionCategories = this.actionsByCategory(context, moduleInfo.actionsByCategory,\n            UIMeta.ModuleActionZones);\n        context.pop();\n\n        return moduleInfo;\n    }\n\n\n    currentModuleLabel(moduleName: string, context: Context = this.newContext()): string {\n        context.push();\n        context.set(UIMeta.KeyModule, moduleName);\n        let label: string = context.propertyForKey(UIMeta.KeyLabel);\n        context.pop();\n\n        return label;\n    }\n\n}\n\nexport class ModuleInfo {\n    modules: Array<ItemProperties>;\n    moduleNames: Array<string>;\n    moduleByNames: Map<string, ItemProperties>;\n    actionCategories: Array<ItemProperties>;\n    actionsByCategory: Map<string, Array<ItemProperties>>;\n}\n\n\nexport class LocalizedString extends DynamicPropertyValue {\n\n    constructor(protected meta: UIMeta, protected _module: string, protected  _key: string,\n                protected _defaultValue: string) {\n        super();\n    }\n\n    evaluate(context: Context): any {\n\n        let localizedString: any;\n        // let clazz = context.values.get('class');\n        // if (isPresent(this._key) && isPresent(this.meta.i18nService)) {\n        //     let i18nKey = clazz + '.' + this._key;\n        //     localizedString = this.meta.i18nService.instant(i18nKey);\n        //\n        //     // when it return the same string most likely it means there is no\n        //     // translation so default it to null\n        //     localizedString = (localizedString === i18nKey) ? null : localizedString;\n        // }\n\n        // if (isBlank(localizedString) || this._key === ObjectMeta.KeyField) {\n        //     return this._defaultValue;\n        // }\n        return this._defaultValue;\n    }\n\n    toString(): string {\n        return 'LocaledString: {' + this._key + ' - ' + this._defaultValue + ' }';\n    }\n}\n\nclass LocalizedLabelString extends LocalizedString implements PropertyMapAwaking {\n    static DefaultModule = 'default';\n    propertyAwaking: boolean = true;\n\n    constructor(protected meta: UIMeta) {\n        super(meta, LocalizedLabelString.DefaultModule, null, null);\n    }\n\n    evaluate(context: Context): any {\n        if (isBlank(this._key)) {\n            let scopeKey: string = context.values.get(Meta.ScopeKey);\n            let scopeVal: string = context.values.get(scopeKey);\n\n            this._defaultValue = UIMeta.defaultLabelForIdentifier(scopeVal);\n\n            this._key = scopeKey;\n        }\n        return super.evaluate(context);\n    }\n\n    awakeForPropertyMap(map: PropertyMap): any {\n        return new LocalizedLabelString(this.meta);\n    }\n\n}\n\n\nclass PropFieldsByZoneResolver extends StaticallyResolvable {\n\n\n    evaluate(context: Context): any {\n        let m = (<UIMeta>context.meta).itemNamesByZones(context, UIMeta.KeyField,\n            (<UIMeta>context.meta).zones(context));\n        let zonePath = (<UIMeta>context.meta).zonePath(context);\n        if (isPresent(zonePath)) {\n\n\n            m = <Map<string, any>> FieldPath.getFieldValue(m, zonePath);\n            if (isBlank(m)) {\n                m = new Map<string, any>();\n            }\n        }\n        return m;\n    }\n}\n\nclass PropFieldPropertyListResolver extends StaticallyResolvable {\n\n    evaluate(context: Context): any {\n        return (<UIMeta>context.meta).fieldList(context);\n    }\n}\n\nclass PropLayoutsByZoneResolver extends StaticallyResolvable {\n\n    evaluate(context: Context): any {\n        return (<UIMeta>context.meta).itemNamesByZones(context, UIMeta.KeyLayout,\n            (<UIMeta>context.meta).zones(context));\n    }\n}\n\n\nclass _DefaultLabelGenerator extends StaticallyResolvable {\n\n\n    constructor(private _key: string) {\n        super();\n    }\n\n    evaluate(context: Context): any {\n        let fieldName = context.values.get(this._key);\n\n        return (isPresent(fieldName) && isString(fieldName)) ?\n            UIMeta.defaultLabelForIdentifier(fieldName) : null;\n    }\n}\n\n/**\n * Load User defined meta data. This class is triggered as soon as we create a context and\n * pass an object into it. Based on the object we notify different Observers passing name\n * of the class and here we search if we have any Rules available for current className and\n * try to load the Rule.\n */\nclass UserMetaDataProvider implements ValueQueriedObserver {\n\n    notify(meta: Meta, key: string, value: any): void {\n        let aRules: Array<JsonRule>;\n        let uiMeta: UIMeta = <UIMeta> meta;\n\n        if (uiMeta._testRules.has(value + 'Rule')) {\n            // since we are in development mode and test mode is on we can check extra repository\n            // used by tests, we need to check if we are not running unittest and a class is not\n            // application defined but unittest defined rule\n\n            if (uiMeta._testRules.has(value + 'Rule') &&\n                isPresent(uiMeta._testRules.get(value + 'Rule').oss)) {\n                aRules = uiMeta._testRules.get(value + 'Rule').oss;\n            }\n            meta.loadUserRule(aRules, value);\n\n        } else if (isPresent(uiMeta.appConfig) &&\n            uiMeta.appConfig.get(UIMeta.AppConfigUserRulesParam)) {\n\n            let userReferences: any[] = uiMeta.appConfig.get(UIMeta.AppConfigUserRulesParam);\n\n            for (let i in userReferences) {\n                if (isPresent(userReferences[i][value + 'Rule']) &&\n                    isPresent(userReferences[i][value + 'Rule'].oss)) {\n                    aRules = userReferences[i][value + 'Rule'].oss;\n                }\n            }\n            meta.loadUserRule(aRules, value);\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {\n    AfterViewChecked,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChange,\n    SkipSelf\n} from '@angular/core';\nimport {\n    assert,\n    Environment,\n    equals,\n    isBlank,\n    isPresent,\n    ListWrapper,\n    StringWrapper\n} from '@aribaui/core';\nimport {UIMeta} from '../../core/uimeta';\nimport {Context} from '../../core/context';\nimport {FormControl} from '@angular/forms';\nimport {BaseFormComponent} from '@aribaui/components';\nimport {UIContext} from '../context';\n\n\n/**\n *\n * MetaContext (m-context) enables manipulation of a MetaUI Context as part of the Angular's\n * component processing.\n *\n * The MetaContext tag will find the current Context in the Environment'env or will\n * create one, will push() a one level on the Context, set() all of its bindings as key/values,\n * render its content,  Since its content may contain component that further use\n * MetaContext, additional nested context manipulations may occur.\n *\n * ### Simple example\n *\n * ```typescript\n *\n *      <m-context [object]='checkRequest' operation='edit' layout='Inspect'>\n *          <m-include-component></m-include-component>\n *       </m-context>\n *\n * ```\n *\n *\n * Generally, MetaContext treats its bindings as a verbatim list of keys/values to be set()\n * on the context (i.e. the bindings above on 'object', 'layout', 'operation', and 'field'\n * are not predefined by MetaContext).\n *\n * Although we treat some bindings in special way as we expect them to be passed in as expression\n * therefore they need be defined as @Input(). The rest we tread is pure keys/values strings\n *\n * First time when component is created we use ngOnInit() to push values and ngAfterViewInit() to\n * pop values. The push/pop looks something like this:\n *\n * <Node1> - PUSH\n *      <Node2> - PUSH\n *          <Node3> - PUSH\n *          <Node3> - POP\n *      <Node2> - POP\n * <Node1> - POP\n *\n *\n * After component is fully initialized and rendered  then we use ngDoCheck() to push() and\n * ngAfterViewChecked() to pop() values.\n *\n */\n\n\n/**\n * Constant represent current active and mainly latest Context\n *\n */\nexport const ACTIVE_CNTX = 'CurrentMC';\nconst CNTX_CHANGED = 'Cntx_Changed';\n\n\n// define set of properties which will be skipped as they are defined as inputs or  added by\n// angular\nconst IMPLICIT_PROPERTIES = [\n    'module', 'layout', 'operation', 'class', 'object', 'actionCategory', 'action', 'field',\n    'pushNewContext'\n];\n\n\nconst IMMUTABLE_PROPERTIES = [\n    'module', 'layout', 'operation', 'class', 'action', 'field', 'pushNewContext'\n];\n\n\n@Component({\n    selector: 'm-context',\n    template: '<ng-content></ng-content>',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n\n    providers: [\n        {provide: BaseFormComponent, useExisting: forwardRef(() => MetaContextComponent)}\n    ]\n})\nexport class MetaContextComponent extends BaseFormComponent implements OnDestroy,\n    AfterViewInit, AfterViewChecked\n{\n    /**\n     * Currently there are set of properties which can be passed as expression and therefore they\n     * need to be resolved by angular. Angular does not have such option to provide flexible\n     * number of Inputs. All needs to be pre-defined. If you want to pass in an\n     * expression it must be defined as input. Otherwise any other attributes will be treated as\n     * strings.\n     */\n    @Input() module: string;\n    @Input() layout: string;\n    @Input() operation: string;\n    @Input() class: string;\n    @Input() object: any;\n    @Input() actionCategory: any;\n    @Input() action: any;\n    @Input() field: string;\n\n    @Input() pushNewContext: boolean;\n\n\n    @Output()\n    beforeContextSet: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    onContextChanged: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    afterContextSet: EventEmitter<any> = new EventEmitter();\n\n\n    @Output()\n    onAction: EventEmitter<MetaUIActionEvent> = new EventEmitter();\n\n\n    /**\n     * Flag that tells us that component is fully rendered\n     *\n     */\n    private viewInitialized: boolean = false;\n\n    /**\n     *\n     * Marks MetaContext or the root MetaContext that created a new Context\n     *\n     */\n    private contextCreated: boolean = false;\n\n    private bindingsMap: Map<string, any>;\n    private bindingKeys: string[] = [];\n\n    /**\n     * Shell copy of an object used for comparision. We may get back to the original solution which\n     * I had here. THe Angular's differs\n     */\n    private prevObject: any;\n\n    private _scopeBinding: string;\n\n    // private static stackDepth = 0;\n\n\n    _myContext: Context;\n\n    /**\n     * Need to cache if we already have object or not in case we load data from REST where it\n     * could be deferred and not available when component is initialized\n     */\n    hasObject: boolean;\n\n    constructor(private elementRef: ElementRef, public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, null);\n    }\n\n    ngOnInit(): void\n    {\n        this.initBindings();\n        this.hasObject = this._hasObject();\n\n        // MetaContextComponent.stackDepth++;\n        // console.log(this.indent() + '=> ngOnInit:', this.contextKey());\n        // Initial push, when component is first initialized the rest is done based on changes.\n        this.pushPop(true);\n\n        if (!this.env.hasValue('parent-cnx')) {\n            this.env.setValue('parent-cnx', this);\n        }\n    }\n\n\n    /**\n     * For any other immutable object detect changes here and refresh the context stack\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: {[ propName: string]: SimpleChange}): void\n    {\n        // console.log(this.indent() + '    => ngOnChanges', this.contextKey());\n\n\n        for (let name of IMMUTABLE_PROPERTIES) {\n            if (isPresent(changes[name])\n                && (changes[name].currentValue !== changes[name].previousValue)) {\n                this.initBindings();\n                break;\n            }\n        }\n        // in case object is coming late e.g. from some reactive API like REST then we\n        // do not get it into ngInit but it will be here.\n        if (this.viewInitialized && isPresent(changes['object']) && isPresent(this.object)) {\n            this.initBindings();\n        }\n    }\n\n    /**\n     * Ng check is trigged after view is fully inialized and we want to push everything new\n     * properties to the context and evaluate everything.\n     *\n     *\n     */\n    ngDoCheck(): void\n    {\n\n        if (this.viewInitialized) {\n            this.hasObject = this._hasObject();\n\n            // MetaContextComponent.stackDepth++;\n\n            this.pushPop(true);\n            // console.log(this.indent() + '=> ngDoCheck(CHANGED)', this.contextKey());\n\n            if (isPresent(this.object) && !equals(this.prevObject, this.object)) {\n                this.updateModel();\n            }\n        }\n    }\n\n\n    /**\n     * We want to start detecting changes only after view is fully checked\n     */\n    ngAfterViewInit(): void\n    {\n        if (!this.viewInitialized) {\n            // console.log(this.indent() + '=> ngAfterViewInit:', this.contextKey());\n            // MetaContextComponent.stackDepth--;\n            this.pushPop(false);\n        }\n    }\n\n\n    ngAfterViewChecked(): void\n    {\n        if (this.viewInitialized) {\n            // console.log(this.indent() + '=> ngAfterViewChecked:', this.contextKey());\n            // MetaContextComponent.stackDepth--;\n            this.pushPop(false);\n        } else {\n            this.viewInitialized = true;\n        }\n    }\n\n    // private indent(): string\n    // {\n    //     let ind = '';\n    //     for (let i = 0; i < MetaContextComponent.stackDepth; i++) {\n    //         ind += '\\t\\t\\t ';\n    //     }\n    //\n    //     return ind;\n    // }\n\n    /**\n     *\n     * This is our key method that triggers all the interaction inside MetaUI world. Here we\n     * push context keys and their values to the stack and this is the thing that triggers\n     * rule recalculation which give us updated  properties. Those are then used by\n     * MetaIncludeComponent to render the UI.\n     *\n     * myContext is current context for this MetaContext Component.\n     *\n     * @param isPush identifies if we are pushing or popping to context stack\n     */\n    private pushPop(isPush: boolean): void\n    {\n        // console.log(this.indent() + '=> pushPop: isPush' + isPush, this.contextKey());\n        let activeContext: Context = this.activeContext();\n        assert(isPush || isPresent(activeContext), 'pop(): Missing context');\n\n        let forceCreate = isPush && (isPresent(this.pushNewContext) && this.pushNewContext);\n        if (isBlank(activeContext) || forceCreate) {\n            let metaUI = UIMeta.getInstance();\n            activeContext = metaUI.newContext(forceCreate);\n\n            this.contextCreated = true;\n            this.env.push<Context>(ACTIVE_CNTX, activeContext);\n        }\n\n        if (isPush) {\n            activeContext.push();\n\n            if (isPresent(this._scopeBinding) && this.hasObject) {\n\n                this.beforeContextSet.emit(this._scopeBinding);\n                activeContext.setScopeKey(this._scopeBinding);\n                this.afterContextSet.emit(this._scopeBinding);\n\n            } else {\n                for (let index = 0; index < this.bindingKeys.length; index++) {\n\n                    let key = this.bindingKeys[index];\n                    let value = this.bindingsMap.get(key);\n\n                    this.beforeContextSet.emit(value);\n                    activeContext.set(key, value);\n                    this.afterContextSet.emit(value);\n                }\n            }\n            // Save created content to local MetaContext\n            this._myContext = activeContext.snapshot().hydrate(false);\n        } else {\n            activeContext.pop();\n\n            if (this.contextCreated) {\n                this.env.pop<Context>(ACTIVE_CNTX);\n            }\n        }\n    }\n\n    /**\n     * Just for troubleshooting to print current context and assignments\n     *\n     */\n    debugString(): String\n    {\n        if (isPresent(this._myContext)) {\n            return this._myContext.debugString();\n        }\n    }\n\n    /**\n     * For debugging to identify current key\n     */\n    // contextKey(): string\n    // {\n    //     let cnxKey = '';\n    //     if (isPresent(this.bindingKeys) && this.bindingKeys.length > 0) {\n    //         this.bindingKeys.forEach((name) =>\n    //         {\n    //             if (name === 'object') {\n    //                 cnxKey += name;\n    //             } else {\n    //                 cnxKey += name + this.bindingsMap.get(name);\n    //             }\n    //\n    //\n    //         });\n    //     } else if (isPresent(this._scopeBinding)) {\n    //         cnxKey += this._scopeBinding;\n    //     }\n    //     return cnxKey;\n    // }\n\n\n    /**\n     *\n     * Every meta context component which pushing certain properties to stack has its own context\n     * that lives until component is destroyed\n     *\n     */\n    myContext(): Context\n    {\n        return this._myContext;\n        // let cnxKey = this.contextKey();\n        // return this.env.getValue(cnxKey);\n    }\n\n    /**\n     * We keep the most current and latest context to environment to be read by any Child\n     * MetaContext for purpose of creation new context and it needs info what was already pushed\n     * onto the stack.\n     *\n     */\n    activeContext(): Context\n    {\n        return this.env.peak<Context>(ACTIVE_CNTX);\n    }\n\n\n    /**\n     * Let's clean up and destroy pushed context\n     */\n    ngOnDestroy()\n    {\n\n        if (this.env.hasValue('parent-cnx')) {\n            this.env.deleteValue('parent-cnx');\n        }\n    }\n\n\n    /**\n     * Ideally we do not need this method if Angular would support to pass variable number of\n     * bindings without a need to have backup property for each of the bindings or expression./\n     *\n     * Once they support. we can remove this. Since this check what are known bindings passed,\n     * meaning the ones decorated with @Input and the rest\n     *\n     */\n    private initBindings()\n    {\n        this.bindingsMap = new Map<string, any>();\n        let nativeElement = this.elementRef.nativeElement;\n\n        this.initImplicitBindings();\n        for (let i = 0; i < nativeElement.attributes.length; i++) {\n            let attr: Attr = nativeElement.attributes.item(i);\n            if (this.ignoreBinding(attr)) {\n                continue;\n            }\n            if (isPresent(attr.name) && attr.name.toLowerCase() === 'scopekey') {\n                this._scopeBinding = attr.value;\n\n            } else {\n                this.bindingsMap.set(attr.name, attr.value);\n            }\n        }\n        this.bindingKeys = [];\n        this.bindingsMap.forEach((value, key) =>\n        {\n            this.bindingKeys.push(key);\n        });\n\n        // Sort them by their importance or rank\n        ListWrapper.sortByExample(this.bindingKeys, IMPLICIT_PROPERTIES);\n    }\n\n\n    /**\n     * The thing we want is to pass variable number of bindings and resolve them programmatically.\n     * Currently in Angular we cannot do this we have these set of properties where we expect\n     * some expression, some dynamic properties. For the rest we expect only string literal to be\n     * passed in therefore we can resolve them with nativeElement.attributes\n     *\n     */\n    private initImplicitBindings()\n    {\n        if (isPresent(this.module)) {\n            this.bindingsMap.set('module', this.module);\n        }\n        if (isPresent(this.layout)) {\n            this.bindingsMap.set('layout', this.layout);\n        }\n        if (isPresent(this.operation)) {\n            this.bindingsMap.set('operation', this.operation);\n        }\n        if (isPresent(this.class)) {\n            this.bindingsMap.set('class', this.class);\n        }\n        if (isPresent(this.object)) {\n            this.bindingsMap.set('object', this.object);\n            this.prevObject = Object.assign({}, this.object);\n        }\n        if (isPresent(this.actionCategory)) {\n            this.bindingsMap.set('actionCategory', this.actionCategory);\n        }\n        if (isPresent(this.action)) {\n            this.bindingsMap.set('action', this.action);\n        }\n        if (isPresent(this.field)) {\n            this.bindingsMap.set('field', this.field);\n        }\n    }\n\n    /**\n     *\n     * Since we are going thru the element' attributes we want to skip anything that has nothign\n     * to do with us.\n     *\n     */\n    private ignoreBinding(attr: Attr)\n    {\n        return IMPLICIT_PROPERTIES.indexOf(attr.name) !== -1 ||\n            StringWrapper.contains(attr.name, '_ng') ||\n            StringWrapper.contains(attr.name, 'ng-') ||\n            StringWrapper.contains(attr.name, '(') ||\n            (isBlank(attr.value) || attr.value.length === 0);\n    }\n\n\n    /**\n     * If object is changed we need to also update our angular model to reflect user changes. All\n     * changes and updates in metaui use object references\n     */\n    private updateModel()\n    {\n        let fields = Object.keys(this.object);\n        fields.forEach((field: string) =>\n        {\n            let control: FormControl = <FormControl> this.formGroup.get(field);\n            if (isPresent(control)) {\n                control.patchValue(this.object[field], {onlySelf: false, emitEvent: true});\n            }\n        });\n\n        this.prevObject = Object.assign({}, this.object);\n    }\n\n\n    private _hasObject(): boolean\n    {\n        let context = this.activeContext();\n        if (isPresent(context)) {\n            return isPresent((<UIContext> context).object);\n        }\n        return false;\n    }\n}\n\n\n/**\n *\n * Defines format for the broadcasted action event. MetaUI can also execute actions which needs to\n * be handled by application or actual component using this m-context.\n *\n */\nexport class MetaUIActionEvent\n{\n\n    constructor(/**\n                 * What component trigered action\n                 */\n                public component: any,\n                /**\n                 * Name of the action. Usually name of the @Output of actual component\n                 */\n                public eventName: string,\n                /**\n                 * Actions or event that are broadcasted can be wrapped with @action or @layout\n                 * which has its name. We want to also send out this name to the application to\n                 * know what metaui action or layout triggered this\n                 */\n                public cnxName: string,\n                /**\n                 * Any data that you can pass\n                 */\n                public data: any)\n    {\n\n    }\n}\n\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MetaContextComponent} from './meta-context/meta-context.component';\n\n@NgModule({\n    declarations: [\n        MetaContextComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    entryComponents: [\n        MetaContextComponent\n    ],\n    exports: [\n        MetaContextComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWMetaCoreModule\n{\n}\n\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n */\nimport {Injectable} from '@angular/core';\nimport {isArray, isBlank, isPresent, isStringMap, ListWrapper, MapWrapper} from '@aribaui/core';\nimport {LocalizedString, UIMeta} from './uimeta';\nimport {Rule, Selector} from './rule';\nimport {JsonRule} from './json-rule';\nimport {Meta, OverrideValue} from './meta';\nimport {\n    ContextFieldPath,\n    Expr,\n    StaticallyResolvableWrapper,\n    StaticDynamicWrapper\n} from './property-value';\n\n\ntype DynamicValueType = 'Expr' | 'SDW' | 'CFP' | 'OV' | 'i18n';\n\n\nexport interface RuleLoader\n{\n    loadRules (meta: Meta, source: any, module: string, onRule: (rule: Rule) => void): void;\n}\n\n@Injectable()\nexport class RuleLoaderService implements RuleLoader\n{\n\n    private _uiMeta: UIMeta;\n\n    constructor()\n    {\n    }\n\n\n    get uiMeta(): UIMeta\n    {\n        return this._uiMeta;\n    }\n\n    set uiMeta(value: UIMeta)\n    {\n        this._uiMeta = value;\n    }\n\n    loadRules(meta: Meta, source: any, module: string, onRule: (rule: Rule) => void)\n    {\n        this._uiMeta = <UIMeta>meta;\n        source.forEach((val: any, index: any) =>\n        {\n            let rule = this.readRule(val, module);\n            if (isPresent(onRule)) {\n                onRule(rule);\n\n            }\n        });\n\n\n    }\n\n    loadRulesWithReturn(source: any, module: string): Array<Rule>\n    {\n\n        let rules: Array<Rule> = new Array<Rule>();\n        source.forEach((val: any, index: any) =>\n        {\n            let rule = this.readRule(val, module);\n            rules.push(rule);\n        });\n\n        return rules;\n\n    }\n\n    private readRule(jsonRule: JsonRule, module: string): Rule\n    {\n\n        let selectors: Array<Selector> = new Array<Selector>();\n        for (let item of jsonRule._selectors) {\n\n            if (isPresent(item._value) && item._value.constructor === Object && Object.keys(\n                    item._value).length === 0) {\n                item._value = Meta.NullMarker;\n            }\n\n            let selector = new Selector(item._key, item._value, item._isDecl);\n            selectors.push(selector);\n        }\n        let properties = MapWrapper.createFromStringMapWithResolve<any>(jsonRule._properties,\n            (k, v) =>\n            {\n                if (isStringMap(v) &&\n                    isPresent(v['t'])) {\n                    return this.resoveValue(\n                        v['t'], v,\n                        module);\n                } else if (isStringMap(\n                        v) && !isArray(\n                        v)) {\n                    // we have some\n                    // other sub level\n                    // of object\n                    // literal - lets\n                    // convert this\n                    // into Map.\n                    return MapWrapper.createFromStringMapWithResolve<any>(\n                        v, (key, val) =>\n                            this.resoveValue(\n                                val['t'],\n                                val,\n                                module));\n\n                } else if (isArray(v)) {\n                    // let convert with\n                    // typings as well\n                    return ListWrapper.clone<string>(\n                        v);\n                }\n                return v;\n            });\n        let props = properties.size === 0 ? undefined : properties;\n        let rule: Rule = new Rule(selectors, props, jsonRule._rank);\n\n        return rule;\n    }\n\n\n    // 'Expr' | 'SDW' | 'CFP' | 'OV' | 'i18n';\n    private resoveValue(type: DynamicValueType, value: any, module: string): any\n    {\n        if (isBlank(value)) {\n            return null;\n        }\n\n        if (type === 'Expr') {\n            return new Expr(value['v']);\n        } else if (type === 'SDW') {\n            let expr = new Expr(value['v']);\n            return new StaticDynamicWrapper(new StaticallyResolvableWrapper(expr));\n\n        } else if (type === 'CFP') {\n            return new ContextFieldPath(value['v']);\n\n        } else if (type === 'OV') {\n            return new OverrideValue(value['v']);\n\n        } else if (type === 'i18n' && value['v']['key']) {\n            let locKey = value['v']['key'];\n\n            return isPresent(this._uiMeta) ? this._uiMeta.createLocalizedString(locKey,\n                    value['v']['defVal'])\n                :\n                new LocalizedString(null, module, locKey, value['v']['defVal']);\n\n        }\n        return value;\n\n    }\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-no-meta',\n    template: `\n        <h2>MetaIncludeComponentDirective Error:</h2>\n                No componentName property resolved in Context<br/>\n    `\n    ,\n    styles: [``]\n})\nexport class NoMetaComponent implements OnInit\n{\n\n    constructor()\n    {\n    }\n\n    ngOnInit()\n    {\n    }\n\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    DoCheck,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Type,\n    ViewContainerRef\n} from '@angular/core';\nimport {\n    ComponentReference,\n    ComponentRegistry,\n    DomUtilsService,\n    IncludeComponentDirective\n} from '@aribaui/components';\nimport {\n    Environment,\n    equals,\n    isBlank,\n    isPresent,\n    isString,\n    MapWrapper,\n    nonPrivatePrefix,\n    StringWrapper\n} from '@aribaui/core';\nimport {NoMetaComponent} from './no-meta/no-meta.component';\nimport {ObjectMeta} from '../core/object-meta';\nimport {Context} from '../core/context';\nimport {UIMeta} from '../core/uimeta';\nimport {ContextFieldPath, DynamicPropertyValue, ValueConverter} from '../core/property-value';\nimport {MetaContextComponent, MetaUIActionEvent} from '../core/meta-context/meta-context.component';\n\n\n/**\n *  MetaIncludeComponentDirective is (along with MetaContext) the key element for binding MetaUI\n * into AngularJs user interfaces. You can think of it such GLUE.\n *\n *  MetaIncludeComponentDirective dynamically switches in a Angular's component based on the\n * current MetaContext's\n * 'component' property and sets its bindings from the 'bindings' property.  This alone enables\n * almost any existing Angular's widget to be specified for use for a particular field or layout\n * using rules -- without any additional glue code .\n *\n *  component using 'wrapperComponent' and 'wrapperBindings', binding component content using the\n * bindings 'ngcontent', ngcontentLayout and 'ngcontentelElement', and event binding named Content\n * templates using an\n * 'awcontentLayouts' map binding. Without this we will not be able to use complex layouts.\n *\n */\n@Directive({\n    selector: 'm-include-component'\n})\nexport class MetaIncludeComponentDirective extends IncludeComponentDirective implements DoCheck,\n    AfterViewInit {\n\n    /**\n     * Just a constant use to access Environment where we store current context for current render\n     * lifecycle\n     *\n     */\n    static readonly FormatterBinding = 'formatter';\n\n\n    /**\n     *\n     * In metaU we can also insert into the element not only ngcontent but new instantiated\n     * component which is defined by layout\n     *\n     *```\n     * field trait=ObjectDetail {\n     * \teditable=false {\n     * \t\tcomponent: HoverCardComponnet;\n     * \t\tbindings: {\n     * \t\t\tngcontentLayout: Content;\n     * \t\t\tlinkTitle:${properties.get(\"label\")};\n     * \t\t}\n     * \t}\n     *\n     *    @layout=Content {\n     * \t\tcomponent: MetaContextObject;\n     * \t\tbindings: {\n     * \t\t\tobject: $value;\n     * \t\t\tlayout:DetailLayout\n     * \t\t\toperation:\"view\";\n     * \t\t}\n     * \t}\n     * }\n     * ```\n     *\n     */\n    static readonly NgContentLayout = 'ngcontentLayout';\n\n\n    /**\n     * I could not find any realiable way how to access parent view. Even forwardRef up to certain\n     * point worked but had to get away from this approach as it fails for my usecase when updating\n     * context and pushing new properties to the stack.\n     */\n    @Input()\n    context: MetaContextComponent;\n\n\n    constructor(@Inject(forwardRef(() => MetaContextComponent))\n                public metaContext: MetaContextComponent,\n                public viewContainer: ViewContainerRef,\n                public factoryResolver: ComponentFactoryResolver,\n                public env: Environment,\n                public cd: ChangeDetectorRef,\n                public compRegistry: ComponentRegistry,\n                public domUtils: DomUtilsService) {\n        super(viewContainer, factoryResolver, cd, compRegistry);\n\n    }\n\n    /**\n     * First we simply render the a component in the ngOnInit() and then every time something\n     * changes.\n     */\n    ngDoCheck(): void {\n        // console.log('MetaInclude(ngDoCheck):', this.name);\n\n        let context = this.metaContext.myContext();\n        if (isBlank(context) || isBlank(this.currentComponent)) {\n            // console.log('No context/ component for ' + this.name);\n            return;\n        }\n\n        let newComponent = context.propertyForKey('component');\n        if (isPresent(newComponent) && isPresent(this.name) && (this.name !== newComponent)) {\n            this.viewContainer.clear();\n            this.doRenderComponent();\n            // console.log('MetaInclude(ngDoCheck- rerender ):', this.name);\n\n            this.createWrapperElementIfAny();\n            this.createContentElementIfAny();\n        } else {\n\n            // we might not skip component instantiation but we still need to update bindings\n            // as properties could change\n            let editable = context.propertyForKey(ObjectMeta.KeyEditable);\n            if (isBlank(editable)) {\n                editable = context.propertyForKey(UIMeta.KeyEditing);\n            }\n            let metaBindings = context.propertyForKey(UIMeta.KeyBindings);\n            let type = context.propertyForKey(ObjectMeta.KeyType);\n            let inputs: string[] = this.componentReference().metadata.inputs;\n\n            // re-apply Inputs\n            // maybe we should diff properties and only if they changed re-apply\n            if (isPresent(metaBindings) && isPresent(inputs)) {\n                this.applyInputs(this.currentComponent, type, metaBindings, inputs, editable);\n            }\n        }\n    }\n\n\n    /*\n     * Retrieves component Name from the Context.\n     */\n    protected resolveComponentType(): Type<any> {\n        this.name = this.metaContext.myContext().propertyForKey(UIMeta.KeyComponentName);\n\n        if (isBlank(this.name)) {\n            return NoMetaComponent;\n        }\n        return super.resolveComponentType();\n    }\n\n\n    /*\n     * If there is a NG content as part of the bindings apply it and remove it from the list. In\n     * the MetaUI world it can appear if we want to insert a text content into the element:\n     *\n     *\n     *  trait=toManyLink {\n     *         component:AWHyperlink;\n     *         bindings: {\n     *             action: ${\n     *                this.set(\"object\", value);\n     *                this.set(\"actionCategory\", \"General\");\n     *                this.set(\"action\", \"Inspect\");\n     *                 meta.fireAction(this, true)\n     *             };\n     *             awcontent: \"Click Me\";\n     *         }\n     *     }\n     *\n     *\n     */\n    protected ngContent(): string {\n        let cntValue: any;\n        let bindings = this.metaContext.myContext().propertyForKey(UIMeta.KeyBindings);\n\n        if (isPresent(bindings) &&\n            isPresent(cntValue = bindings.get(IncludeComponentDirective.NgContent))) {\n            cntValue = isString(cntValue) ? cntValue :\n                this.metaContext.myContext().resolveValue(cntValue);\n        }\n        return cntValue;\n    }\n\n\n    protected ngContentElement(): string {\n        let cntValue: any;\n        let bindings = this.metaContext.myContext().propertyForKey(UIMeta.KeyBindings);\n\n        if (isPresent(bindings) &&\n            isPresent(cntValue = bindings.get(IncludeComponentDirective.NgContentElement))) {\n            cntValue = isString(cntValue) ? cntValue :\n                this.metaContext.myContext().resolveValue(cntValue);\n        }\n        return cntValue;\n    }\n\n\n    /**\n     * Implement custom behavior of adding ngcontentLayout described above (where the constant\n     * is defined)\n     *\n     */\n    protected createContentElementIfAny(): boolean {\n        let detectChanges = false;\n        let bindings = this.metaContext.myContext().propertyForKey(UIMeta.KeyBindings);\n\n\n        if (isPresent(bindings) && bindings.has(MetaIncludeComponentDirective.NgContentLayout)) {\n\n            let layoutName = bindings.get(MetaIncludeComponentDirective.NgContentLayout);\n            let context = this.metaContext.myContext();\n\n            context.push();\n            context.set(UIMeta.KeyLayout, layoutName);\n\n            let componentName = context.propertyForKey('component');\n            let compType = this.compRegistry.nameToType.get(componentName);\n\n            let componentFactory: ComponentFactory<any> = this.factoryResolver\n                .resolveComponentFactory(compType);\n\n            let componentMeta: Component = this.resolveDirective(componentFactory);\n            let ngComponent = this.viewContainer.createComponent(componentFactory, 0);\n\n            let cReference: ComponentReference = {\n                metadata: componentMeta,\n                resolvedCompFactory: componentFactory,\n                componentType: compType,\n                componentName: componentName\n            };\n\n            this.applyBindings(cReference, ngComponent, context.propertyForKey(UIMeta.KeyBindings),\n                false);\n\n            this.domUtils.insertIntoParentNgContent(this.currentComponent.location.nativeElement,\n                ngComponent.location.nativeElement);\n\n            context.pop();\n\n            detectChanges = true;\n        } else {\n            detectChanges = super.createContentElementIfAny();\n        }\n        if (detectChanges) {\n            // console.log('MetaInclude(createContentElementIfAny):', this.name);\n            this.cd.detectChanges();\n        }\n\n        return detectChanges;\n    }\n\n\n    /**\n     * Meta placeTheComponent needs to account for wrapper component. If wrapper component\n     * is present. It needs to inject the wrapper component on the page and add this component\n     * inside the wrapper component.\n     */\n    protected createWrapperElementIfAny(): void {\n        let wrapperName = this.metaContext.myContext().propertyForKey(UIMeta.KeyWrapperComponent);\n        if (isBlank(wrapperName)) {\n            return;\n        }\n\n        // Now we have wrapperComponent. We do the following:\n        // 1.  Create wrapper component.\n        let wrapperType = this.compRegistry.nameToType.get(wrapperName);\n\n        let componentFactory: ComponentFactory<any> = this.factoryResolver\n            .resolveComponentFactory(wrapperType);\n        let componentMeta: Component = this.resolveDirective(wrapperType);\n\n        let wrapperComponent = this.viewContainer.createComponent(componentFactory);\n\n        // 2. Add wrapper bindings to wrapper component.\n        let wrapperBindings = this.metaContext.myContext().propertyForKey(UIMeta.KeyWrapperBinding);\n        (<any> wrapperComponent.instance)['bindings'] = wrapperBindings;\n\n        // 3. Apply the bindings. Get the wrapper metadata, look through it's input - output\n        // bindings. and apply the wrapperBindings to these bindings.\n        let wrapperComponentRef: ComponentReference = {\n            metadata: componentMeta,\n            resolvedCompFactory: componentFactory,\n            componentType: wrapperType,\n            componentName: wrapperName\n        };\n\n        this.applyBindings(wrapperComponentRef, wrapperComponent, wrapperBindings);\n        this.domUtils.insertIntoParentNgContent(wrapperComponent.location.nativeElement,\n            this.currentComponent.location.nativeElement);\n    }\n\n\n    /**\n     * ApplyBindings reads the @Inputs from ComponentMetadata and check if there exists a binding\n     * coming from MetaRules. If there is we assign it to the input.\n     */\n    protected applyBindings(cRef: ComponentReference,\n                            component: ComponentRef<any>,\n                            bindings: Map<string, any>,\n                            bUseMetaBindings: boolean = true): void {\n        super.applyBindings(cRef, component, bindings);\n        let inputs: string[] = cRef.metadata.inputs;\n        let outputs: string[] = cRef.metadata.outputs;\n\n        let metaBindings = this.metaContext.myContext().propertyForKey(UIMeta.KeyBindings);\n        let editable = this.metaContext.myContext().propertyForKey(ObjectMeta.KeyEditable);\n        let type = this.metaContext.myContext().propertyForKey(ObjectMeta.KeyType);\n\n        // There are cases where we want to use the bindings passed into this function.\n        // For example, the wrapperBindings.\n        if (!bUseMetaBindings) {\n            metaBindings = bindings;\n        }\n\n        if (isBlank(metaBindings) || isBlank(inputs)) {\n            return;\n        }\n\n        let currenBindings = MapWrapper.clone(metaBindings);\n        this.applyInputs(component, type, currenBindings, inputs, editable);\n        this.applyOutputs(component, currenBindings, outputs);\n    }\n\n    private applyInputs(component: ComponentRef<any>, type: any, bindings: any,\n                        inputs: string[], editable: any, compToBeRendered: boolean = true) {\n        // propagate a field type to bindings.\n        if (isPresent(type) && isPresent(component.instance.canSetType) &&\n            component.instance.canSetType()) {\n            bindings.set(ObjectMeta.KeyType, type);\n        }\n\n        if (isPresent(editable) && isPresent(component.instance['editable'])) {\n            component.instance['editable'] = editable;\n        }\n\n        for (let key of inputs) {\n            let publicKey = nonPrivatePrefix(key);\n            let value = bindings.get(publicKey);\n\n            // Handle special case where we do not pass explicitly or inherit from parent @Input\n            // name for the component\n\n            if (key === 'name' && isBlank(value)) {\n                value = this.metaContext.myContext().propertyForKey(ObjectMeta.KeyField);\n            }\n\n            if (this.skipInput(key, value)) {\n                continue;\n            }\n\n            // compToBeRendered = only first time\n            if (compToBeRendered && value instanceof ContextFieldPath) {\n                this.applyDynamicInputBindings(component.instance, bindings, inputs, key, value,\n                    editable);\n\n            } else if (compToBeRendered && value instanceof DynamicPropertyValue) {\n                let dynval: DynamicPropertyValue = value;\n                let newValue = dynval.evaluate(this.metaContext.myContext());\n                component.instance[publicKey] = newValue;\n\n            } else {\n                /**\n                 * when re-applying Inputs skip all expressions above and only work with regular\n                 * types\n                 *\n                 * set it only if it changes so it will not trigger necessary `value changed\n                 * aftter check`\n                 */\n                if (!equals(component.instance[publicKey], value)) {\n                    component.instance[publicKey] = value;\n                }\n            }\n        }\n        // apply Formatter that can be specified in the oss\n        // temporary disabled untill angular will support runtime i18n\n        // if (bindings.has(MetaIncludeComponentDirective.FormatterBinding)) {\n        //     let transform = this.formatters\n        //         .get(bindings.get(MetaIncludeComponentDirective.FormatterBinding));\n        //     component.instance[MetaIncludeComponentDirective.FormatterBinding] = transform;\n        // }\n    }\n\n\n    private skipInput(key: string, value: any): boolean {\n        return isBlank(value) || key === IncludeComponentDirective.NgContent ||\n            key === MetaIncludeComponentDirective.NgContentLayout;\n    }\n\n    private applyOutputs(component: ComponentRef<any>, bindings: any, outputs: string[]) {\n        for (let key of outputs) {\n            let publicKey = nonPrivatePrefix(key);\n            let value = bindings.get(publicKey);\n\n            if (key === IncludeComponentDirective.NgContent) {\n                continue;\n            }\n            let eventEmitter: EventEmitter<any> = component.instance[publicKey];\n            if (value instanceof DynamicPropertyValue) {\n                this.applyDynamicOutputBinding(eventEmitter, value, this.metaContext.myContext());\n            } else {\n                // just trigger event outside\n\n                eventEmitter.subscribe((val: any) => {\n                    if (this.env.hasValue('parent-cnx')) {\n                        let event: any = val;\n                        let cnx: MetaContextComponent = this.env.getValue('parent-cnx');\n\n                        if (!(val instanceof MetaUIActionEvent)) {\n                            event = new MetaUIActionEvent(component.instance, publicKey,\n                                publicKey, val);\n                        }\n                        cnx.onAction.emit(event);\n                    }\n                });\n            }\n        }\n    }\n\n    private applyDynamicOutputBinding(emitter: EventEmitter<any>, value: any,\n                                      context: Context): void {\n\n        emitter.asObservable().subscribe((val: any) => {\n            let dynval: DynamicPropertyValue = value;\n            context.resolveValue(dynval);\n        });\n    }\n\n    private applyDynamicInputBindings(me: any, bindings: any, inputs: string[], key: string,\n                                      value: any, editable: boolean) {\n\n        let publicKey = nonPrivatePrefix(key);\n        let cnxtPath: ContextFieldPath = value;\n        let metaContext = this.metaContext;\n        /**\n         * captured also current context snapshot so we can replay ContextFieldPath.evaluate() if\n         * called outside of push/pop cycle.\n         *\n         * todo: check if we can replace this with Custom value accessor\n         */\n        Object.defineProperty(me, publicKey, {\n            get: () => {\n\n                let context = this.metaContext.myContext();\n                return cnxtPath.evaluate(context);\n            },\n\n            set: (val) => {\n                let context = this.metaContext.myContext();\n                let editing = context.propertyForKey(ObjectMeta.KeyEditable)\n                    || context.propertyForKey(UIMeta.KeyEditing);\n\n                if (editing && !StringWrapper.equals(val, me[publicKey])) {\n                    let type = context.propertyForKey(ObjectMeta.KeyType);\n\n                    cnxtPath.evaluateSet(context, ValueConverter.value(type, val));\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n    }\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component} from '@angular/core';\nimport {Environment} from '@aribaui/core';\n\n\n/**\n * This is just a wrapper component around meta-form-table as we need every single context push to\n * happen before the child content start to render.\n *\n * In this case I would like to wrap wrap my content with m-context in the way:\n *\n *  <m-context scopeKey=\"class\">\n *        <!-- lets process one zone now and four we can deal later-->\n *        <ng-template [ngIf]=\"isFiveZoneLayout\">\n *              <aw-form-table [isEditable]=\"isEditable\" [labelsOnTop]=\"labelsOnTop\"\n * (onSubmit)=\"onSaveAction($event)\">\n *                  <ng-template ngFor let-curentField [ngForOf]=\"zLeft()\">\n *                      <m-context [field]=\"curentField\">\n *                           <m-form-row [field]=\"curentField\"></m-form-row>\n *                      </m-context>\n *                  </ng-template>\n *          </aw-form-table>\n *        </ng-template>\n *  </m-context>\n *\n *\n *\n */\n@Component({\n    selector: 'm-form',\n    template: `<m-context #cnx scopeKey=\"class\">\n    <!-- Dont try to render if the object is not set yet -->\n    <m-form-table *ngIf=\"cnx.hasObject\"></m-form-table>\n</m-context>\n`,\n\n})\nexport class MetaFormComponent\n{\n\n\n    constructor(private environment: Environment)\n    {\n\n    }\n\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n */\nimport {AfterViewChecked} from '@angular/core';\nimport {assert, Environment, isPresent} from '@aribaui/core';\nimport {BaseFormComponent} from '@aribaui/components';\nimport {MetaContextComponent} from '../core/meta-context/meta-context.component';\nimport {Context, Snapshot} from '../core/context';\nimport {UIMeta} from '../core/uimeta';\nimport {ObjectMeta} from '../core/object-meta';\n\n\n/**\n * Common component to setup the context and also create context snapshot for later user.\n */\nexport abstract class MetaBaseComponent extends BaseFormComponent implements AfterViewChecked\n{\n    editing: boolean;\n\n    /**\n     * Need to capture current snapshot for edit operation as when we enter editing mode and user\n     * start to change values the detection loop runs out of any push/pop cycle and any order and I\n     * could not find a way how to detect consistent behavior where root compoennt start ngDoCheck,\n     * child component trigger ngDoCheck, child finishes, root finishes.\n     *\n     * This only works when view is first time rendered, but not when making changes\n     *\n     */\n    protected contextSnapshot: Snapshot;\n    protected object: any;\n\n    constructor(public env: Environment,\n                protected _metaContext: MetaContextComponent)\n    {\n        super(env, _metaContext);\n    }\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n        this.updateMeta();\n    }\n\n\n    ngDoCheck(): void\n    {\n        this.updateMeta();\n\n    }\n\n    ngAfterViewChecked(): void\n    {\n    }\n\n\n    protected updateMeta()\n    {\n        this.editing = this.context.booleanPropertyForKey(UIMeta.KeyEditing, false);\n        if (this.editing) {\n            this.object = this.context.values.get(ObjectMeta.KeyObject);\n            this.contextSnapshot = this.context.snapshot();\n        }\n        this.doUpdate();\n    }\n\n\n    /**\n     * Placeholder to be implemented by subclass. this method is triggered when we detect any\n     * changes on the MetaContext\n     */\n    protected doUpdate(): void\n    {\n    }\n\n\n    /**\n     * Get the last saved context from the MetaContext component\n     *\n     */\n    protected get context(): Context\n    {\n        if (isPresent(this._metaContext) && isPresent(this._metaContext.myContext())) {\n            return this._metaContext.myContext();\n        }\n\n        assert(false, 'Should always have metaContext available');\n    }\n\n\n    isNestedContext(): boolean\n    {\n        return this.context.isNested;\n    }\n\n    // remove this ugly solution once I figure out custom value accessor that I can\n    // provide as a expression\n    properties(key: string, defValue: any = null): any\n    {\n        return isPresent(this.context) ? this.context.propertyForKey(key) : defValue;\n\n    }\n\n\n    /**\n     * Retrieves active context's properties\n     *\n     */\n    aProperties(me: Context, key: string, defValue: any = null): any\n    {\n        let activeContext: Context = this._metaContext.activeContext();\n        return isPresent(me) ? me.propertyForKey(key) : defValue;\n\n    }\n\n\n}\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component, Host, ViewChild} from '@angular/core';\nimport {Environment, isBlank, isPresent} from '@aribaui/core';\nimport {FormTableComponent} from '@aribaui/components';\nimport {MetaBaseComponent} from '../../meta.base.component';\nimport {MetaContextComponent} from '../../../core/meta-context/meta-context.component';\nimport {UIMeta} from '../../../core/uimeta';\nimport {UIContext} from '../../../core/context';\n\n/**\n * This is a wrapper around FormtTable to render data based on current MetaContext.\n */\n@Component({\n    selector: 'm-form-table',\n    template: `<ng-template [ngIf]=\"isFiveZoneLayout\">\n\n    <aw-form-table #metaFormTable [editable]=\"editing\" [useFiveZone]=\"isFiveZoneLayout\"\n                   [omitPadding]=\"isNestedContext()\"\n                   [editabilityCheck]=\"false\"\n                   [labelsOnTop]=\"showLabelsAboveControls\">\n\n\n        <aw-top *ngIf=\"canShowZone('zTop')\">\n            <ng-template ngFor let-curentField [ngForOf]=\"zTop()\">\n                <m-context [field]=\"curentField\">\n                    <m-form-row [field]=\"curentField\" [editable]=\"editing\"\n                                [initialSize]=\"'x-large'\"></m-form-row>\n                </m-context>\n            </ng-template>\n        </aw-top>\n\n\n        <aw-left *ngIf=\"canShowZone('zLeft')\">\n\n            <ng-template ngFor let-curentField [ngForOf]=\"zLeft()\">\n                <m-context [field]=\"curentField\">\n                    <m-form-row [field]=\"curentField\" [editable]=\"editing\"></m-form-row>\n                </m-context>\n            </ng-template>\n        </aw-left>\n\n\n        <aw-middle *ngIf=\"canShowZone('zMiddle')\">\n            <ng-template ngFor let-curentField [ngForOf]=\"zMiddle()\">\n                <m-context [field]=\"curentField\">\n                    <m-form-row [field]=\"curentField\" [editable]=\"editing\"></m-form-row>\n                </m-context>\n            </ng-template>\n        </aw-middle>\n\n        <aw-right *ngIf=\"canShowZone('zRight')\">\n            <ng-template ngFor let-curentField [ngForOf]=\"zRight()\">\n                <m-context [field]=\"curentField\">\n                    <m-form-row [field]=\"curentField\" [editable]=\"editing\"></m-form-row>\n                </m-context>\n            </ng-template>\n        </aw-right>\n\n\n        <aw-bottom *ngIf=\"canShowZone('zBottom')\">\n            <ng-template ngFor let-curentField [ngForOf]=\"zBottom()\">\n                <m-context [field]=\"curentField\">\n                    <m-form-row [field]=\"curentField\" [editable]=\"editing\"\n                                [initialSize]=\"'x-large'\"></m-form-row>\n                </m-context>\n            </ng-template>\n        </aw-bottom>\n    </aw-form-table>\n</ng-template>\n`,\n    styles: [``]\n})\nexport class MetaFormTableComponent extends MetaBaseComponent\n{\n    /**\n     * For multizone layout this contains fields broken by its assigned zones\n     */\n    private fieldsByZone: Map<string, any>;\n\n    /**\n     * Is five zone layout? ForMetaUi we probalby have always fiveZone, unless in MetaRules we say\n     * otherwise\n     */\n    isFiveZoneLayout: boolean;\n\n\n    /**\n     * Do we have labels on top layout?\n     */\n    showLabelsAboveControls: boolean;\n\n    /**\n     * Reference to current rendered FormTable\n     */\n    @ViewChild('metaFormTable')\n    private form: FormTableComponent;\n\n    /**\n     * Active zones passed to the FormTable.\n     *\n     * Note: I could not find better way without having this property. When using FormTable I dont\n     * want to tell what zones are active. The form table should figure out byitself just from the\n     * ng-contented sections.\n     *\n     * The other approach is the wrap these into component and probably better\n     *\n     *e.g.\n     *\n     * ```html\n     *  <aw-form-table ...>\n     *    <aw-form-zone name='top'>\n     *        <aw-form-row>...</aw-form-row>\n     *     <aw-form-zone>\n     *\n     *\n     *    ...\n     *  </aw-form-table ...>\n     * ```\n     *\n     */\n\n\n    constructor(@Host() protected _context: MetaContextComponent, public env: Environment)\n    {\n        super(env, _context);\n    }\n\n\n    canShowZone(zone: string): boolean\n    {\n        return isPresent(this.fieldsByZone) && this.fieldsByZone.has(zone);\n    }\n\n\n    protected doUpdate(): void\n    {\n        super.doUpdate();\n\n        this.fieldsByZone = this.context.propertyForKey(UIMeta.PropFieldsByZone);\n        this.isFiveZoneLayout = this.context.propertyForKey(UIMeta.PropIsFieldsByZone);\n\n\n        let bindings: Map<string, any> = this.context.propertyForKey(UIMeta.KeyBindings);\n        if (isPresent(bindings)) {\n            this.showLabelsAboveControls = bindings.get('showLabelsAboveControls');\n\n            if (isBlank(this.showLabelsAboveControls)) {\n                this.showLabelsAboveControls = false;\n            }\n        }\n\n        this.initForm();\n    }\n\n\n    zLeft(): string[]\n    {\n        return this.fieldsByZone.get(UIMeta.ZoneLeft);\n    }\n\n    zMiddle(): string[]\n    {\n        return this.fieldsByZone.get(UIMeta.ZoneMiddle);\n    }\n\n    zRight(): string[]\n    {\n        return this.fieldsByZone.get(UIMeta.ZoneRight);\n    }\n\n    zTop(): string[]\n    {\n        return this.fieldsByZone.get(UIMeta.ZoneTop);\n    }\n\n    zBottom(): string[]\n    {\n        return this.fieldsByZone.get(UIMeta.ZoneBottom);\n    }\n\n\n    /**\n     * Need to initialize FormGroup with all the available fields based on the given object. Its\n     * hard to manage a state where we dynamically render different number of fields per operation.\n     *\n     * *\n     */\n    private initForm(): void\n    {\n        if (isPresent(this.form)) {\n            this.form.editable = this.editable;\n        }\n        let obj = (<UIContext>this.context).object;\n        if (Object.keys(this.formGroup.value).length !== Object.keys(obj).length) {\n            Object.keys(obj).forEach((key: string) =>\n            {\n                this.doRegister(key, obj[key]);\n            });\n        }\n    }\n}\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component, forwardRef, Host, Input} from '@angular/core';\nimport {AbstractControl, ValidatorFn, Validators} from '@angular/forms';\nimport {BooleanWrapper, Environment, isPresent} from '@aribaui/core';\nimport {FormRowComponent} from '@aribaui/components';\nimport {MetaContextComponent} from '../../../core/meta-context/meta-context.component';\nimport {UIMeta} from '../../../core/uimeta';\nimport {MetaBaseComponent} from '../../meta.base.component';\n\n/**\n * Component responsible for rendering a row using MetaIncludeComponent.\n * What I am still not sure, if I want to use fully validation from MetaRule and if I cannot\n * leverage basic validation from angular.\n *\n * Meaning I might remove default valid::** rule from WidgetsRules and when its required insert\n * default Required validation from angular.\n *\n */\n@Component({\n    selector: 'm-form-row',\n    template: `<aw-form-row\n    [editable]=\"editable\"\n    [customValidators]=\"validators\"\n    [size]=\"size\"\n    [hidden]=\"!properties('visible')\"\n    [styleClass]=\"bindingStringProperty('styleClass')\"\n    [name]=\"properties('field')\"\n    [required]=\"isRequired()\"\n    [label]=\"properties('label')\"\n    [noLabelLayout]=\"bindingBoolProperty('useNoLabelLayout')\">\n\n    <m-include-component></m-include-component>\n</aw-form-row>\n\n`,\n    styles: [``],\n    providers: [\n\n        {provide: FormRowComponent, useExisting: forwardRef(() => MetaFormRowComponent)}\n    ]\n\n})\nexport class MetaFormRowComponent extends MetaBaseComponent\n{\n\n    @Input()\n    field: string;\n\n\n    /**\n     * There could be special cases when we are layout component that we want to extends the row\n     * 100%.\n     */\n    @Input()\n    initialSize: string = 'medium';\n\n    /**\n     * Cached validatos\n     */\n    validators: ValidatorFn[];\n\n\n    constructor(@Host() protected _metaContext: MetaContextComponent, public env: Environment)\n    {\n        super(env, _metaContext);\n    }\n\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n        this.validators = this.createValidators();\n    }\n\n    bindingBoolProperty(key: string): boolean\n    {\n        let bindings: Map<string, any> = this.context.propertyForKey(UIMeta.KeyBindings);\n\n        if (isPresent(bindings) && bindings.has(key)) {\n            let value = bindings.get(key);\n            return BooleanWrapper.boleanValue(value);\n\n        }\n        return false;\n    }\n\n\n    bindingStringProperty(key: string): string\n    {\n        let bindings: Map<string, any> = this.context.propertyForKey(UIMeta.KeyBindings);\n\n        if (isPresent(bindings) && bindings.has(key)) {\n            return bindings.get(key);\n\n        }\n        return null;\n    }\n\n\n    get size(): string\n    {\n        let bindings: Map<string, any> = this.context.propertyForKey(UIMeta.KeyBindings);\n\n        if (isPresent(bindings) && bindings.has('size')) {\n            return bindings.get('size');\n        }\n        return this.initialSize;\n    }\n\n    set size(value: string)\n    {\n        this.initialSize = value;\n    }\n\n\n    /**\n     * Creates angular based Validator which for a current field executes validation rules real\n     * time as use type. At the bottom of the file there is example of async validator\n     *\n     */\n    private createValidators(): ValidatorFn[]\n    {\n        let that = this;\n        let metaValidator = (control: AbstractControl): {[key: string]: any} =>\n        {\n            if (isPresent(Validators.required(control)) || !control.touched) {\n                return null;\n            }\n\n            let errorMsg = UIMeta.validationError(that.context);\n            return isPresent(errorMsg) ? {\n                    'metavalid': {'msg': errorMsg}\n                } : null;\n        };\n\n        return [metaValidator];\n    }\n\n    isRequired(): boolean\n    {\n        return (isPresent(this.editing) && this.context.booleanPropertyForKey('required', false));\n    }\n\n}\n\n\n/*\n\n return new Promise((resolve) => {\n setTimeout (()=>{\n\n let context: UIContext = <UIContext> this._contextSnapshot.hydrate();\n context.value = control.value;\n\n let errorMsg = UIMeta.validationError(context);\n\n\n if(isPresent(errorMsg)) {\n resolve({metavalid: {msg: errorMsg}});\n } else{\n resolve(null);\n }\n\n }, 700);\n });\n\n\n */\n\n\n// metaValid (): AsyncValidatorFn[]\n// {\n//     let metaValidator = (control: AbstractControl): {[key: string]: any} =>\n//     {\n//         return new Promise((resolve) =>\n//         {\n//             setTimeout(()=>\n//             {\n//                 let context: UIContext = <UIContext> this._contextSnapshot.hydrate();\n//                 context.value = control.value;\n//\n//                 let errorMsg = UIMeta.validationError(context);\n//\n//\n//                 if (isPresent(errorMsg)) {\n//                     resolve({metavalid: {msg: errorMsg}});\n//                 } else {\n//                     resolve(null);\n//                 }\n//\n//             } , 400);\n//         });\n//     };\n//     return [metaValidator];\n// }\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {BooleanWrapper, isPresent, RoutingService} from '@aribaui/core';\nimport {UIMeta} from '../../core/uimeta';\n\n\n/**\n * MetaContentPage  component is used from MetaRules and universal component rendering different\n * operation modes.\n *\n *\n */\n@Component({\n    selector: 'm-content-page',\n    template: `<!-- TODO: impplement dynamic title based on the operation and object as well as updates buttons-->\n\n<m-context [pushNewContext]=\"newContext\" [object]=\"object\" [operation]=\"operation\"\n           [layout]=\"layout\">\n\n    <aw-basic-navigator (onOKAction)=\"onBack($event)\" [okActionLabel]=\"okLabel\"\n                        [showCancelButton]=\"!isInspectAction\">\n\n\n        <div class=\"page-container \">\n            <br/>\n            <h3>{{objectName}} details:</h3>\n\n            <m-include-component></m-include-component>\n        </div>\n    </aw-basic-navigator>\n\n</m-context>\n`,\n    styles: [``]\n})\nexport class MetaContentPageComponent implements OnInit\n{\n\n    object: any;\n    operation: string;\n    layout: string;\n    newContext: boolean = true;\n    objectName: string;\n    isInspectAction: boolean = false;\n\n    okLabel = 'Back';\n\n    constructor(private route: ActivatedRoute, private routingService: RoutingService)\n    {\n    }\n\n    ngOnInit()\n    {\n        this.layout = this.route.snapshot.params['layout'];\n        this.operation = this.route.snapshot.params['operation'];\n\n        let url = '/' + this.route.snapshot.url[0].toString();\n        if (this.routingService.stateCacheHistory.has(url)) {\n            this.object = this.routingService.stateCacheHistory.get(url);\n            this.objectName = UIMeta.defaultLabelForIdentifier(this.object.constructor.name);\n        }\n        let withBackAction = this.route.snapshot.params['b'];\n        if (isPresent(withBackAction) && BooleanWrapper.isTrue(withBackAction)) {\n            this.isInspectAction = true;\n        }\n\n    }\n\n\n    onBack(event: any): void\n    {\n        this.routingService.goBack();\n    }\n\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {assert, Environment, isBlank, isPresent} from '@aribaui/core';\nimport {MetaBaseComponent} from './meta.base.component';\nimport {ItemProperties} from '../core/item-properties';\nimport {PropertyMap} from '../core/meta';\nimport {MetaContextComponent} from '../core/meta-context/meta-context.component';\nimport {UIMeta} from '../core/uimeta';\nimport {Context} from '../core/context';\nimport {OnDestroy} from '@angular/core';\n\n/**\n * MetaLayout represent a high level rule that aggregates defined layout. When we iterate thru the\n * different layout we need to remember both current rendered context as well as ItemProperties.\n *\n *\n *\n */\nexport class MetaLayout extends MetaBaseComponent implements OnDestroy\n{\n    /**\n     * List all available Layouts defines for current Context\n     */\n    protected _allLayouts: ItemProperties[];\n\n    /**\n     * Layout sorted by zones. Each implementation can support different zones.\n     */\n    protected _layoutsByZones: Map<string, any>;\n\n    /**\n     * Context properties for current active rendered layout\n     *\n     */\n    protected _propertyMap: PropertyMap;\n\n    /**\n     * Current Layout being rendered\n     */\n    protected _layout: ItemProperties;\n\n    /**\n     * Layout definitions by its name\n     *\n     */\n    protected nameToLayout: Map <string, ItemProperties> = new Map<string, ItemProperties>();\n\n    /**\n     * A map linking the name of the layout to the actual context. We need this when we need\n     * to access current content.\n     *\n     */\n    contextMap: Map <string, Context> = new Map<string, Context>();\n\n\n    /**\n     * Current context being rendered\n     */\n    layoutContext: Context;\n\n\n    constructor(protected _metaContext: MetaContextComponent, public env: Environment)\n    {\n        super(env, _metaContext);\n\n    }\n\n    /**\n     * Can be called by m-content to @Output when context properties are pushed to stack\n     *\n     */\n    afterContextSet(layoutName: any): void\n    {\n        this.layoutContext = this.activeContext;\n        this.contextMap.set(layoutName, this.layoutContext.snapshot().hydrate(false));\n\n    }\n\n    /**\n     * Can be called by m-content to @Output after context properties are pushed to stack\n     *\n     */\n    beforeContextSet(layoutName: any): void\n    {\n        this.layout = this.nameToLayout.get(layoutName);\n    }\n\n\n    get activeContext(): Context\n    {\n        return this._metaContext.activeContext();\n    }\n\n    /**\n     * Retrieves all available and active layouts for zones defined by subclasses\n     *\n     */\n    get allLayouts(): ItemProperties[]\n    {\n        if (isBlank(this._allLayouts)) {\n            let meta: UIMeta = <UIMeta> this.activeContext.meta;\n            this._allLayouts = meta.itemList(this.activeContext, UIMeta.KeyLayout, this.zones());\n            this.nameToLayout.clear();\n\n            this._allLayouts.forEach((item: ItemProperties) =>\n                this.nameToLayout.set(item.name, item));\n\n        }\n        return this._allLayouts;\n    }\n\n    /**\n     * Retrieves all available and active layouts and aggregate them their name\n     *\n     */\n    get layoutsByZones(): Map<string, any>\n    {\n        if (isBlank(this._layoutsByZones)) {\n            let meta: UIMeta = <UIMeta> this.activeContext.meta;\n            this._layoutsByZones = meta.itemsByZones(this.activeContext, UIMeta.KeyLayout,\n                this.zones());\n        }\n        return this._layoutsByZones;\n    }\n\n\n    get layout(): ItemProperties\n    {\n        return this._layout;\n    }\n\n    set layout(value: ItemProperties)\n    {\n        this._layout = value;\n        this._propertyMap = null;\n    }\n\n    // todo: should this be for current layout?\n    get propertyMap(): PropertyMap\n    {\n        if (isBlank(this._propertyMap)) {\n            this.activeContext.push();\n            this._propertyMap = this.activeContext.allProperties();\n            this.activeContext.pop();\n        }\n        return this._propertyMap;\n    }\n\n\n    label(): string\n    {\n        return this.activeContext.resolveValue(this.propertyMap.get(UIMeta.KeyLabel));\n    }\n\n\n    labelForContext(name: string): string\n    {\n        let context: Context = this.contextMap.get(name);\n        return super.aProperties(context, UIMeta.KeyLabel);\n    }\n\n    zones(): string[]\n    {\n        return UIMeta.ZonesTLRMB;\n    }\n\n\n    // remove this ugly solution once I figure out custom value accessor\n    properties(key: string, defValue: any = null): any\n    {\n        return isPresent(this.activeContext) ? this.activeContext.propertyForKey(key) : defValue;\n\n    }\n\n    debugString(name: string): string\n    {\n        let context = this.contextMap.get(name);\n        assert(isPresent(context), 'Trying to retrive debugString on non-existing context');\n\n        return context.debugString();\n    }\n\n\n    ngOnDestroy(): void\n    {\n        this.layoutContext = null;\n        this.contextMap.clear();\n        this.contextMap = null;\n    }\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {MetaLayout} from '../meta-layout';\nimport {MetaContextComponent} from '../../core/meta-context/meta-context.component';\nimport {Context} from '../../core/context';\n\n/**\n * MetaElementList is implementation of Stack Layout where the content is rendered as list (stacked)\n * You do not use this layout directly as it is instantiated dynamically using MetaIncludeComponent.\n *\n * For more detail please checkout WidgetRules.oss the part bellow where create new trait\n * that can be applied to any layout.\n *\n * ```\n *\n * layout {\n *\n *   @trait=Stack { visible:true; component:MetaElementListComponent }\n *\n * }\n *\n * ```\n *\n * Actual usage could be :\n *\n *\n * ```\n *  layout=Inspect2#Stack {\n *       @layout=First#Form {\n *           elementStyle:\"padding-bottom:100px\";\n *       }\n *       @layout=Second#Form { zonePath:Second; }\n *   }\n *\n *\n *\n *    class=User {\n *       zNone => *;\n *       zLeft => firstName => lastName => age => department;\n *       Second.zLeft => email;\n *\n *   }\n *\n * ```\n *\n */\n@Component({\n    template: `<!--<b>MetaElementList: {{allLayouts}} </b>-->\n<!--<pre [innerHTML]=\"context.debugString()\"></pre>-->\n\n<ng-template ngFor [ngForOf]=\"allLayouts\" let-cLayout>\n\n    <m-context [layout]=\"cLayout.name\" (afterContextSet)=\"afterContextSet($event)\"\n               (beforeContextSet)=\"beforeContextSet($event)\">\n\n        <!--<b>MetaElementList: layout {{cLayout.name}} </b>-->\n        <!--<pre [innerHTML]=\"debugString(cLayout.name)\"></pre>-->\n\n        <div class=\"ui-g \">\n            <div class=\"ui-g-12 ui-g-nopad\" [ngClass]=\"classString(cLayout.name)\"\n                 [ngStyle]=\"styleString(cLayout.name)\"\n            >\n                <m-include-component></m-include-component>\n            </div>\n        </div>\n    </m-context>\n\n</ng-template>\n\n`,\n    styles: [``]\n})\nexport class MetaElementListComponent extends MetaLayout\n{\n\n\n    constructor(protected _metaContext: MetaContextComponent, public env: Environment,\n                public sanitizer: DomSanitizer)\n    {\n        super(_metaContext, env);\n\n    }\n\n\n    styleString(name: string): any\n    {\n        let lContext: Context = this.contextMap.get(name);\n        // return isPresent(lContext) && isPresent(lContext.propertyForKey('elementStyle')) ?\n        //     this.sanitizer.bypassSecurityTrustStyle(lContext.propertyForKey('elementStyle')) :\n        // null;\n\n        return null;\n    }\n\n\n    classString(name: string): any\n    {\n        let lContext: Context = this.contextMap.get(name);\n        return isPresent(lContext) ? lContext.propertyForKey('elementClass') : null;\n    }\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component, Input} from '@angular/core';\nimport {Environment, isBlank, isPresent} from '@aribaui/core';\nimport {MetaContextComponent} from '../../core/meta-context/meta-context.component';\nimport {MetaBaseComponent} from '../meta.base.component';\nimport {Context, UIContext} from '../../core/context';\nimport {UIMeta} from '../../core/uimeta';\nimport {ItemProperties} from '../../core/item-properties';\nimport {MenuItem} from 'primeng/components/common/api';\n\n\nexport interface MenuItemCommand extends MenuItem\n{\n    actionName?: string;\n    moduleName?: string;\n    routePath?: string;\n\n}\n\n/**\n * MetaActionList provides a way how to attach actions to the screen. We can use @action declaration\n * to define new action and their actionResults. actionResults is an expression that is executed\n * and either redirect you to different page or some logic is executed.\n *\n * Actions can be organized into action categories but if we do not provide any action category\n * default one is used.\n *\n * This way we define placeholder using a layout where actions are inserted\n *\n *\n *```html\n *\n *    layout=Inspect2#Stack {\n *       @layout=MenuTop#ActionButtons {\n *       }\n *\n *     @layout=First#Form {\n *     }\n *\n *     @layout=Second#Form { zonePath:Second; }\n *  }\n *\n *\n * ```\n *\n * And this is how we define actions for current page/class/object\n *\n * ```\n *    @action=update  {\n *             actionResults:${ object.firstName = \"Mr.\" +  object.firstName };\n *             visible: ${ properties.editing };\n *    }\n *\n *\n *    @action=Save  {\n *             label: \"My Save\";\n *             actionResults:${ object.firstName = \"Ms.\" +  object.firstName };\n *             visible: ${ properties.editing };\n *             buttonStyle:info;\n *    }\n * ```\n *\n *\n *\n *\n *\n *\n *\n */\n@Component({\n    template: `<span [class.u-flr]=\"alignRight()\">\n    <m-context *ngIf=\"renderAs === 'buttons'\">\n        <ng-template ngFor [ngForOf]=\"actionCategories()\" let-category>\n            <m-context [actionCategory]=\"category.name\">\n                <ng-template ngFor [ngForOf]=\"actions(category)\" let-action>\n                    <m-context [action]=\"action.name\"\n                               (onContextChanged)=\"onContextChanged($event)\"\n                               (afterContextSet)=\"onAfterContextSet($event)\">\n                        <aw-button (action)=\"actionClicked(action.name)\"\n                                   [style]=\"style(action.name)\"\n                                   [disabled]=\"isActionDisabled(action.name)\">\n\n                        {{ label(action.name) }}\n                        </aw-button>\n                    </m-context>\n                </ng-template>\n            </m-context>\n\n        </ng-template>\n    </m-context>\n\n    <m-context *ngIf=\"renderAs === 'links'\">\n        <ng-template ngFor [ngForOf]=\"actionCategories()\" let-category>\n            <m-context [actionCategory]=\"category.name\">\n                <ng-template ngFor [ngForOf]=\"actions(category)\" let-action>\n                    <m-context [action]=\"action.name\"\n                               (onContextChanged)=\"onContextChanged($event)\"\n                               (afterContextSet)=\"onAfterContextSet($event)\">\n                        <aw-button (action)=\"actionClicked(action.name)\"\n                                   [style]=\"'link'\"\n                                   [disabled]=\"isActionDisabled(action.name)\">\n\n                        {{ label(action.name) }}\n                        </aw-button>\n                    </m-context>\n                </ng-template>\n            </m-context>\n\n        </ng-template>\n    </m-context>\n\n    <m-context *ngIf=\"renderAs === 'menu'\">\n        <ng-template ngFor [ngForOf]=\"actionCategories()\" let-category>\n            <m-context [actionCategory]=\"category.name\">\n\n                <ng-template ngFor [ngForOf]=\"actions(category)\" let-action>\n                    <m-context [action]=\"action.name\"\n                               (onContextChanged)=\"onContextChanged($event)\"\n                               (afterContextSet)=\"onAfterContextSet($event)\">\n                    </m-context>\n                </ng-template>\n            </m-context>\n        </ng-template>\n\n        <p-menu #menu popup=\"popup\" [model]=\"menuModel\"></p-menu>\n\n        <!-- todo: extend button to support icons -->\n        <aw-button (action)=\"menu.toggle($event)\">\n            Actions\n        </aw-button>\n\n    </m-context>\n</span>\n\n\n\n\n\n`,\n    styles: [`.m-action-list{width:100%}`]\n})\nexport class MetaActionListComponent extends MetaBaseComponent\n{\n\n    /**\n     *\n     * Defines type of components that renders our actions. We have 3 types:\n     * Buttons, Links and Popup Menu\n     *\n     */\n    @Input()\n    renderAs: string = 'buttons';\n\n\n    /**\n     * Default style used for the buttons if none is specified\n     *\n     */\n    @Input()\n    defaultStyle: string = 'info';\n\n\n    /**\n     * Tells us if the action should be rendered on the left or right side\n     *\n     */\n    @Input()\n    align: string = 'right';\n\n\n    /**\n     * This is special identifier and when used we push extra stack property in order to get some\n     * additional properties that are primarily related to type of actions that can be visible or\n     * enabled\n     *\n     * E.g. we can say we want only object Instance based buttons\n     *\n     * ```\n     *  @trait=InstanceActionButtons {\n     *          visible:true;\n     *          component:MetaActionListComponent;\n     *          bindings:{\n     *              renderAs:buttons;\n     *              align:right;\n     *              filterActions:instance;\n     *           };\n     *           elementClass:\"l-action-buttons\";\n     *      }\n     *\n     *  ```\n     *\n     * When this trait is used we push filterAction = instance and it will give us back\n     *\n     *  ```\n     *  filterActions=instance {\n     *          visible:${properties.isInstanceAction == true}\n     *      }\n     *\n     * ```\n     *\n     * Which can be used to show or hide button if e.g. object instance is selected or available\n     *\n     *\n     *\n     */\n    @Input()\n    filterActions: string;\n\n\n    /**\n     * Just stores mapping between action and context and action and ItemProperties. So everytime\n     *\n     */\n    protected _actionsByCategory: Map<string, ItemProperties[]>;\n    protected _actionsByName: Map<string, ItemProperties>;\n\n    /**\n     * Current  action groups retrieved from current Context\n     */\n    categories: ItemProperties[];\n\n    /**\n     * When ActionMenu trait is used this is the menu model that defines what items are available\n     */\n    menuModel: MenuItemCommand[];\n\n    /**\n     * Map linking the name of the layout to the actual context. We need this when we need\n     * to access current content.\n     *\n     */\n    _contextMap: Map <string, Context> = new Map<string, Context>();\n\n\n    constructor(protected _metaContext: MetaContextComponent, public env: Environment)\n    {\n        super(env, _metaContext);\n\n    }\n\n\n    // protected updateMeta(): any\n    // {\n    //     // todo: replace it with EventEmmitter.\n    //     this._actionsByCategory = null;\n    //     this._actionsByName = null;\n    //     return super.updateMeta();\n    // }\n\n    /**\n     * Read and stores current action categories available to current Context\n     *\n     */\n    actionCategories(): ItemProperties[]\n    {\n        if (isBlank(this._actionsByCategory) || isBlank(this._actionsByName)) {\n\n            if (isPresent(this.filterActions)) {\n                this.context.set('filterActions', this.filterActions);\n            }\n\n            let meta: UIMeta = <UIMeta> this.context.meta;\n            this.context.push();\n\n            this.menuModel = [];\n            this._actionsByCategory = new Map<string, ItemProperties[]>();\n            this._actionsByName = new Map<string, ItemProperties>();\n            this.categories = meta.actionsByCategory(this.context, this._actionsByCategory,\n                UIMeta.ActionZones);\n            this.context.pop();\n\n            this._actionsByCategory.forEach((v: ItemProperties[], k: string) =>\n            {\n                v.forEach((item: ItemProperties) => this._actionsByName.set(item.name, item));\n            });\n        }\n\n        return this.categories;\n    }\n\n\n    /**\n     *\n     * Action belonging to current category..\n     *\n     */\n    actions(category: ItemProperties): ItemProperties[]\n    {\n        return this._actionsByCategory.get(category.name);\n    }\n\n\n    /**\n     *\n     * When action clicked this method delegates it into meta layer to be executed.\n     *\n     */\n    actionClicked(action: any): void\n    {\n        let context = this._contextMap.get(action);\n        let meta: UIMeta = <UIMeta> context.meta;\n\n        meta.fireActionFromProps(this._actionsByName.get(action), <UIContext> context);\n    }\n\n\n    /**\n     * A hook used to store the most current context for each action.\n     *\n     */\n    onAfterContextSet(actionName: string): void\n    {\n        let aContext = this._metaContext.activeContext().snapshot().hydrate(false);\n        this._contextMap.set(actionName, aContext);\n\n\n        if (this.renderAs === 'menu') {\n            this.populateMenu(actionName);\n        }\n    }\n\n\n    /**\n     * A hook used to store the most current context for each action.\n     *\n     */\n    onContextChanged(change: string): void\n    {\n        console.log('Changed = ' + change);\n    }\n\n    label(actionName: string): string\n    {\n        let context: Context = this._contextMap.get(actionName);\n        return super.aProperties(context, UIMeta.KeyLabel);\n    }\n\n    isActionDisabled(actionName: string): boolean\n    {\n        let context: Context = this._contextMap.get(actionName);\n        return isPresent(context) ? !context.booleanPropertyForKey('enabled', false) : true;\n    }\n\n    alignRight(): boolean\n    {\n        return this.align === 'right';\n    }\n\n    style(actionName: string): string\n    {\n        let context: Context = this._contextMap.get(actionName);\n        let style = super.aProperties(context, 'buttonStyle');\n\n        return isPresent(style) ? style : this.defaultStyle;\n    }\n\n\n    private populateMenu(actionName: string): void\n    {\n        let label = this.label(actionName);\n        let index = this.menuModel.findIndex(\n            (item: MenuItemCommand) => item.actionName === actionName);\n\n        let itemCommand: MenuItemCommand = {\n            label: label,\n            actionName: actionName,\n            disabled: this.isActionDisabled(actionName),\n            command: (event: any) =>\n            {\n                this.actionClicked(event.item.actionName);\n            }\n        };\n        if (index === -1) {\n            this.menuModel.push(itemCommand);\n        } else {\n            this.menuModel[index] = itemCommand;\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component, Input} from '@angular/core';\nimport {BaseComponent} from '@aribaui/components';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {UIMeta} from '../../core/uimeta';\n\n\n/**\n * Default homePage implementation for a Module. Just like on the example bellow when we define a\n * module without a homePage this MetaHomePageComponent will be used.\n *\n * ```\n *\n *   @module=Home {\n *       label:\"My Home\";\n *       pageTitle:\"You are now on Homepage\";\n *\n *       @layout=Today {\n *          after:zTop;\n *          label: \"Sales Graph\";\n *          component:SalesGraphComponent;\n *     }\n *  }\n *\n * ```\n * Or you can decide not to use this MetaHomePage and Provide your own e.g:\n *\n * ```\n *  @module=Products {\n *      label:\"Products for Somethig\";\n *      pageTitle:\"You are now on Products\";\n *      homePage:ProductContentComponent;\n *  }\n *\n * ```\n *\n *\n */\n@Component({\n    selector: 'm-home-page',\n    template: `<div class=\"m-page\" *ngIf=\"hasModule()\">\n    <m-context [module]=\"module\">\n        <m-include-component></m-include-component>\n    </m-context>\n\n</div>\n\n\n`,\n    styles: [`.m-page{width:100%;margin:0 auto;padding:5px}.m-page:after{content:\".\";display:block;height:0;clear:both;visibility:hidden}.module-footer{clear:both}`]\n})\nexport class MetaHomePageComponent extends BaseComponent\n{\n\n    @Input()\n    module: string;\n\n    constructor(public env: Environment, private activatedRoute: ActivatedRoute)\n    {\n        super(env);\n    }\n\n\n    /**\n     *\n     * This page is triggered by router and we expect a module to be passed in by routing\n     * params\n     *\n     */\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n\n        let routeParams = this.activatedRoute.snapshot.params;\n        if (isPresent(routeParams) && isPresent(routeParams[UIMeta.KeyModule])) {\n            this.module = routeParams[UIMeta.KeyModule];\n        }\n    }\n\n    hasModule(): boolean\n    {\n        return isPresent(this.module);\n    }\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {MetaLayout} from '../meta-layout';\nimport {MetaContextComponent} from '../../core/meta-context/meta-context.component';\nimport {UIMeta} from '../../core/uimeta';\nimport {Context} from '../../core/context';\nimport {ItemProperties} from '../../core/item-properties';\n\n\n/**\n *\n * Defines 4 sizes for the portlet size\n *\n */\nconst PortletSizes: {[k: string]: string} = {\n    'small': 'ui-md-3',\n    'medium': 'ui-md-4',\n    'wide': 'ui-md-6',\n    'large': 'ui-md-12'\n};\n\n/**\n * Simple Dashboard implementation for the homePage. Just like we support inside MetaFormTable\n * different zones and distribute fields to them, we do the same with defined layouts.\n *\n * This dashboard supports 3 zones.\n *\n *    zToc: This is the place where usually all the actions or 2nd level navigation will go\n *    zTop,zBottom: is where the portlets are rendered.\n *\n *\n * To distribute layouts to different zones :\n *\n * ```\n *       @module=Home {\n *           label:\"My Home\";\n *           pageTitle:\"You are now on Homepage\";\n *\n *\n *           @layout=Today {\n *              after:zTop;\n *              label: \"Sales Graph\";\n *              component:SalesGraphComponent;\n *\n *           }\n *\n *           @layout=Sport {\n *              after:Today;\n *              label: \"Sport today!\";\n *              component:StringComponent;\n *              bindings:{value:\"The Texas Tech quarterback arrived at  \" }\n *\n *           }\n *\n * ```\n *\n *  or Push actions to the zToc zone:\n *\n * ```\n *       @module=Home {\n *           label:\"My Home\";\n *           pageTitle:\"You are now on Homepage\";\n *\n *\n *           @layout=Today {\n *              after:zTop;\n *              label: \"Sales Graph\";\n *              component:SalesGraphComponent;\n *\n *           }\n *\n *            @layout=Actions#ActionLinks {\n *               label:$[a004]Actions;\n *                after:zToc;\n *            }\n *\n *\n *           @actionCategory=Create {\n *              @action=NewBlog#pageAction { pageName:blogPage;}\n *              @action=NewChart#pageAction { pageName:chartPage;}\n *           }\n *\n * }\n *\n *\n *\n */\n@Component({\n    template: `<div>\n    <span class=\"m-dashbord-name\">{{dashboardName}} </span>\n    <span class=\"m-dashbord-lbl\"> Dashboard</span>\n</div>\n\n\n<div id=\"m-toggle-bar\" *ngIf=\"zTocLayouts().length > 0\">\n    <aw-hyperlink (action)=\"toggleMenu($event)\" [size]=\"'large'\">\n        <i class=\"fa fa-bars\"></i>\n    </aw-hyperlink>\n</div>\n<div id=\"m-toc\" [class.active]=\"activeMenu\" *ngIf=\"zTocLayouts().length > 0\">\n    <div class=\"ui-g \">\n        <m-context *ngFor=\"let layout of zTocLayouts()\"\n                   [layout]=\"layout.name\" (afterContextSet)=\"afterContextSet($event)\"\n                   (beforeContextSet)=\"beforeContextSet($event)\">\n\n            <div class=\"ui-g-12 \" [ngClass]=\"portletWidth(layout.name)\">\n                <p-panel [header]=\"labelForContext(layout.name)\">\n                    <m-include-component></m-include-component>\n                </p-panel>\n            </div>\n        </m-context>\n    </div>\n</div>\n\n<div id=\"m-content\">\n    <div class=\"ui-g m-dashboard\">\n        <!-- top -->\n        <div class=\"ui-g-12\">\n            <div class=\"ui-g \">\n                <m-context *ngFor=\"let layout of topLayouts()\"\n                           [layout]=\"layout.name\" (afterContextSet)=\"afterContextSet($event)\"\n                           (beforeContextSet)=\"beforeContextSet($event)\">\n\n                    <div class=\"ui-g-12 \" [ngClass]=\"portletWidth(layout.name)\">\n                        <p-panel [header]=\"labelForContext(layout.name)\" [toggleable]=\"true\">\n                            <m-include-component></m-include-component>\n                        </p-panel>\n                    </div>\n                </m-context>\n            </div>\n        </div>\n\n        <!-- bottom -->\n        <div class=\"ui-g-12\">\n            <div class=\"ui-g \">\n                <m-context *ngFor=\"let layout of bottomLayouts()\"\n                           [layout]=\"layout.name\" (afterContextSet)=\"afterContextSet($event)\"\n                           (beforeContextSet)=\"beforeContextSet($event)\">\n\n                    <div class=\"ui-g-12 \" [ngClass]=\"portletWidth(layout.name)\">\n                        <p-panel [header]=\"labelForContext(layout.name)\" [toggleable]=\"true\">\n                            <m-include-component></m-include-component>\n                        </p-panel>\n                    </div>\n                </m-context>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n`,\n    styles: [`#m-toc{position:relative;float:left;z-index:99;width:15em;padding:.5em;box-shadow:6px 0 10px -4px rgba(0,0,0,.3)}#m-content{float:left;padding-top:1em;padding-left:1em;height:auto}#m-toggle-bar{box-sizing:border-box;border-bottom:1px solid #dde3e6;overflow:hidden;display:none;border-radius:5px;padding:.5em;width:2em;height:2.3em}#m-toggle-bar:focus,#m-toggle-bar:hover{background-color:#ececec}#m-toggle-bar:after{content:'';display:block;clear:both}.m-dashbord-name{font-weight:600}.ui-g{display:block}@media screen and (max-width:64em){#m-toc{display:none;overflow-y:auto;z-index:999}#m-toc.active{display:block}#m-toggle-bar{display:block;position:relative;z-index:1000;margin-right:1em}}`]\n})\nexport class MetaDashboardLayoutComponent extends MetaLayout\n{\n\n    /**\n     * New defined zone for Actions\n     *\n     */\n    static ZoneToc = 'zToc';\n    static ZonesTB = [\n        MetaDashboardLayoutComponent.ZoneToc, UIMeta.ZoneTop,\n        UIMeta.ZoneBottom\n    ];\n\n    /**\n     * Defines if sidebar is collapsed or expanded\n     *\n     */\n    activeMenu: boolean = false;\n\n    /**\n     * Current Module name\n     *\n     */\n    dashboardName: string = '';\n\n    constructor(metaContext: MetaContextComponent, env: Environment)\n    {\n        super(metaContext, env);\n    }\n\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n\n        this.dashboardName = this.label();\n    }\n\n    toggleMenu(event: any)\n    {\n        this.activeMenu = !this.activeMenu;\n    }\n\n    zones(): string[]\n    {\n        return MetaDashboardLayoutComponent.ZonesTB;\n    }\n\n    topLayouts(): ItemProperties[]\n    {\n        let tops = this.layoutsByZones.get(UIMeta.ZoneTop);\n\n        return isPresent(tops) ? tops : [];\n    }\n\n    portletWidth(name: string): any\n    {\n        let lContext: Context = this.contextMap.get(name);\n        let width = lContext.propertyForKey('portletWidth');\n        return isPresent(width) && isPresent(PortletSizes[width]) ? PortletSizes[width] :\n            'ui-md-4';\n    }\n\n    bottomLayouts(): ItemProperties[]\n    {\n        let bottom = this.layoutsByZones.get(UIMeta.ZoneBottom);\n\n        return isPresent(bottom) ? bottom : [];\n    }\n\n\n    zTocLayouts(): ItemProperties[]\n    {\n        let bottom = this.layoutsByZones.get(MetaDashboardLayoutComponent.ZoneToc);\n        return isPresent(bottom) ? bottom : [];\n    }\n\n\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {AfterViewInit, Component, QueryList, ViewChildren} from '@angular/core';\nimport {Environment, isBlank, isPresent} from '@aribaui/core';\nimport {MetaLayout} from '../meta-layout';\nimport {\n    MetaContextComponent,\n    MetaUIActionEvent\n} from '../../core/meta-context/meta-context.component';\nimport {Context} from '../../core/context';\nimport {SectionComponent} from '@aribaui/components';\nimport {ItemProperties} from '../../core/item-properties';\n\n/**\n * MetaSection renders list of sections defined by @trait inside WidgetsRules. It uses layouts to\n * structure the list.\n *\n * ```\n *  layout {\n *       @trait=Sections { visible:true; component:MetaSectionsComponent }\n *  }\n *\n * ```\n *\n * and can be used as :\n *\n * ```\n *     layout=RfxDetailLayout#Sections {\n *\n *         @layout=Header#Form {\n *             trait:labelsOnTop;\n *             zonePath:Header;\n *\n *             bindings: {\n *                 description:$object.header.description;\n *             }\n *         }\n *         @layout=LineItems {\n *             component:RfxLineItemsComponent;\n *             bindings: {\n *                 rfxEvent:$object;\n *             }\n *         }\n *         @layout=Participants {\n *             component:RfxParticipantsComponent;\n *             bindings: {\n *                 rfxEvent:$object;\n *             }\n *         }\n *     }\n *\n *\n *     class=RfxEventHeader {\n *         zNone => *;\n *         Header.zLeft => requester => region => needBy;\n *     }\n * ```\n * In above example we have first section with Form where RfxEventHeader sends its fields\n * and several other sections with custom component.\n *\n *\n */\n@Component({\n    template: `<div class=\"meta-sections\">\n\n    <m-context *ngFor=\"let layout of allLayouts; let i = index\" [layout]=\"layout.name\"\n               [operation]=\"sectionOperations[layout.name]\"\n               (afterContextSet)=\"afterContextSet($event)\"\n               (beforeContextSet)=\"beforeContextSet($event)\">\n\n        <aw-section [title]=\"sectionProp('title', layout.name, null)\"\n                    [description]=\"sectionProp('description', layout.name, null)\"\n                    [opened]=\"sectionProp('opened', layout.name, true)\"\n                    [actionIcon]=\"sectionProp('actionIcon', layout.name, 'icon-edit')\"\n                    [editable]=\"sectionProp('canEdit', layout.name, false)\"\n                    [editMode]=\"sectionProp('editMode', layout.name, 'default')\"\n                    [disableClose]=\"sectionProp('disableClose', layout.name, false)\"\n                    (onEdit)=\"onAction('onEdit', i, layout.name, $event)\"\n                    (onSaveAction)=\"onAction('onSaveAction', i, layout.name, $event)\"\n                    (onCancelAction)=\"onAction('onCancelAction', i, layout.name, $event)\">\n\n            <m-include-component></m-include-component>\n        </aw-section>\n\n    </m-context>\n</div>\n`,\n    styles: [``]\n})\nexport class MetaSectionsComponent extends MetaLayout implements AfterViewInit\n{\n    /**\n     * Collect list of sections that are rendered so we can use them later on when broadcasting\n     * an event to application. In some case just like this you need to have a reference\n     * to the component\n     */\n    @ViewChildren(SectionComponent)\n    viewSections: QueryList<SectionComponent>;\n\n    /**\n     * List of section read from QueryList after view is initialized\n     */\n    sections: SectionComponent[];\n\n\n    sectionOperations: {[name: string]: string} = {};\n\n\n    private onCompleteSubscriptions: {[name: string]: SectionComponent} = {};\n\n\n    constructor(protected _metaContext: MetaContextComponent, public env: Environment)\n    {\n        super(_metaContext, env);\n\n    }\n\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n\n        this.allLayouts.forEach((value: ItemProperties) =>\n        {\n            this.sectionOperations[value.name] = 'view';\n        });\n    }\n\n    ngDoCheck(): void\n    {\n        super.ngDoCheck();\n\n\n    }\n\n    ngAfterViewInit(): void\n    {\n        this.sections = [...this.viewSections.toArray()];\n    }\n\n    /**\n     * Action handler to broadcast event outside so it can be handled by the application\n     *\n     */\n    onAction(name: string, sectionIndex: number, cnxName: string, event: any): void\n    {\n        let section = this.sections[sectionIndex];\n        if (this.env.hasValue('parent-cnx')) {\n            let cnx: MetaContextComponent = this.env.getValue('parent-cnx');\n\n            cnx.onAction.emit(new MetaUIActionEvent(section, name, cnxName,\n                event));\n        }\n\n        if (name === 'onEdit' && section.editState && section.editMode === 'default') {\n            this.sectionOperations[cnxName] = 'edit';\n\n            if (isBlank(this.onCompleteSubscriptions[cnxName])) {\n                section.onEditingComplete.subscribe((value: any) =>\n                    this.sectionOperations[cnxName] = 'view'\n                );\n                this.onCompleteSubscriptions[cnxName] = section;\n            }\n\n        }\n    }\n\n\n    /**\n     *\n     * Retrieves a property from the current context\n     *\n     */\n    sectionProp(propName: string, cnxName: string, defaultVal: any): any\n    {\n        let lContext: Context = this.contextMap.get(cnxName);\n        return (isPresent(lContext) && isPresent(lContext.propertyForKey(propName))) ?\n            lContext.propertyForKey(propName) : defaultVal;\n    }\n\n\n    ngOnDestroy(): void\n    {\n        super.ngOnDestroy();\n\n        this.allLayouts.forEach((value: ItemProperties) =>\n        {\n            if (isPresent(this.onCompleteSubscriptions[value.name])) {\n                this.onCompleteSubscriptions[value.name].onEditingComplete.unsubscribe();\n            }\n        });\n    }\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Based on original work: MetaUI: Craig Federighi (2008)\n *\n */\nimport {Component, Input} from '@angular/core';\nimport {Environment, isBlank, isStringMap} from '@aribaui/core';\nimport {BaseComponent} from '@aribaui/components';\n\n\n/**\n * Just like MetaContentPage this components renders meta context details but embedded as some\n * inline component. Not a page with page level buttons\n *\n *\n * Todo: We dont really need this component we we in the future extends MetaIncludeComponent to\n * support awcontentElement:\n *\n * ```\n *  {\n *      component:MetaContextComponent;\n *      bindings: {\n *          object:$value;\n *          layout:Inspect;\n *          operation:view;\n *          awcontentElement:MetaIncludeComponnetDirective;\n *      }\n *\n *  }\n *\n *  ```\n *\n *  This would instantiate right meta context just like this class.\n */\n@Component({\n    selector: 'm-content-detail',\n    template: `<m-context [pushNewContext]=\"true\" [object]=\"object\" [operation]=\"operation\"\n           [layout]=\"layout\" group=\"ObjectDetail\">\n\n    <div class=\"w-object-detail\">\n        <m-include-component></m-include-component>\n    </div>\n\n</m-context>\n`,\n    styles: [``]\n})\nexport class MetaObjectDetailComponent extends BaseComponent\n{\n\n    /**\n     * Object detail to be rendered\n     */\n    @Input()\n    object: any;\n\n    /**\n     * For the detail view we always use read only content\n     */\n    @Input()\n    operation: string = 'view';\n\n    /**\n     * Default layout\n     *\n     */\n    @Input()\n    layout: string = 'Inspect';\n\n    constructor(public env: Environment)\n    {\n        super(env);\n    }\n\n    ngOnInit()\n    {\n        if (isBlank(this.object) || !isStringMap(this.object)) {\n            throw new Error('Cannot render primitive values as object details!');\n        }\n\n    }\n\n\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MetaIncludeComponentDirective} from './meta-include.directive';\nimport {MetaFormComponent} from './meta-form/meta-form.component';\nimport {MetaFormTableComponent} from './meta-form/meta-form-table/meta-form-table.component';\nimport {MetaFormRowComponent} from './meta-form/meta-form-row/meta-form-row.component';\nimport {NoMetaComponent} from './no-meta/no-meta.component';\nimport {MetaContentPageComponent} from './meta-content-page/meta-content-page.component';\nimport {MetaElementListComponent} from './meta-element-list/meta-element-list.component';\nimport {MetaActionListComponent} from './meta-action-list/meta-action-list.component';\nimport {MetaHomePageComponent} from './meta-home-page/meta-home.page.component';\nimport {MetaDashboardLayoutComponent} from './meta-dashboard/metadashboard-layout.component';\nimport {AWMetaCoreModule} from '../core/meta-core.module';\nimport {AribaComponentsModule} from '@aribaui/components';\nimport {MetaSectionsComponent} from './meta-section/meta-sections.component';\nimport {AribaCoreModule} from '@aribaui/core';\nimport {MetaObjectDetailComponent} from './meta-object-detail/meta-object-detail.component';\n\n\n@NgModule({\n    declarations: [\n        MetaIncludeComponentDirective,\n        MetaFormComponent,\n        MetaFormTableComponent,\n        MetaFormRowComponent,\n        NoMetaComponent,\n        MetaContentPageComponent,\n        MetaElementListComponent,\n        MetaActionListComponent,\n        MetaHomePageComponent,\n        MetaDashboardLayoutComponent,\n        MetaSectionsComponent,\n        MetaObjectDetailComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AWMetaCoreModule,\n        AribaCoreModule,\n        AribaComponentsModule\n    ],\n    entryComponents: [\n        MetaFormComponent,\n        MetaFormTableComponent,\n        MetaFormRowComponent,\n        NoMetaComponent,\n        MetaContentPageComponent,\n        MetaContentPageComponent,\n        MetaElementListComponent,\n        MetaActionListComponent,\n        MetaHomePageComponent,\n        MetaDashboardLayoutComponent,\n        MetaSectionsComponent,\n        MetaObjectDetailComponent\n    ],\n    exports: [\n        MetaIncludeComponentDirective,\n        MetaFormComponent,\n        MetaFormTableComponent,\n        MetaFormRowComponent,\n        NoMetaComponent,\n        MetaContentPageComponent,\n        MetaContentPageComponent,\n        MetaElementListComponent,\n        MetaActionListComponent,\n        MetaHomePageComponent,\n        MetaDashboardLayoutComponent,\n        MetaSectionsComponent,\n        ReactiveFormsModule,\n        FormsModule,\n        AribaCoreModule,\n        AribaComponentsModule,\n        MetaObjectDetailComponent\n    ],\n    providers: []\n})\nexport class AWMetaLayoutModule\n{\n}\n\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MetaContentPageComponent} from './layout/meta-content-page/meta-content-page.component';\n\nconst routes: Routes = [\n    {path: 'context', component: MetaContentPageComponent}\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [RouterModule],\n    providers: []\n})\nexport class AribaMetaUIRoutingModule\n{\n}\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n */\nimport {APP_INITIALIZER, Injector, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UIMeta} from './core/uimeta';\nimport {RuleLoaderService} from './core/rule-loader.service';\nimport * as sysMetaComponents from './entry-components';\nimport {AribaMetaUIRoutingModule} from './ariba-metaui-routing.module';\nimport {AWMetaCoreModule} from './core/meta-core.module';\nimport {AWMetaLayoutModule} from './layout/meta-layout.module';\n\n\n/**\n * This module contains everything needs to dynamically generated UI based on metaRules\n * Since we are using primeNG, check AribaComponent if its already imported so you dont have\n * import it again.\n *\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        AribaMetaUIRoutingModule,\n        AWMetaCoreModule,\n        AWMetaLayoutModule\n    ],\n    exports: [\n        AWMetaCoreModule,\n        AWMetaLayoutModule\n    ],\n    providers: [\n        {\n            'provide': APP_INITIALIZER,\n            'useFactory': initMetaUI,\n            'deps': [Injector],\n            'multi': true,\n        },\n    ],\n})\nexport class AribaMetaUIModule\n{\n\n\n    constructor()\n    {\n    }\n}\n\n/**\n *\n * Entry factory method that initialize The METAUI layer and here we load WidgetsRules.oss as well\n * as Persistence Rules.\n *\n */\nexport function initMetaUI(injector: Injector)\n{\n    let initFce = function init(inj: Injector)\n    {\n        let promise: Promise<any> = new Promise((resolve: any) =>\n        {\n            let metaUI = UIMeta.getInstance();\n\n            // access services lazily when they are needed and initialized as workaround for\n            // https://github.com/angular/angular/issues/16853\n            metaUI.injector = inj;\n\n            metaUI.registerLoader(new RuleLoaderService());\n            metaUI.loadDefaultRuleFiles(sysMetaComponents);\n\n            resolve(true);\n        });\n        return promise;\n    };\n    return initFce.bind(initFce, injector);\n}\n\n"]}