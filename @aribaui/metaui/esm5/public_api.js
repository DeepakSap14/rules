/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @license
 * Copyright 2017 SAP Ariba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 */
export { Activation, Assignment, AssignmentSnapshot, Context, DeferredAssignment, ObjectMetaContext, PropertyAccessor, Snapshot, StaticRec, UIContext, ItemProperties, Match, MatchResult, MatchWithUnion, UnionMatchResult, Meta, KeyValueCount, PropertyManager, OverrideValue, KeyData, PropertyMap, PropertyMergerDynamic, PropertyMerger_Overwrite, PropertyMerger_List, PropertyMergerDeclareList, PropertyMergerDeclareListForTrait, PropertyMerger_And, PropertyMerger_Valid, RuleSet, ValueMatches, MultiMatchValue, KeyValueTransformer_KeyPresent, isPropertyMapAwaking, NestedMap, FieldTypeIntrospectionMetaProvider, IntrospectionMetaProvider, ObjectMeta, ObjectMetaPropertyMap, OMPropertyMerger_Valid, SystemPersistenceRules, DynamicPropertyValue, StaticallyResolvable, StaticDynamicWrapper, StaticallyResolvableWrapper, ContextFieldPath, isDynamicSettable, Expr, DeferredOperationChain, ValueConverter, Rule, RuleWrapper, Selector, RuleLoaderService, LocalizedString, UIMeta, SystemRules, ModuleInfo, AWMetaCoreModule, MetaUIActionEvent } from './core/index';
export { MetaContentPageComponent, MetaFormComponent, MetaFormRowComponent, MetaFormTableComponent, NoMetaComponent, MetaIncludeComponentDirective, MetaBaseComponent, MetaElementListComponent, MetaHomePageComponent, AWMetaLayoutModule, MetaSectionsComponent, MetaObjectDetailComponent } from './layout/index';
export { MetaContextComponent } from './core/meta-context/meta-context.component';
export { AribaMetaUIModule, initMetaUI } from './ariba.metaui.module';
export { AribaMetaUIRoutingModule } from './ariba-metaui-routing.module';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhcmliYXVpL21ldGF1aS8iLCJzb3VyY2VzIjpbInB1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQSxPQUFPLEVBQ0gsVUFBVSxFQUFFLFVBQVUsRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsaUJBQWlCLEVBQzFGLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUNoRCxjQUFjLEVBQTBCLEtBQUssRUFBRSxXQUFXLEVBQUUsY0FBYyxFQUFFLGdCQUFnQixFQUM1RixJQUFJLEVBQUUsYUFBYSxFQUFFLGVBQWUsRUFBRSxhQUFhLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFDL0IscUJBQXFCLEVBQUUsd0JBQXdCLEVBQ3pGLG1CQUFtQixFQUFFLHlCQUF5QixFQUFFLGlDQUFpQyxFQUNqRixrQkFBa0IsRUFBRSxvQkFBb0IsRUFBRSxPQUFPLEVBQWMsWUFBWSxFQUFFLGVBQWUsRUFDakQsOEJBQThCLEVBQ3pFLG9CQUFvQixFQUFZLFNBQVMsRUFBRSxrQ0FBa0MsRUFDN0UseUJBQXlCLEVBQUUsVUFBVSxFQUNyQyxxQkFBcUIsRUFBRSxzQkFBc0IsRUFBRSxzQkFBc0IsRUFDckUsb0JBQW9CLEVBQWdDLG9CQUFvQixFQUFFLG9CQUFvQixFQUM5RiwyQkFBMkIsRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsc0JBQXNCLEVBQzlGLGNBQWMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBYyxpQkFBaUIsRUFDMUUsZUFBZSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUV4RixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQ0gsd0JBQXdCLEVBQUUsaUJBQWlCLEVBQUUsb0JBQW9CLEVBQUUsc0JBQXNCLEVBQ3pGLGVBQWUsRUFBRSw2QkFBNkIsRUFBRSxpQkFBaUIsRUFBRSx3QkFBd0IsRUFDMUUscUJBQXFCLEVBQUUsa0JBQWtCLEVBQUUscUJBQXFCLEVBQ2pGLHlCQUF5QixFQUM1QixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLDRDQUE0QyxDQUFDO0FBQ2hGLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxVQUFVLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRSxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IFNBUCBBcmliYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqXG4gKi9cblxuLypcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBjb3JlXG4gKi9cblxuZXhwb3J0IHtcbiAgICBBY3RpdmF0aW9uLCBBc3NpZ25tZW50LCBBc3NpZ25tZW50U25hcHNob3QsIENvbnRleHQsIERlZmVycmVkQXNzaWdubWVudCwgT2JqZWN0TWV0YUNvbnRleHQsXG4gICAgUHJvcGVydHlBY2Nlc3NvciwgU25hcHNob3QsIFN0YXRpY1JlYywgVUlDb250ZXh0LFxuICAgIEl0ZW1Qcm9wZXJ0aWVzLCBKc29uUnVsZSwgU2VsZWN0b3JKc29uLCBNYXRjaCwgTWF0Y2hSZXN1bHQsIE1hdGNoV2l0aFVuaW9uLCBVbmlvbk1hdGNoUmVzdWx0LFxuICAgIE1ldGEsIEtleVZhbHVlQ291bnQsIFByb3BlcnR5TWFuYWdlciwgT3ZlcnJpZGVWYWx1ZSwgS2V5RGF0YSwgUHJvcGVydHlNYXAsXG4gICAgUHJvcGVydHlNZXJnZXJJc0NoYWluaW5nLCBQcm9wZXJ0eU1lcmdlciwgUHJvcGVydHlNZXJnZXJEeW5hbWljLCBQcm9wZXJ0eU1lcmdlcl9PdmVyd3JpdGUsXG4gICAgUHJvcGVydHlNZXJnZXJfTGlzdCwgUHJvcGVydHlNZXJnZXJEZWNsYXJlTGlzdCwgUHJvcGVydHlNZXJnZXJEZWNsYXJlTGlzdEZvclRyYWl0LFxuICAgIFByb3BlcnR5TWVyZ2VyX0FuZCwgUHJvcGVydHlNZXJnZXJfVmFsaWQsIFJ1bGVTZXQsIE1hdGNoVmFsdWUsIFZhbHVlTWF0Y2hlcywgTXVsdGlNYXRjaFZhbHVlLFxuICAgIFZhbHVlUXVlcmllZE9ic2VydmVyLCBLZXlWYWx1ZVRyYW5zZm9ybWVyLCBLZXlWYWx1ZVRyYW5zZm9ybWVyX0tleVByZXNlbnQsIFByb3BlcnR5TWFwQXdha2luZyxcbiAgICBpc1Byb3BlcnR5TWFwQXdha2luZywgTWFwRW50cnksIE5lc3RlZE1hcCwgRmllbGRUeXBlSW50cm9zcGVjdGlvbk1ldGFQcm92aWRlcixcbiAgICBJbnRyb3NwZWN0aW9uTWV0YVByb3ZpZGVyLCBPYmplY3RNZXRhLFxuICAgIE9iamVjdE1ldGFQcm9wZXJ0eU1hcCwgT01Qcm9wZXJ0eU1lcmdlcl9WYWxpZCwgU3lzdGVtUGVyc2lzdGVuY2VSdWxlcyxcbiAgICBEeW5hbWljUHJvcGVydHlWYWx1ZSwgRHluYW1pY1NldHRhYmxlUHJvcGVydHlWYWx1ZSwgU3RhdGljYWxseVJlc29sdmFibGUsIFN0YXRpY0R5bmFtaWNXcmFwcGVyLFxuICAgIFN0YXRpY2FsbHlSZXNvbHZhYmxlV3JhcHBlciwgQ29udGV4dEZpZWxkUGF0aCwgaXNEeW5hbWljU2V0dGFibGUsIEV4cHIsIERlZmVycmVkT3BlcmF0aW9uQ2hhaW4sXG4gICAgVmFsdWVDb252ZXJ0ZXIsIFJ1bGUsIFJ1bGVXcmFwcGVyLCBTZWxlY3RvciwgUnVsZUxvYWRlciwgUnVsZUxvYWRlclNlcnZpY2UsXG4gICAgTG9jYWxpemVkU3RyaW5nLCBVSU1ldGEsIFN5c3RlbVJ1bGVzLCBNb2R1bGVJbmZvLCBBV01ldGFDb3JlTW9kdWxlLCBNZXRhVUlBY3Rpb25FdmVudFxuXG59IGZyb20gJy4vY29yZS9pbmRleCc7XG5leHBvcnQge1xuICAgIE1ldGFDb250ZW50UGFnZUNvbXBvbmVudCwgTWV0YUZvcm1Db21wb25lbnQsIE1ldGFGb3JtUm93Q29tcG9uZW50LCBNZXRhRm9ybVRhYmxlQ29tcG9uZW50LFxuICAgIE5vTWV0YUNvbXBvbmVudCwgTWV0YUluY2x1ZGVDb21wb25lbnREaXJlY3RpdmUsIE1ldGFCYXNlQ29tcG9uZW50LCBNZXRhRWxlbWVudExpc3RDb21wb25lbnQsXG4gICAgTWVudUl0ZW1Db21tYW5kLCBNZXRhSG9tZVBhZ2VDb21wb25lbnQsIEFXTWV0YUxheW91dE1vZHVsZSwgTWV0YVNlY3Rpb25zQ29tcG9uZW50LFxuICAgIE1ldGFPYmplY3REZXRhaWxDb21wb25lbnRcbn0gZnJvbSAnLi9sYXlvdXQvaW5kZXgnO1xuZXhwb3J0IHtNZXRhQ29udGV4dENvbXBvbmVudH0gZnJvbSAnLi9jb3JlL21ldGEtY29udGV4dC9tZXRhLWNvbnRleHQuY29tcG9uZW50JztcbmV4cG9ydCB7QXJpYmFNZXRhVUlNb2R1bGUsIGluaXRNZXRhVUl9IGZyb20gJy4vYXJpYmEubWV0YXVpLm1vZHVsZSc7XG5leHBvcnQge0FyaWJhTWV0YVVJUm91dGluZ01vZHVsZX0gZnJvbSAnLi9hcmliYS1tZXRhdWktcm91dGluZy5tb2R1bGUnO1xuXG5cblxuIl19