{"version":3,"file":"aribaui-components.umd.js.map","sources":["ng://@aribaui/components/core/embedded-item.ts","ng://@aribaui/components/core/generic-container.component.ts",null,"ng://@aribaui/components/core/base.component.ts","ng://@aribaui/components/core/base-form.component.ts","ng://@aribaui/components/widgets/string/string.component.ts","ng://@aribaui/components/core/component-registry.service.ts","ng://@aribaui/components/core/include-component.directive.ts","ng://@aribaui/components/core/error-manager.service.ts","ng://@aribaui/components/core/error-messages/error-messages.component.ts","ng://@aribaui/components/core/modal-service/modal.service.ts","ng://@aribaui/components/core/modal-service/modal/modal.component.ts","ng://@aribaui/components/core/pipes/currency-format.pipe.ts","ng://@aribaui/components/core/on-ngfor-set.directive.ts","ng://@aribaui/components/core/dom-utils.service.ts","ng://@aribaui/components/core/infite-scroll/infite-scroll.component.ts","ng://@aribaui/components/core/aw-name/aw-name.store.ts","ng://@aribaui/components/core/aw-name/aw-name.directive.ts","ng://@aribaui/components/core/core.module.ts","ng://@aribaui/components/core/modal-service/modal-container.ts","ng://@aribaui/components/core/data/datatype-registry.service.ts","ng://@aribaui/components/core/data/array-data-provider.ts","ng://@aribaui/components/core/data/data-providers.ts","ng://@aribaui/components/core/data/data-finders.ts","ng://@aribaui/components/core/data/data-source.ts","ng://@aribaui/components/layouts/five-zone-layout.component.ts","ng://@aribaui/components/layouts/form-table/form-row/form-row.component.ts","ng://@aribaui/components/layouts/form-table/form-table.component.ts","ng://@aribaui/components/layouts/form-table/form-table.module.ts","ng://@aribaui/components/widgets/input-field/input-field.component.ts","ng://@aribaui/components/widgets/string/string.module.ts","ng://@aribaui/components/widgets/input-field/input-field.module.ts","ng://@aribaui/components/widgets/basic-navigator/basic-navigator.component.ts","ng://@aribaui/components/widgets/button/button.component.ts","ng://@aribaui/components/widgets/button/button.module.ts","ng://@aribaui/components/widgets/basic-navigator/basic-navigator.module.ts","ng://@aribaui/components/widgets/card/card.component.ts","ng://@aribaui/components/widgets/card/card-title/card-title.component.ts","ng://@aribaui/components/widgets/card/card.module.ts","ng://@aribaui/components/widgets/checkbox/checkbox.component.ts","ng://@aribaui/components/widgets/checkbox/check-box.module.ts","ng://@aribaui/components/widgets/check-box-list/check-box-list.component.ts","ng://@aribaui/components/widgets/check-box-list/check-box-list.module.ts","ng://@aribaui/components/widgets/hyperlink/hyperlink.component.ts","ng://@aribaui/components/widgets/hyperlink/hyperlink.module.ts","ng://@aribaui/components/widgets/chooser/chooser-selection-state.ts","ng://@aribaui/components/widgets/chooser/chooser-state.ts","ng://@aribaui/components/widgets/chooser/chooser-data-source.ts","ng://@aribaui/components/widgets/chooser/chooser.component.ts","ng://@aribaui/components/widgets/chooser/chooser.module.ts","ng://@aribaui/components/widgets/dropdown/dropdown.component.ts","ng://@aribaui/components/widgets/dropdown/dropdown.module.ts","ng://@aribaui/components/widgets/currency/currency.component.ts","ng://@aribaui/components/widgets/currency/currency.module.ts","ng://@aribaui/components/widgets/date-and-time/date-and-time.component.ts","ng://@aribaui/components/widgets/date-and-time/data-and-time.module.ts","ng://@aribaui/components/widgets/dialog/dialog-header.component.ts","ng://@aribaui/components/widgets/dialog/dialog-footer.component.ts","ng://@aribaui/components/widgets/dialog/dialog.component.ts","ng://@aribaui/components/widgets/dialog/dialog.module.ts","ng://@aribaui/components/widgets/generic-chooser/generic-chooser.component.ts","ng://@aribaui/components/widgets/radio-button-list/radio-button-list.component.ts","ng://@aribaui/components/widgets/radio-button/radio-button.component.ts","ng://@aribaui/components/widgets/radio-button/radio-button.module.ts","ng://@aribaui/components/widgets/radio-button-list/radio-button-list.module.ts","ng://@aribaui/components/widgets/generic-chooser/generic-chooser.module.ts","ng://@aribaui/components/widgets/outline/outline-state.ts","ng://@aribaui/components/widgets/outline/outline-for.component.ts","ng://@aribaui/components/widgets/outline/outline-control/outline-control.component.ts","ng://@aribaui/components/widgets/outline/outline-for.module.ts","ng://@aribaui/components/widgets/text-area/text-area.component.ts","ng://@aribaui/components/widgets/text-area/text-area.module.ts","ng://@aribaui/components/widgets/page-notification/page-notification.component.ts","ng://@aribaui/components/widgets/page-notification/page-notification.module.ts","ng://@aribaui/components/widgets/page-wrapper/page-events.ts","ng://@aribaui/components/widgets/page-wrapper/page-lifecycle.service.ts","ng://@aribaui/components/widgets/page-wrapper/page-wrapper.ts","ng://@aribaui/components/widgets/page-wrapper/page-header/page-header.component.ts","ng://@aribaui/components/widgets/page-wrapper/page-footer/page-footer.component.ts","ng://@aribaui/components/widgets/page-wrapper/object-page-wrapper/object-page-wrapper.component.ts","ng://@aribaui/components/widgets/page-wrapper/page-actions/page-actions.component.ts","ng://@aribaui/components/widgets/page-wrapper/page-content/page-content.component.ts","ng://@aribaui/components/widgets/stepper/stepper.component.ts","ng://@aribaui/components/widgets/stepper/step/step.component.ts","ng://@aribaui/components/widgets/stepper/stepper.module.ts","ng://@aribaui/components/widgets/page-wrapper/sidenav/sidenav.component.ts","ng://@aribaui/components/widgets/page-wrapper/page-wrapper.module.ts","ng://@aribaui/components/widgets/rich-text-area/rich-text-area.component.ts","ng://@aribaui/components/widgets/rich-text-area/rich-text-area.module.ts","ng://@aribaui/components/widgets/section/section.component.ts","ng://@aribaui/components/widgets/section/section.module.ts","ng://@aribaui/components/widgets/datatable2/column/dt-column.component.ts","ng://@aribaui/components/widgets/datatable2/header/header.component.ts","ng://@aribaui/components/widgets/datatable2/column/detail-row/dt-detail-row.component.ts","ng://@aribaui/components/widgets/datatable2/column/detail-row-expander/dt-detail-row-expander.component.ts","ng://@aribaui/components/widgets/datatable2/aw-datatable.ts","ng://@aribaui/components/widgets/datatable2/datatable2-data-source.ts","ng://@aribaui/components/widgets/datatable2/column/multi-select/dt-multi-select-column.component.ts","ng://@aribaui/components/widgets/datatable2/column/single-select/dt-single-select-column.component.ts","ng://@aribaui/components/widgets/datatable2/datatable2.component.ts","ng://@aribaui/components/widgets/datatable2/table-wrapper/table-wrapper.component.ts","ng://@aribaui/components/widgets/datatable2/directives/dt-cell-directives.ts","ng://@aribaui/components/widgets/datatable2/directives/dt-draggable-row.directive.ts","ng://@aribaui/components/widgets/datatable2/datatable2.module.ts","ng://@aribaui/components/widgets/confirmation/confirmation-header.component.ts","ng://@aribaui/components/widgets/confirmation/confirmation-footer.component.ts","ng://@aribaui/components/widgets/confirmation/confirmation.component.ts","ng://@aribaui/components/widgets/confirmation/confirmation.module.ts","ng://@aribaui/components/widgets/scrollable-container/scrollable-container.component.ts","ng://@aribaui/components/widgets/scrollable-container/scrollable-container.module.ts","ng://@aribaui/components/widgets/list/list.component.ts","ng://@aribaui/components/widgets/list/list.module.ts","ng://@aribaui/components/widgets/wizard-progress/wizard-progress.component.ts","ng://@aribaui/components/widgets/wizard-progress/wizard-progress.module.ts","ng://@aribaui/components/widgets/toggle-switch/toggle-switch.component.ts","ng://@aribaui/components/widgets/toggle-switch/toggle-switch.module.ts","ng://@aribaui/components/widgets/overlay/overlay.component.ts","ng://@aribaui/components/widgets/hover-card/hover-card.component.ts","ng://@aribaui/components/spy-lifecycle.directive.ts","ng://@aribaui/components/widgets/overlay/overlay.module.ts","ng://@aribaui/components/widgets/hover-card/hover-card.module.ts","ng://@aribaui/components/ariba.component.module.ts","ng://@aribaui/components/ariba.component.provider.module.ts"],"sourcesContent":["/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Directive,\n    EmbeddedViewRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    TemplateRef,\n    ViewContainerRef\n} from '@angular/core';\nimport {isPresent} from '@aribaui/core';\n\n\n/**\n * When we have a custom component like dropdown, radiobuttonlist and\n * many more we want to provide a custom content to it like so:\n *\n * ```\n *  <aw-dropdown [list]=\"listOfUsers\" let somehowGetItemOut>\n *      {{item.userName}}\n *\n *   <aw-dropdown\n *\n * ```\n * Who else would know how to render list of objects..\n *\n * But its not possible in current form. if I do not provide Angular some as they call it this\n * syntactic sugar *,\n *\n *\n * ```\n *  <aw-dropdown *mySugerDirective=.....>\n *      {{item.userName}}\n *\n *   <aw-dropdown\n * ```\n *\n *\n * then angular will not know  inside is a template and I wont be able to get hold of TemplateRef\n * inside the component\n *\n * So the only way I found (expecting I do not want to change anything in terms of bindings and the\n * signature I use it. I have to use it like this:\n *\n * ```\n *  <aw-dropdown [list]=\"listOfUsers\" let somehowGetItemOut>\n *      <ng-template let-item> {{item.userName}}</ng-template>\n *\n *   <aw-dropdown\n *\n * ```\n *\n *  This way it could work. Since I am inside ngFor I want to render the item into the correct\n * viewContainer of ngFor's current item.\n *\n *  This way I can also expose item outside using Angular's special local variable called:\n * $implicit.\n *\n * This gets even more complex if we try to pass this template 2 levels down, like in case of\n * RadioButtonList. But later on I might want to refactor this into custom NG FOR\n *\n * @deprecated in favor of ngTemplateOutlet (will be removed in the next version)\n *\n */\n@Directive({selector: '[embeddedItem]'})\nexport class EmbeddedItemDirective implements OnChanges\n{\n    /**\n     * Template we want to render N-Times\n     */\n    @Input()\n    embeddedItem: TemplateRef<any>;\n\n    @Input()\n    set item(item: any)\n    {\n        this._implicitValue = item;\n    }\n\n    private _implicitValue: any;\n    private _viewRef: EmbeddedViewRef<any>;\n\n\n    constructor(private _viewContainer: ViewContainerRef)\n    {\n    }\n\n    /**\n     *\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        if (isPresent(this._viewRef)) {\n            this._viewContainer.remove(this._viewContainer.indexOf(this._viewRef));\n        }\n\n        if (isPresent(this.embeddedItem)) {\n            let context = new EmbededItem(this._implicitValue);\n            this._viewRef = this._viewContainer.createEmbeddedView(this.embeddedItem, context);\n        }\n    }\n}\n\n\n/**\n * Wrapper class around Angular's EmbeddedViewRef.context()\n *\n */\nexport class EmbededItem\n{\n    constructor(public $implicit: any)\n    {\n    }\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, DoCheck, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\nimport {isBlank, isPresent, MapWrapper} from '@aribaui/core';\n\n/**\n * GenericContainerComponent is used by include-component.directive to dynamically create an\n * HTMLElement and use this element to wrap a child component. This is very useful when we want to\n * modify a child by wrapping it with a border, a background, or bold its text.\n *\n * The wrapper element is dynamically created. It's element is specified by the tagName property in\n * the bindings @Input.\n *\n *  ### Example.  Directly in html\n *\n *   app.html\n *      <aw-generic-container tagName=\"tagName\" bindings=\"bindings\">\n *          <my-component ..bindings..></my-component>\n *      </aw-generic-container>\n *\n *   app.component.ts\n *\n *       tagName = (bBold) ? 'h1' : 'span';\n *       bindings = {  style: 'background-color: red' }\n *\n */\n@Component({\n    selector: 'aw-generic-container',\n    template: '<ng-content></ng-content>',\n    styles: []\n})\nexport class GenericContainerComponent implements OnInit, DoCheck\n{\n\n    /**\n     * Default tagName if none is specified inside bindings.\n     *\n     */\n    static readonly DefaultTagName = 'div';\n\n    /**\n     * Bindings to be added as attributes to the tagName element.\n     */\n    @Input()\n    bindings: Map<string, any>;\n\n    /**\n     * Element to be created that wraps it's content.\n     */\n    @Input()\n    tagName: string;\n\n    /**\n     * Native root element. Points to <aw-generic-container>\n     */\n    private nativeElement: Node;\n\n    private childElement: Node;\n\n\n    /**\n     * param renderer - Renderer is used to create 'tagName' element.\n     */\n    constructor(private renderer: Renderer2, private element: ElementRef)\n    {\n        this.nativeElement = element.nativeElement;\n    }\n\n    /**\n     * During the initialization, verify that at least one input has been set.\n     */\n    ngOnInit()\n    {\n        // If there's no input, this component wouldn't know what to do and throw exception.\n        if (isBlank(this.bindings) && isBlank(this.tagName)) {\n            throw new Error('GenericContainerComponent input bindings or tagName ' +\n                'have not been set.');\n        }\n\n        // If the tagName is blank, the get it from bindings.\n        if (isBlank(this.tagName)) {\n            this.tagName = this.bindings.get('tagName');\n            if (isBlank(this.tagName)) {\n                this.tagName = GenericContainerComponent.DefaultTagName;\n            }\n        }\n\n        // Save first added\n        this.childElement = this.nativeElement.firstChild;\n        this.doRender();\n    }\n\n    ngDoCheck(): void\n    {\n\n        if (isPresent(this.childElement) &&\n            this.childElement.parentNode !== this.nativeElement.firstChild) {\n\n            this.nativeElement.firstChild.appendChild(this.childElement);\n        }\n    }\n\n\n    /**\n     * After content has been initialized. Create the tagName element. Apply all the bindings on to\n     * the element as attribute. Finally, move the child element, <ng-content>, to inside the\n     * wrapper component.\n     */\n    private doRender()\n    {\n        const el = this.renderer.createElement(this.tagName);\n        if (isPresent(this.nativeElement)) {\n            this.renderer.appendChild(this.nativeElement, el);\n        }\n\n        // Loop through all the bindings and add them to the element.\n        MapWrapper.iterable(this.bindings).forEach((v, k) =>\n        {\n            this.renderer.setStyle(el, k, v);\n        });\n\n        // Attach the component to this divElement.\n        el.appendChild(this.childElement);\n    }\n\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {DoCheck, Input, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\nimport {AppConfig, Environment} from '@aribaui/core';\n\n\n/**\n *  Base component shares common functionality among all the components (layouts, widgets).\n *\n */\nexport abstract class BaseComponent implements OnInit, OnChanges, DoCheck, OnDestroy\n{\n\n    /**\n     * Adds disabled flag to the component\n     *\n     */\n    @Input()\n    disabled: boolean = false;\n\n\n    /**\n     * Weather this component is visible\n     * Default is false;\n     */\n    @Input()\n    visible: boolean = false;\n\n    /**\n     * Tell  the component if we are in editing mode.\n     *\n     */\n    @Input()\n    editable?: boolean = true;\n\n    /**\n     * Every component have option to set a custom with\n     *\n     */\n    @Input()\n    width: any;\n\n    /**\n     * Every component have option to set a custom with\n     */\n    @Input()\n    height: any;\n\n    /**\n     * optional css class which can be utilized by component\n     */\n    @Input()\n    styleClass: any;\n\n    /**\n     * Removes padding from the component. Usually used when we are nesting other component with\n     * its own grid.\n     */\n    @Input()\n    omitPadding = false;\n\n    /**\n     * Class extension support register here any dynamic field that does not existing on the\n     * class/component\n     */\n    extBindings: Map<string, any>;\n\n\n    /**\n     * Prefix for the correct asset path\n     */\n    assetFolder: string = 'assets';\n\n    constructor(public env?: Environment)\n    {\n        this.extBindings = new Map<string, any>();\n        this.omitPadding = false;\n    }\n\n\n    ngOnInit(): void\n    {\n        this.assetFolder = this.env.getValue(AppConfig.AssetFolder);\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void\n    {\n    }\n\n\n    ngDoCheck(): void\n    {\n    }\n\n\n    ngOnDestroy(): void\n    {\n    }\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Environment, isBlank, isPresent, noop, uuid} from '@aribaui/core';\nimport {forwardRef, Inject, Input, Optional, PipeTransform, SkipSelf} from '@angular/core';\nimport {ControlValueAccessor, FormControl, FormGroup} from '@angular/forms';\nimport {BaseComponent} from '../core/base.component';\n\n/**\n * x-small = > 12%  = > col-1\n * small = > `\n * medium = > 50%   = > col-6\n * large = > 75%    = > col-9\n * large = > 100%   = > col-12\n *\n */\nexport type WidgetSize = 'x-small' | 'small' | 'medium' | 'large' | 'x-large';\n\nexport enum WidgetSizeColumns\n{\n    xsmall = 1,\n    small = 3,\n    medium = 6,\n    large = 9,\n    xlarge = 12\n}\n\n\n/**\n *  BaseFormComponnet extends BaseComponent for add specific form behavior\n *\n */\nexport abstract class BaseFormComponent extends BaseComponent implements ControlValueAccessor\n{\n    /*\n     *  Supported layout constants. It is expected there will be more options as we currently\n     *  support only these two there will be other variations of it. e.g. for stacked it will not\n     *  be 1 columns like it is now but multiple columns\n     *\n     */\n    static readonly LayoutStacked = 'stacked';\n    static readonly LayoutInline = 'inline';\n\n\n    /**\n     * Component name attribute. Can be used to lookup component in form.\n     */\n    @Input()\n    name: string;\n\n\n    /**\n     * Component Id. Can be used to lookup component in form.\n     */\n    @Input()\n    id: string;\n\n\n    /**\n     *\n     * Is current element visible\n     */\n    @Input()\n    hidden: boolean = false;\n\n    /**\n     * You can pass in formGroup which will be used with in the form\n     *\n     * @Input() - see getter\n     */\n    private _formGroup: FormGroup;\n\n\n    /**\n     * Renders required flex around the component\n     *\n     */\n    @Input()\n    required: boolean = false;\n\n\n    /**\n     *  a text displayed when value is empty or NULL\n     */\n    @Input()\n    placeHolder: String = '';\n\n    /**\n     * Identify if this control is used directly or if its part of some other control\n     * e.g. GenericChooser and managed by this control.\n     * Meaning State is mananged outside of this component\n     *\n     */\n    @Input()\n    isStandalone: boolean = true;\n\n\n    /**\n     * Form Control for the component. Its either inherited since it was precreated in parent\n     * component or its created based on passed 'name' and registered with the 'formGroup'\n     *\n     * When  initialize FormControl we do setValue with onlySelf:true flag and we do not emit any\n     * event outside\n     *\n     */\n    formControl: FormControl;\n\n\n    /**\n     * Formatter that can be assign to the component in order to format its input\n     */\n    formatter: PipeTransform;\n\n\n    protected onModelChanged: (_: any) => void = noop;\n    protected onModelTouched: (_: any) => void = noop;\n\n\n    /**\n     * Some of the BaseFormComponent can wrap other component and in these cases we want to\n     * inherit some of the behavior from parent\n     *\n     * @Inject(Environment) public env: Environment : is tem a workaround as without inject\n     * on this specific component it complains that Environment is unresolved symbol\n     *\n     */\n    constructor (@Inject(Environment) public env: Environment,\n                 @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                 protected parentContainer: BaseFormComponent)\n    {\n        super(env);\n    }\n\n\n    ngOnInit (): void\n    {\n        super.ngOnInit();\n\n        if (isPresent(this.parentContainer)) {\n            this.formGroup = this.parentContainer.formGroup;\n            this.editable = this.parentContainer.editable;\n        }\n\n        this.checkInitForm();\n    }\n\n\n    /**\n     * Make sure that we have available formGroup and Name and ID\n     *\n     */\n    protected checkInitForm ()\n    {\n\n        if (isBlank(this.env.currentForm)) {\n            this.env.currentForm = new FormGroup({});\n        }\n\n        /**\n         * Todo: Right now I just need to initialize name , but ideally it needs to be generated\n         * number basedon some semantics app.page.component if there are more component on the page\n         * then app.page.componentNumber. Simple solution is to is to get Elementref and query it.\n         */\n        if (isBlank(this.name)) {\n            this.name = uuid();\n        }\n\n        if (isBlank(this.id)) {\n            this.id = uuid();\n        }\n\n    }\n\n    protected doRegister (name: string, value: any): FormControl\n    {\n\n        let fControl: FormControl;\n\n        if (isBlank(this.formGroup.controls[name])) {\n            this.formGroup.registerControl(name, new FormControl(value));\n            fControl = <FormControl> this.formGroup.controls[name];\n\n        } else {\n            fControl = <FormControl> this.formGroup.controls[name];\n            let updatedValue: any = isPresent(fControl.value) ? fControl.value : value;\n            fControl.patchValue(updatedValue, {onlySelf: true, emitEvent: false});\n        }\n        return fControl;\n    }\n\n\n    /**\n     * When we are dealing with Forms this is a helper method to register control\n     *\n     *\n     * @param value default value to be pre-set\n     */\n    registerFormControl (value: any)\n    {\n        this.formControl = this.doRegister(this.name, value);\n\n        if (this.disabled) {\n            this.formControl.disable();\n        }\n    }\n\n\n    @Input() get formGroup (): FormGroup\n    {\n        return isPresent(this._formGroup) ? this._formGroup : this.env.currentForm;\n    }\n\n    set formGroup (value: FormGroup)\n    {\n        this._formGroup = value;\n    }\n\n    /**\n     * Indicates if we can pass field type as a binding to the components. e.g. InputField need\n     * such type to correctly render input type=text, number\n     *\n     * todo: is this needed? can we maybe pass this to the formRow?\n     */\n    canSetType (): boolean\n    {\n        return false;\n    }\n\n\n    writeValue (value: any)\n    {\n\n    }\n\n    registerOnChange (fn: any)\n    {\n        this.onModelChanged = fn;\n    }\n\n    registerOnTouched (fn: any)\n    {\n        this.onModelTouched = fn;\n    }\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, forwardRef, Inject, Input, Optional, SkipSelf} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {Environment} from '@aribaui/core';\n\n\n/**\n * Simple component rendering values in the read only mode. Just needed some component used\n * to render Strings in read only mode\n *\n *\n *  ### Example\n *\n * Using it inside form container along with label\n *\n *\n *  ```\n *          @Component({\n *              selector: 'userInfo' ,\n *              template: `\n *                      <aw-form-table [editable]=\"false\" >\n *                          <aw-form-row [name]=\"fieldName\"  [label]=\"label\">\n *                                 <aw-string [value]=\"inputValue\" ></aw-string>\n *                           </aw-form-row>\n *                      </aw-form-table>\n *\n *                  `\n *          })\n *          export class UserProfileComponent\n *          {\n *              inputValue: string = 'Some text';\n *              inputType: string = 'string';\n *              fieldName: string = 'firstName';\n *              label: string = 'My Name';\n *              required: boolean = true;\n *              editing: boolean = true;\n *              labelsOnTop: boolean = false;\n *\n *          }\n *\n *  ```\n *\n * You can also pass html tags.\n *\n */\n@Component({\n    selector: 'aw-string',\n    template: `\n        <span class=\"w-string-field\" [innerHTML]=\"value\"></span>\n    `,\n    styles: [`.w-string-field{display:inline-block}`]\n})\nexport class StringComponent extends BaseFormComponent\n{\n    /**\n     *  Value to be interpolated\n     *\n     */\n    private _value: string = '';\n\n\n    constructor(public env: Environment, private sanitizer: DomSanitizer,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n\n    }\n\n\n    @Input()\n    set value(value: any)\n    {\n        this._value = value;\n    }\n\n    get value(): any\n    {\n        return this.sanitizer.bypassSecurityTrustHtml(this._value);\n    }\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Injectable} from '@angular/core';\nimport {Environment, isStringMap} from '@aribaui/core';\n\n\n/**\n * A class holding a references to components. The methods are self-explanatory.\n *\n */\n@Injectable()\nexport class ComponentRegistry\n{\n    private _nameToType: Map<string, any> = new Map<string, any>();\n\n    constructor(private env: Environment)\n    {\n    }\n\n\n    initialize(references: any): Promise<any>\n    {\n        this.registerTypes(references);\n        let promise: Promise<any> = new Promise((resolve: any) =>\n        {\n            resolve(true);\n        });\n        return promise;\n\n    }\n\n\n    registerType(name: string, type: any): void\n    {\n        if (!this.nameToType.has(name)) {\n            this._nameToType.set(name, type);\n        }\n    }\n\n\n    registerTypes(references: any): void\n    {\n        if (!isStringMap(references)) {\n            return;\n        }\n\n        Object.keys(references).forEach((name: string) =>\n        {\n            this.registerType(name, references[name]);\n        });\n    }\n\n\n    get nameToType(): Map<string, any>\n    {\n        return this._nameToType;\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewContainerRef\n} from '@angular/core';\nimport {assert, isBlank, isPresent, MapWrapper} from '@aribaui/core';\nimport {StringComponent} from '../widgets/string/string.component';\nimport {ComponentReference} from './component-reference';\nimport {ComponentRegistry} from './component-registry.service';\n\n/**\n * this is specific import to we can use components as components[typename] and  get back a\n * type.\n * I could not find any better dynamic way up to now\n */\n/**\n *  `IncludeComponent` directive dynamically instantiate and insert a components into the screen\n * based on the name. It can accepts bindings as well which will be automatically bound and applied\n * to the component\n *\n *  ### usage:\n *\n *  Instead of inserting component in the way:\n *\n *  ```\n *    <textfield value=\"some value\">\n *\n *  ```\n *\n *  you can do so dynamically like this:\n *\n * ```\n *  <aw-include-component 'TextfieldComponent' [bindings]=bindings ></aw-include-component>\n * ```\n *\n * This is the main building block to dynamically generated UI.\n *\n *\n * Todo: Currently the way Angular API work and we use it to create programatically components\n * is too complext we need to create everything 3 different calls to place a component to the\n * container. What I want is is to create some kind of representation of ContainerElement and this\n * can be also parent for our BaseComponent with method add and remove content. Then we could have\n * some AWContent.\n *\n * e.g.: to replace applyContentElementIfAny where we have several calls to create and add\n * component to the view.\n *\n * ```ts\n *  let containerElement = AWConcreteTemplate(viewContainer, factoryResolver)\n *  containerElement.add('Clck Me')\n * ```\n *\n * To assemble different components together - not only adding string content\n *\n * ```ts\n *  let content = new AWContent(ButtonComponent, bindingsMap)\n *  content.add('Click Me');\n *  containerElement.add(content)\n *\n * ```\n *\n * add more component hierarchy:\n *\n * ```ts\n *  let content = new AWContent(HoverCardComponnets, bindingsMap)\n *  content.add(createLayout();\n *  containerElement.add(content)\n *\n * ```\n *\n *\n *\n *\n */\n@Directive({\n    selector: 'aw-include-component'\n})\nexport class IncludeComponentDirective implements OnDestroy, OnInit, AfterViewChecked,\n    OnChanges, AfterViewInit, AfterContentInit\n{\n\n    static readonly NgContent = 'ngcontent';\n    static readonly NgContentElement = 'ngcontentElement';\n\n    /**\n     * Full component name e.g.: DropdownComponent which is going to be inserted. We need to take\n     * this name and translate it into actual TYPE. In order to do this we use a trick where we\n     * access an IMPORTED components.\n     *\n     * ```\n     * import * as components from '../components';\n     * ```\n     *\n     * Then you can retrieve a type by just components[<String Literal >] => Component TYPE\n     *\n     */\n    @Input()\n    protected name: string;\n\n    /**\n     * Provides bindings which will be passed into the component when instantiated\n     */\n    @Input()\n    protected bindings: Map<string, any>;\n\n    /**\n     * Current created component reference using ComponentFactoryResolver. We use this to access\n     * the actual component instance and Element Reference\n     */\n    protected currentComponent: ComponentRef<any>;\n\n    /**\n     * I use this flag to identify that component is rendering for first time or its updated during\n     * change detection\n     *\n     */\n    protected initRenderInProgress = false;\n\n    /**\n     * Not sure if we need this, but want to keep it here or maybe move it to some service so we\n     * can cache created components and maybe reuse them.\n     *\n     */\n    protected componentReferences: Map<string, ComponentReference> =\n        new Map<string, ComponentReference>();\n\n\n    /**\n     * Need to cache the resolved component reference so we dont call ComponentFactoryResolver\n     * everything we want to refresh a screen\n     */\n    resolvedComponentRef: ComponentReference;\n\n\n    constructor(public viewContainer: ViewContainerRef,\n                public factoryResolver: ComponentFactoryResolver,\n                public cd: ChangeDetectorRef,\n                public compRegistry: ComponentRegistry)\n    {\n\n        this.bindings = new Map<string, any>();\n    }\n\n    ngOnInit(): void\n    {\n\n        this.initRenderInProgress = true;\n        // todo: check if this the right lifecycle callback, this is called only once and you want\n        // to probably listen for changes, and change dection decide there is some change and we\n        // need to re-draw the view\n        this.viewContainer.clear();\n        this.doRenderComponent();\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        if (isPresent(changes['name']) &&\n            (changes['name'].currentValue !== changes['name'].previousValue)) {\n            this.viewContainer.clear();\n            this.doRenderComponent();\n        }\n    }\n\n\n    ngAfterViewChecked(): void\n    {\n        this.initRenderInProgress = false;\n    }\n\n\n    ngAfterViewInit(): void\n    {\n        // check to see if we need to render and reposition DOM element both for wrapper and\n        // content\n        this.createWrapperElementIfAny();\n        this.createContentElementIfAny();\n    }\n\n\n    ngAfterContentInit(): void\n    {\n    }\n\n    /**\n     * Handles a case where we need to resolve additional component and wrap the current one.\n     * Just like reateContentElementIfAny() this method needs to be executed after all\n     * is created and initialized (inside the ngAfterViewInit() )\n     *\n     */\n    protected createWrapperElementIfAny(): void\n    {\n    }\n\n    /**\n     * Renders a component into actual View Container. The process goes as this.\n     *  1. We retrieve component Type based on the component name, which creates componentRef\n     *  2. Place the component onto the screen\n     *  3. Read component metadata, mainly INPUTs and apply bindings for each of them\n     *  4. Manually spin change detection to update the screen. Mainly for case where I need to\n     * redraw a screen\n     */\n    protected doRenderComponent(): void\n    {\n        this.placeTheComponent();\n        // this.currentComponent.changeDetectorRef.detach();\n\n        this.applyBindings(this.componentReference(), this.currentComponent, this.bindings);\n        // this.currentComponent.changeDetectorRef.detectChanges();\n\n        // Still not sure about this what all I should release here.\n        this.currentComponent.onDestroy(() =>\n        {\n            // this.bindings.clear();\n            // this.bindings = undefined;\n            //\n            // this.componentReferences.clear();\n            // this.componentReferences = undefined;\n\n            this.destroy();\n        });\n    }\n\n\n    /**\n     * Place actual component onto the screen using ViewContainerRef\n     *\n     */\n    protected placeTheComponent(): void\n    {\n        let reference = this.componentReference();\n        this.currentComponent = this.viewContainer.createComponent(reference.resolvedCompFactory);\n    }\n\n\n    /**\n     * When inserting Component that needs to have a content like e.g. hyperlink or button\n     *\n     * ```\n     *   <button> MY NG CONTENT </button>\n     *\n     * ```\n     *  this method applies and insert a child content into the main component. This method insert\n     * a simple string. We are not wrapping existing component with another component here.\n     *\n     * @return need to run detect changes ? default is false\n     */\n    protected createContentElementIfAny(): boolean\n    {\n\n        let detectChanges = false;\n        let ngContent = this.ngContent();\n        let ngContentElement = this.ngContentElement();\n        if (isPresent(ngContent)) {\n            let awContentComponent = this.factoryResolver.resolveComponentFactory(StringComponent);\n            let component = this.viewContainer.createComponent(awContentComponent, 0);\n\n            (<StringComponent>component.instance).value = ngContent;\n            let awContentContainer = this.currentComponent.location.nativeElement.firstChild;\n            awContentContainer.appendChild(component.location.nativeElement);\n\n            detectChanges = true;\n        } else if (isPresent(ngContentElement)) {\n            // console.log('content Element: ', ngContentElement);\n        }\n\n        return detectChanges;\n    }\n\n\n    /**\n     *\n     * Retrieve a NG Content from binding list and remove it so it its not prepagated down when\n     * applying other bindings.\n     *\n     */\n    protected ngContent(): string\n    {\n        let content: any;\n        if (isPresent(content = this.bindings.get(IncludeComponentDirective.NgContent))) {\n            this.bindings.delete(IncludeComponentDirective.NgContent);\n        }\n        return content;\n    }\n\n\n    protected ngContentElement(): string\n    {\n        let content: any;\n        if (isPresent(content = this.bindings.get(IncludeComponentDirective.NgContentElement))) {\n            this.bindings.delete(IncludeComponentDirective.NgContentElement);\n        }\n        return content;\n    }\n\n    /**\n     * We need to convert a component name to actual a type and then use ComponentFactoryResolver\n     * to instantiate a a component and save its information into our component references. The\n     * reason why we have this component reference is we need to store Angular's component metadata\n     * so we can iterate thru all the inputs and bind them to the context.\n     *\n     * returns {ComponentReference} a reference representing a compoent currently being rendered\n     */\n    protected componentReference(): ComponentReference\n    {\n        if (isPresent(this.resolvedComponentRef)) {\n            return this.resolvedComponentRef;\n        }\n        let currType = this.resolveComponentType();\n        let componentFactory: ComponentFactory<any> = this.factoryResolver\n            .resolveComponentFactory(currType);\n\n        let componentMeta: Component = this.resolveDirective(componentFactory);\n        let compReference: ComponentReference = {\n            metadata: componentMeta,\n            resolvedCompFactory: componentFactory,\n            componentType: currType,\n            componentName: this.name\n        };\n\n        this.resolvedComponentRef = compReference;\n        return compReference;\n    }\n\n    /**\n     * Iterates thru ComponentMetadata @Inputs() and check if we have available binding inside the\n     * 'this.bindings'\n     */\n    protected applyBindings(cRef: ComponentReference,\n                            component: ComponentRef<any>,\n                            bindings: Map<string, any>): void\n    {\n        let inputs: string[] = cRef.metadata.inputs;\n\n        if (isBlank(inputs) || inputs.length === 0) {\n            return;\n        }\n        // should we do any type conversion?\n        MapWrapper.iterable(bindings).forEach((v, k) =>\n        {\n\n            if (isPresent(component.instance[k])) {\n                component.instance[k] = v;\n            }\n        });\n    }\n\n\n    /**\n     * Resolves a component Type based on the string literal\n     *\n     * @returns component type used by `ComponentFactoryResolver`\n     *\n     * todo: rename the method so its clear that it returns component type based on string.\n     */\n    protected resolveComponentType(): any\n    {\n        let componentType = this.compRegistry.nameToType.get(this.name);\n\n        if (isBlank(componentType)) {\n            assert(false, this.name + ' component does not exists. Create Dummy Component instead' +\n                ' of throwing this error');\n            return;\n        }\n        return componentType;\n    }\n\n\n    protected resolveDirective(compFactory: ComponentFactory<any>): Component\n    {\n        let compMeta: Component = {\n            inputs: [],\n            outputs: []\n        };\n\n        if (isPresent(compFactory.inputs) && compFactory.inputs.length > 0) {\n\n            compFactory.inputs.forEach((input: {propName: string, templateName: string}) =>\n            {\n                compMeta.inputs.push(input.propName);\n            });\n        }\n\n        if (isPresent(compFactory.outputs) && compFactory.outputs.length > 0) {\n\n            compFactory.outputs.forEach((output: {propName: string, templateName: string}) =>\n            {\n                compMeta.outputs.push(output.propName);\n            });\n        }\n        return compMeta;\n    }\n\n\n    ngOnDestroy(): void\n    {\n        if (isPresent(this.currentComponent)) {\n            this.currentComponent.destroy();\n            this.currentComponent = undefined;\n        }\n\n        if (isPresent(this.viewContainer)) {\n            this.viewContainer.clear();\n        }\n\n    }\n\n    private destroy(): void\n    {\n        if (isPresent(this.currentComponent)) {\n            this.currentComponent = null;\n            this.resolvedComponentRef = null;\n        }\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Injectable} from '@angular/core';\nimport {StringWrapper} from '@aribaui/core';\n\n/**\n * Error Manager is a service used by Forms components to map error codes into meaningful messages.\n * Currently it does not have much but once we plug in localization it will make more sense\n *\n *\n * todo: Once ng-translate is implemented replace this with ng-translate functionality so we can\n * externalize these messages into locale files.\n *\n */\n@Injectable()\nexport class ErrorManagerService\n{\n    messages: {[key: string]: any};\n\n    constructor()\n    {\n        this.messages = {\n            'required': 'Required field',\n            'minlength': 'Field does not meet minimum length',\n            'maxlength': 'Field does not meet maximum length',\n            'customMsg': '%s',\n            'metavalid': '%s'\n        };\n    }\n\n\n    errorMessage(validatorName: string, validatorValue?: any)\n    {\n        let message = this.messages[validatorName];\n        if (StringWrapper.contains(message, '%s')) {\n            // todo: use ng-translate with proper message formatting\n\n            return StringWrapper.replace(message, '%s', validatorValue.msg);\n        }\n        return message;\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, Input, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {isPresent} from '@aribaui/core';\nimport {ErrorManagerService} from '../../core/error-manager.service';\n\n/**\n * ErrorMessagesComponent is used by form's component like FormRow to print its validation errors.\n * Its  based on ModelDriven (Reactive forms) and it reads errors from FormControl\n *\n *\n *\n */\n@Component({\n    selector: 'a-error-messages',\n    template: `\n            <div class=\"ui-g\">\n                    <small *ngIf=\"hasMessage()\"\n                        class=\"ui-g-12 ui-message ui-messages-error ui-corner-all\">\n                        {{ errorMsg }}\n                    </small>\n            </div>\n    `,\n    styles: [``]\n})\nexport class ErrorMessagesComponent implements OnInit\n{\n\n    /**\n     * Current form FormControll to check for Errors\n     */\n    @Input()\n    control: FormControl;\n\n\n    constructor(private errManager: ErrorManagerService)\n    {\n    }\n\n    ngOnInit()\n    {\n\n    }\n\n\n    hasMessage(): boolean\n    {\n        let msg = this.errorMsg;\n        return isPresent(msg);\n    }\n\n    /**\n     * Retrieve a messages if any registered by added validators\n     *\n     */\n    get errorMsg(): string\n    {\n        for (let propertyName in this.control.errors) {\n            if (this.control.errors.hasOwnProperty(propertyName) && this.control.touched) {\n                return this.errManager.errorMessage(propertyName,\n                    this.control.errors[propertyName]);\n            }\n        }\n    }\n\n    /**\n     *\n     * Show errors? We currently shows errors if the control is not valid, it was touched by user.\n     * Most of the type on blur event  and at last its not pristine anymore (its dirty)\n     *\n     */\n    showErrors(): boolean\n    {\n        return !this.control.valid && !this.control.pristine && this.control.touched;\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Injectable,\n    Type,\n    ViewContainerRef\n} from '@angular/core';\n\n/**\n * Modal service is used to to create modal dialogs. It creates modal dialogs dynamically.\n * The service also keeps track of the created modal dialog and can close it by calling the\n * service's close()\n *\n * Modal service requires a ViewContainer to insert newly created modals. This is taken care\n * by the ModalComponent.\n *\n * Usage:\n *     Add   <aw-modal></aw-modal>  into your application main html. It needs to be on every\n *     page where a modal dialog will appear.\n *\n *    1.  Popup a dialog without creating your own component.\n *        Use the existing DialogComponent in widgets.\n *\n *             this.modalService.open<DialogComponent>(DialogComponent, {\n *                     title: 'My Popup Title',\n *                     body: 'My Popup Body'\n *              });\n *\n *\n *   2.   Creating your own Dialog Component to popup.\n *\n *         let componentRef = this.modalService.open<MyDialogComponent>(MyDialogComponent,\n * {inputs});\n *\n *          @Component({\n *                selector: 'aw-mydialog' ,\n *                           template: `\n *                                         <aw-dialog (onClose)=\"closePopup()\">\n *                                              <ng-template #titleTemplate>\n *                                                 <span><i class=\"fa fa-envira\" ></i>This is my\n *     Title </span>\n *                                              </ng-template>\n *                                              <ng-template #bodyTemplate>\n *                                                 <span><i class=\"fa fa-envira\" ></i>This is my\n *     Body </span>\n *                                              </ng-template>\n *                                        </aw-dialog>\n *                                     `\n *         })\n *         export class MyDialogComponent extends DialogComponent implements OnInit {\n *                     constructor(private modalService: ModalService) {\n *                          super();\n *                       }\n *                     ngOnInit() { }\n *\n *                     closePopup() {\n *                            this.modalService.close();\n *                      }\n *         }\n */\n@Injectable()\nexport class ModalService\n{\n    /**\n     * This is a static list of output parameter from Dialog, Confirmation components\n     * that needs to be handled.\n     *\n     */\n    private static OUTPUT_PARAMETERS: string[] = ['onClose', 'onConfirm', 'onCancel'];\n\n\n    /**\n     * Container for the newly created modal. This is passed in through the\n     * registerViewContainerRef().\n     */\n    private vcRef: ViewContainerRef;\n\n    /**\n     * Storing the created modal instance.\n     */\n    private instance: any;\n\n    /**\n     * DI ComponentFactoryResolver to be used to create modal component.\n     *\n     * @param cfr\n     */\n    constructor(private cfr: ComponentFactoryResolver)\n    {\n    }\n\n    /**\n     *  PlaceHolder for modal to be inserted.\n     *\n     * @param vcRef\n     */\n    registerViewContainerRef(vcRef: ViewContainerRef): void\n    {\n        this.vcRef = vcRef;\n    }\n\n    /**\n     * Opens the modal dialog by dynamically creating the component and adding it to vcRef.\n     *\n     */\n    open<T>(component: Type<T>, parameters?: any): ComponentRef<T>\n    {\n        const cf: ComponentFactory<T> = this.cfr.resolveComponentFactory(component);\n        let componentRef: ComponentRef<T> = this.vcRef.createComponent(cf);\n\n        // Auto set visiblity to true. So that the Dialog will display\n        parameters = (parameters) ? parameters : {};\n        parameters['visible'] = true;\n\n        // Handle output parameters.\n        ModalService.OUTPUT_PARAMETERS.forEach((param) =>\n        {\n            if (parameters[param]) {\n                (<any>componentRef.instance)[param].subscribe(parameters[param]);\n                delete parameters[param];\n            }\n        });\n\n        Object.assign(componentRef.instance, parameters);\n\n        // had to cast it in order to avoid any index Error\n        // Attach a destroy method to the newly created component.\n        (<any>componentRef.instance)['destroy'] = () =>\n        {\n            componentRef.destroy();\n        };\n        // Save the instance, so it can be destroyed later.\n        this.instance = componentRef;\n\n        return componentRef;\n    }\n\n    /**\n     * Calling close() will remove the modal from view.\n     */\n    close()\n    {\n        if (this.instance) {\n            this.instance.destroy();\n            this.instance = null;\n        }\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, OnInit, ViewChild, ViewContainerRef} from '@angular/core';\nimport {ModalService} from '../modal.service';\n\n\n/**\n * Place holder for all modal dialogs. This component works with the modalService by providing\n * a place holder for it to inject Dialog component into.\n */\n@Component({\n    selector: 'aw-modal',\n    template: `<div #modal></div>\n`,\n    styles: [``]\n})\nexport class ModalComponent implements OnInit\n{\n\n    @ViewChild('modal', {read: ViewContainerRef})\n    viewContainerRef: ViewContainerRef;\n\n    constructor(private modalService: ModalService)\n    {\n    }\n\n    ngOnInit()\n    {\n        this.modalService.registerViewContainerRef(this.viewContainerRef);\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {CurrencyPipe} from '@angular/common';\nimport {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * This currency formatter will ignore null and empty string for value.\n * Issue : https://github.com/angular/angular/issues/8694  DI fails when extends other classes\n */\n@Pipe({\n    name: 'currencyFormat',\n    pure: false\n})\nexport class CurrencyFormatPipe implements PipeTransform\n{\n\n    constructor(private currencyPipe: CurrencyPipe)\n    {\n    }\n\n    transform(value: string, ...args: any[]): any\n    {\n\n        // Default values\n        let currencyCode = 'USD', symbolDisplay = true, digits = '1.0-2';\n\n        if (!value || value.length === 0) {\n            return value;\n        }\n\n        if (args && args.length > 0) {\n            let code = args[0];\n            if (code && code.length > 0) {\n                currencyCode = code;\n            }\n        }\n\n        return this.currencyPipe.transform(value, currencyCode, symbolDisplay, digits);\n    }\n}\n\n","/**\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n */\nimport {Directive, EventEmitter, Output} from '@angular/core';\n\n\n/**\n * Simple utility directive that is used by NG For cycle in situation where we need to call a\n * or execute some logic after each iteration\n */\n@Directive({\n    selector: '[ngForSet]'\n})\nexport class NgForSetDirective\n{\n\n    @Output()\n    onItem: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor()\n    {\n    }\n\n    ngOnInit()\n    {\n        this.onItem.emit('--');\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Injectable} from '@angular/core';\nimport {isPresent} from '@aribaui/core';\n\n\n/**\n * Simple convenient service to work with the dom. All the future logic related to DOM manipulation\n * or traversal should be put into this service\n *\n */\n@Injectable()\nexport class DomUtilsService\n{\n\n    constructor ()\n    {\n    }\n\n    /**\n     * goes all the way up to the body and checks if there is a element identified by a 'selector'\n     *\n     */\n    hasParent (nativeElement: any, selector: string): boolean\n    {\n        return isPresent(this.closest(nativeElement, selector));\n    }\n\n\n    /**\n     *  Travels all the way up to the BODY and retrieve element identified by 'selector' or NULL if\n     * not found\n     *\n     */\n    closest (nativeElement: any, selector: string): any\n    {\n        let firstChar = selector.charAt(0);\n\n        let parentNode = nativeElement;\n\n\n        while (isPresent((parentNode = parentNode.parentNode))) {\n            if (firstChar === '.' && parentNode.classList.contains(selector.substr(1))) {\n                return parentNode;\n            }\n\n            if (firstChar === '#' && parentNode.id === selector.substr(1)) {\n                return parentNode;\n            }\n\n            // If selector is a tag\n            if (parentNode.nodeType === 1 && parentNode.tagName.toLowerCase() === selector) {\n                return parentNode;\n            }\n\n            if (parentNode.nodeType === 1 && parentNode.tagName === 'BODY') {\n                return null;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * When angular component is rendered along with NGContent it has its own _ngContent_INDEX\n     * which always corresponds with _nghost_INDEX, this works fine if we have actual component\n     * that is already rendered. If we are creating component programatically there is no way to\n     * identify where the actual ng-content is placed within the component\n     *\n     * e.g. Consider following example:\n     *\n     *\n     * Button Component Template:\n     *\n     * ```\n     *  <span class=mybuttonTitle><ng-content></ng-content></span>\n     * ```\n     *\n     * When you use button component as <aw-button>ClickMe</aw-button>  then its rendered as\n     *\n     * ```\n     * <aw-button _nghost_123>\n     *  <span _ngcontent_123 class=mybuttonTitle>ClickMe</span>\n     * </aw-button>\n     * ```\n     *\n     * But with programmatic API you instantiate Button and since it created without a Content it\n     * looks like this;\n     *\n     *  ```\n     * <aw-button _nghost_123>\n     *  <span class=mybuttonTitle></span>\n     * </aw-button>\n     * ```\n     *\n     * Where do you place you child (content component)? Therefore utility css class was created\n     * to wrap <ng-content> to get around this limitation.\n     *\n     *  ```\n     *   <span class=\"u-ngcontent\">\n     *      <ng-content></ng-content>\n     *   </span>\n     *  ````\n     *\n     *\n     *\n     *\n     */\n    insertIntoParentNgContent (parentNativeEl: any, childNativeEl: any): void\n    {\n        // default behavior is to insert it as child to parentNativeEl\n        let ngContentParent = parentNativeEl;\n\n        let foundNgContent = parentNativeEl.querySelector('.u-ngcontent');\n        if (isPresent(foundNgContent)) {\n            // we don't cover a case where there could be multiple ngcontents\n            ngContentParent = foundNgContent;\n        }\n        ngContentParent.appendChild(childNativeEl);\n\n    }\n\n\n    /**\n     *\n     * Retrieves current browser window width and height\n     *\n     */\n    browserDimentions (): any\n    {\n        return {\n            width: (window.innerWidth || document.documentElement.clientWidth\n                || document.body.clientWidth),\n            height: (window.innerHeight || document.documentElement.clientHeight\n                || document.body.clientHeight)\n        };\n    }\n\n\n    /**\n     *\n     * Retrieves elemements dimensions\n     *\n     */\n    elementDimensions (element: any): any\n    {\n        if (isPresent(element.getBoundingClientRect)) {\n            return element.getBoundingClientRect();\n        }\n        return {left: 0, top: 0, right: 0, bottom: 0, x: 0, y: 0, width: 0, height: 0};\n    }\n}\n\n","/**\n *\n * Under @original-license\n *\n * Copyright 2015-present Drifty Co.\n * http://drifty.com/\n *\n *  MIT License\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n *\n * Credit to drifty for this excellent component. We have a strong needs for good infinite\n * scrolling component so this is derived work based on this drifty component as we can not really\n * bring in whole framework and their component/API. It would be too heavy\n *\n * Component is updated with native DOM API. plus simplified by removing things\n * that are not necessary for our usecase. Updated directive prefix to match our guidelines\n *\n *\n *\n */\n\n\nimport {\n    AfterContentInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone, OnInit,\n    Output,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\nimport {isPresent} from '@aribaui/core';\nimport {DomUtilsService} from '../../core/dom-utils.service';\n\n/**\n * The Infinite Scroll allows you to perform an action when the user\n * scrolls a specified distance from the bottom or top of the page.\n *\n * The expression assigned to the `infinite` event is called when\n * the user scrolls to the specified distance. When this expression\n * has finished its tasks, it should call the `complete()` method\n * on the infinite scroll instance.\n *\n * ## Usage\n *\n * ```html\n *\n *  <div  *ngFor=\"let item of items\">{{item}} </div>\n *   <aw-infinite-scroll (onLoad)=\"doInfinite($event)\">\n *  </aw-infinite-scroll>\n *\n * ```\n *\n *\n * You can also set a threshold to change the distance when the lazy load kicks\n * in.\n * ## Usage\n *\n * ```html\n *\n *  <div  *ngFor=\"let item of items\">{{item}} </div>\n *   <aw-infinite-scroll (onLoad)=\"doInfinite($event)\"  [distance]=\"'15%'\">\n *  </aw-infinite-scroll>\n *\n * ```\n */\n@Component({\n    selector: 'aw-infinite-scroll',\n    template: `<div class=\"w-infinite-loader-panel\" *ngIf=\"isLoading()\">\n    <span class=\"sap-icon icon-synchronize u-spin-icon\"></span>\n</div>\n`,\n    styles: [`.w-infinite-loader-panel{display:flex;align-items:center;justify-content:center;background-color:#fff;width:100%;height:100px;z-index:300;bottom:100px}.w-infinite-loader-panel span{color:#4a4a4a;font-size:2em}`],\n})\nexport class InfiniteScrollComponent implements OnInit, AfterContentInit\n{\n    _lastCheck: number = 0;\n    _lastScrollTop: number = 0;\n    _scLsn: any;\n    _thr: string = '10%';\n    _thrPx: number = 0;\n    _thrPc: number = 0.10;\n    _init: boolean = false;\n\n    _content: any;\n    _docBody: any;\n\n    /**\n     * @internal\n     */\n    state: string = STATE_ENABLED;\n\n    /**\n     * @input {string} The threshold distance from the bottom\n     * of the content to call the `onLoad` output event when scrolled.\n     * The threshold value can be either a percent, or\n     * in pixels. For example, use the value of `10%` for the `infinite`\n     * output event to get called when the user has scrolled 10%\n     * from the bottom of the page. Use the value `100px` when the\n     * scroll is within 100 pixels from the bottom of the page.\n     * Default is `15%`.\n     */\n    @Input()\n    get distance (): string\n    {\n        return this._thr;\n    }\n\n    set distance (val: string)\n    {\n        this._thr = val;\n        if (val.indexOf('%') > -1) {\n            this._thrPx = 0;\n            this._thrPc = (parseFloat(val) / 100);\n\n        } else {\n            this._thrPx = parseFloat(val);\n            this._thrPc = 0;\n        }\n    }\n\n    /**\n     * @input {boolean} If true, Whether or not the infinite scroll should be\n     * enabled or not. Setting to `false` will remove scroll event listeners\n     * and hide the display.\n     */\n    @Input()\n    set enabled (shouldEnable: boolean)\n    {\n        this.enable(shouldEnable);\n    }\n\n\n    /**\n     * @output {event} Emitted when the scroll reaches\n     * the threshold distance. From within your infinite handler,\n     * you must call the infinite scroll's `complete()` method when\n     * your async operation has completed.\n     */\n    @Output()\n    onLoad: EventEmitter<any> = new EventEmitter<any>();\n\n\n    @ViewChild('loadinPanel')\n    loadPanel: ElementRef;\n\n\n    /**\n     *\n     * Lazy load current numbers. tell the app starting point and what is the size of loaded\n     * list\n     *\n     */\n    @Input()\n    fetchSize: number = 0;\n\n    loadOffset: number = 0;\n\n\n    constructor (private _render: Renderer2, private _zone: NgZone,\n                 private domUtils: DomUtilsService,\n                 private _cd: ChangeDetectorRef)\n    {\n\n\n    }\n\n\n    ngOnInit (): void\n    {\n        this._render.addClass(document.body, 'has-infinite-scroll');\n\n    }\n\n    _onScroll (ev: any): void\n    {\n        if (this.state === STATE_LOADING || this.state === STATE_DISABLED) {\n            return;\n        }\n\n        // must throttle the class by 100ms\n        if (this._lastCheck + 100 > ev.timeStamp) {\n            // no need to check less than every XXms\n            return;\n        }\n\n        this._lastCheck = ev.timeStamp;\n        let scrollTop = this.scrollTop();\n\n        let winHeight = this.domUtils.browserDimentions().height;\n        const height = Math.max(this._docBody.scrollHeight, this._docBody.offsetHeight,\n            winHeight, this._content.scrollHeight, this._content.offsetHeight);\n\n        if (!height) {\n            // if there is no height of this element then do nothing\n            return;\n        }\n        const threshold = this._thrPc ? (height * this._thrPc) : this._thrPx;\n        let distanceFromInfinite = this._content.scrollHeight - winHeight - scrollTop - threshold;\n\n        // console.log('Document height (' + height + ') , Distance from bottom '\n        // + distanceFromInfinite + ',  => threshold = ' +\n        //     this.distance + ' (' + threshold + ')');\n\n        if (distanceFromInfinite < 0 && this._lastScrollTop < scrollTop) {\n            this.fireOnLazyLoad();\n\n        } else if (this._lastScrollTop > scrollTop && scrollTop < winHeight\n            && this.loadOffset !== this.fetchSize) {\n            this.fireOnLazyUnLoad();\n        }\n        this._lastScrollTop = scrollTop;\n        return;\n    }\n\n    /**\n     * Todo: refactor to one method\n     */\n    private fireOnLazyLoad ()\n    {\n        this._zone.run(() =>\n        {\n            if (this.state !== STATE_LOADING && this.state !== STATE_DISABLED) {\n                this.state = STATE_LOADING;\n\n                this.onLoad.emit({\n                    isLoad: true,\n                    limit: this.fetchSize,\n                    offset: this.loadOffset\n                });\n                // start on the next record\n                this.loadOffset += this.fetchSize;\n            }\n        });\n    }\n\n\n    private fireOnLazyUnLoad ()\n    {\n        this._zone.run(() =>\n        {\n            if (this.state !== STATE_LOADING && this.state !== STATE_DISABLED) {\n                this.state = STATE_LOADING;\n\n                // start on the next record\n                this.loadOffset = this.fetchSize;\n\n                this.onLoad.emit({\n                    isLoad: false,\n                    limit: this.fetchSize,\n                    offset: this.loadOffset\n                });\n            }\n        });\n    }\n\n\n    private scrollTop (): number\n    {\n        return (window.pageYOffset || this._content.scrollTop);\n    }\n\n    /**\n     * Call `complete()` within the `infinite` output event handler when\n     * your async operation has completed. For example, the `loading`\n     * state is while the app is performing an asynchronous operation,\n     * such as receiving more data from an AJAX request to add more items\n     * to a data list. Once the data has been received and UI updated, you\n     * then call this method to signify that the loading has completed.\n     * This method will change the infinite scroll's state from `loading`\n     * to `enabled`.\n     */\n    complete ()\n    {\n        if (this.state !== STATE_LOADING) {\n            return;\n        }\n\n        setTimeout(() =>\n        {\n            this.state = STATE_ENABLED;\n\n            // need to trigger extra detect changes to rerender loading icon\n            this._cd.detectChanges();\n        }, 100);\n    }\n\n\n    /**\n     * Call `enable(false)` to disable the infinite scroll from actively\n     * trying to receive new data while scrolling. This method is useful\n     * when it is known that there is no more data that can be added, and\n     * the infinite scroll is no longer needed.\n     * @param shouldEnable  If the infinite scroll should be\n     * enabled or not. Setting to `false` will remove scroll event listeners\n     * and hide the display.\n     */\n    enable (shouldEnable: boolean)\n    {\n        this.state = (shouldEnable ? STATE_ENABLED : STATE_DISABLED);\n        this._setListeners(shouldEnable);\n    }\n\n    /**\n     * Subscribes to native windows scroll event\n     */\n    _setListeners (shouldListen: boolean)\n    {\n        if (this._init) {\n            if (shouldListen) {\n                if (!this._scLsn) {\n                    this._zone.runOutsideAngular(() =>\n                    {\n                        this._scLsn = this._onScroll.bind(this);\n                        window.addEventListener('scroll', this._scLsn);\n                    });\n                }\n            } else {\n\n                if (isPresent(this._scLsn)) {\n                    window.removeEventListener('scroll', this._scLsn);\n                    this._scLsn = null;\n                }\n            }\n        }\n    }\n\n\n    isLoading (): boolean\n    {\n        return this.state === STATE_LOADING;\n    }\n\n    ngAfterContentInit ()\n    {\n        this._init = true;\n        this._docBody = document.body;\n        this._content = document.documentElement;\n\n        this._setListeners(this.state !== STATE_DISABLED);\n\n        if (this.loadOffset === 0) {\n            this.fireOnLazyLoad();\n        }\n    }\n\n    /**\n     * @hidden\n     */\n    ngOnDestroy ()\n    {\n        this._setListeners(false);\n    }\n\n}\n\n\nconst STATE_ENABLED = 'enabled';\nconst STATE_DISABLED = 'disabled';\nconst STATE_LOADING = 'loading';\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AwNameStore {\n\n    private store: Map<string, any>;\n\n    constructor() {\n        this.store = new Map();\n    }\n\n    add(name: string, el: any) {\n        if (this.collides(name)) {\n            throw new Error('Name is not unique!');\n        }\n        return this.store.set(name, el);\n    }\n\n    remove(name: string) {\n        return this.store.delete(name);\n    }\n\n    collides(name: string): boolean {\n        return this.store.has(name);\n    }\n\n    clear() {\n        this.store.clear();\n    }\n\n}\n","import {\n    ElementRef,\n    Input,\n    OnInit,\n    Directive,\n    OnDestroy\n} from '@angular/core';\nimport {\n    AppConfig\n} from '@aribaui/core';\n\nimport {\n    AwNameStore\n} from './aw-name.store';\n\n/**\n * The 'awName' directive attaches a identifier to decorated element to aid selectors for testing\n * purposes. The 'awName' directive tries to generate a unique identifier based on contextual data\n * and inherant immutable element attributes.\n *\n * **Generating the Base Name**\n *\n * The 'awName' directive generates a base name from element tag name and attributes which are\n * static by nature.\n *\n *     Example:\n *         <button name=\"order\" awName>\n *\n *     Result:\n *         <button name=\"order\" awname=\"button_order\">\n *\n * If the element has an 'id', that value takes precedent and is used instead of a generated\n * name.\n *\n *     Example:\n *         <button name=\"order\" id=\"myOrderButton\" awName>\n *\n *     Result:\n *         <button name=\"order\" id=\"myOrderButton\" awname=\"button_myOrderButton\">\n *\n *\n * **Repeated Elements and the 'ext' Parameter**\n *\n * There are many cases where elements are generated dynamically in the code as lists or tables.\n * In such cases, it may not be easy to distinguish individual elements by standard HTML\n * attributes, so the 'awName' directive allows custom extentions to the base name to be provided\n * using the 'ext' attribute.\n *\n *    Example:\n *        fruits = ['apple', 'banana', 'orange'];\n *\n *        <ul>\n *            <li *ngFor=\"let fruit of fruits\" awName ext=\"{{fruit}}\">{{fruit}}</li>\n *        </ul>\n *\n *   Result:\n *       <ul>\n *           <li awname=\"li_apple\">apple</li>\n *           <li awname=\"li_banana\">banana</li>\n *           <li awname=\"li_orane\">orange</li>\n *       </ul>\n *\n * **Adding Context Through Ancestor Inspection**\n *\n * In order to provide context to the element naming, the 'awName' directive loops through the\n * parent ancestry and searches for any unique element 'id' to prepend to the base name.\n *\n *     Example:\n *         <form id=\"applicant\">\n *            <input type=\"text\" name=\"firstName\" awName>\n *            <input type=\"text\" name=\"lastName\" awName>\n *         </form>\n *         <form id=\"spouse\">\n *            <input type=\"text\" name=\"firstName\" awName>\n *            <input type=\"text\" name=\"lastName\" awName>\n *         </form>\n *\n *     Result:\n *         <form id=\"applicant\">\n *            <input type=\"text\" name=\"firstName\" awname=\"applicant_input_firstName\">\n *            <input type=\"text\" name=\"lastName\" awname=\"applicant_input_lastName\">\n *         </form>\n *         <form id=\"spouse\">\n *            <input type=\"text\" name=\"firstName\" awname=\"spouse_input_firstName\">\n *            <input type=\"text\" name=\"lastName\" awname=\"spouse_input_lastname\">\n *         </form>\n *\n * **Uniqueness Check**\n *\n * 'awName' keeps track of the names it creates by adding them to a map store. Whenever it\n * creates a new name during the `ngOnInit` phase it checks it against the existing map,\n * and will throw an error if it encounters a duplicate. Moreover during the element destruction\n * phase, `ngOnDestroy`, 'awName' removes the generated name from the store.\n *\n *\n * **In Production**\n *\n * Using 'awName' adds a small bit of rendering overhead for each element it is used on. In\n * a production environment, 'awName' serves no functionality to the end user, but may have\n * a performance impact on the application. As such, 'awName' takes into account the\n * `AppConfig` settings and disables name generation when `AppConfig.isProductionMode()`\n * is `true`.\n *\n * In your application, you can turn on production mode by setting `devmode.enabled` to\n * `false` when configuring `AribaCoreModule`:\n *\n *     AribaCoreModule.forRoot({\n *         'devmode.enabled': false\n *     })\n *\n */\n@Directive({\n    selector: '[awName]',\n})\nexport class AwNameDirective implements OnInit, OnDestroy {\n\n    @Input() ext: string;\n\n    private name: string;\n\n    private separator: string = '_';\n\n    constructor(\n        private el: ElementRef,\n        private store: AwNameStore,\n        private config: AppConfig\n    ) {}\n\n    ngOnInit() {\n        if (!this.config.isProductionMode()) {\n            this.name = this.createName(this.el);\n            this.addElementToStore(this.name, this.el);\n            this.el.nativeElement.setAttribute('awname', this.name);\n        }\n    }\n\n    ngOnDestroy() {\n        this.store.remove(this.name);\n    }\n\n    /**\n     * Add element name/id and reference to map store. If name/id already\n     * exists in store then it throws an error.\n     *\n     */\n    addElementToStore(name: string, elem: ElementRef) {\n        try {\n            this.store.add(name, elem);\n        } catch (e) {\n            console.error(e.message + `. \"${name}\" is already in use.`, elem.nativeElement);\n            return;\n        }\n    }\n\n    /**\n     * Generate name/id for element.\n     *\n     * param elem Reference to element\n     * @return String Name/ID\n     */\n    createName(elem: ElementRef) {\n\n        const tagName = this.getTagName(elem);\n\n        // Initialize array of string parts\n        const parts = [];\n\n        // Find ancestor tag id, if there is one\n        const parentID = this.getAncestorId(elem);\n        if (parentID) {\n            parts.push(parentID);\n        }\n\n        // Check the tag type\n        if (tagName === 'option') {\n            const parentName = this.getParentName(elem);\n            if (parentName) {\n                parts.push(parentName);\n            }\n        }\n\n        // Get tagname\n        parts.push(tagName);\n\n        // Choose id property if it exists\n        if (elem.nativeElement.id) {\n            parts.push(elem.nativeElement.id);\n\n        // Otherwise build extension from tag properties\n        } else {\n            // check for a name attribute\n            if (elem.nativeElement.hasAttribute('name')) {\n                parts.push(elem.nativeElement.name);\n            }\n\n            // check for value attribute if 'option' tag\n            if (tagName === 'option') {\n                if (elem.nativeElement.hasAttribute('value')) {\n                    parts.push(this.spacesToUnderscore(elem.nativeElement.value));\n                }\n            }\n        }\n        // Add custom extension if it exists\n        if (this.ext) {\n            parts.push(this.spacesToUnderscore(this.ext));\n        }\n\n        return parts.join(this.separator);\n    }\n\n    /**\n     * Get tag name from element reference.\n     * @param elem Reference to element\n     */\n    getTagName(elem: ElementRef) {\n        return elem.nativeElement.tagName.toLowerCase();\n    }\n\n    /**\n     * Traverse element ancestry and return first id attribute\n     * encountered.\n     * @param elem Reference to element\n     */\n    getAncestorId(elem: ElementRef) {\n        let parent = elem.nativeElement.parentNode;\n        let id = '';\n        while (parent && !id) {\n            if (parent.id) {\n                id = parent.id;\n            }\n            parent = parent.parentNode;\n        }\n        return id;\n    }\n\n    /**\n     * Get name attribute from parent if name attribute exists.\n     * @param elem Reference to element\n     */\n    getParentName(elem: ElementRef) {\n        const parent = elem.nativeElement.parentNode;\n        return (parent.name && !parent.id) ? parent.name : null;\n    }\n\n    spacesToUnderscore(str: string) {\n        return str.replace(/\\s+/g, '_');\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EmbeddedItemDirective} from './embedded-item';\nimport {GenericContainerComponent} from './generic-container.component';\nimport {IncludeComponentDirective} from './include-component.directive';\nimport {ErrorMessagesComponent} from './error-messages/error-messages.component';\nimport {ModalComponent} from './modal-service/modal/modal.component';\nimport {CurrencyFormatPipe} from './pipes/currency-format.pipe';\nimport {NgForSetDirective} from './on-ngfor-set.directive';\nimport {InfiniteScrollComponent} from './infite-scroll/infite-scroll.component';\nimport {AwNameDirective} from './aw-name/aw-name.directive';\n\n\n@NgModule({\n    declarations: [\n        EmbeddedItemDirective,\n        IncludeComponentDirective,\n        GenericContainerComponent,\n        ErrorMessagesComponent,\n        ModalComponent,\n        CurrencyFormatPipe,\n        NgForSetDirective,\n        InfiniteScrollComponent,\n        AwNameDirective\n    ],\n    imports: [\n        CommonModule\n    ],\n    entryComponents: [\n        GenericContainerComponent,\n        ModalComponent\n    ],\n    exports: [\n        EmbeddedItemDirective,\n        IncludeComponentDirective,\n        GenericContainerComponent,\n        ErrorMessagesComponent,\n        ModalComponent,\n        CurrencyFormatPipe,\n        NgForSetDirective,\n        InfiniteScrollComponent,\n        AwNameDirective\n    ]\n})\nexport class AWCoreComponentModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Environment, noop} from '@aribaui/core';\nimport {BaseComponent} from '../base.component';\n\n/**\n * Parent class for all modal dialogs. Provides defaults functionality for all modals.\n */\nexport class ModalContainer extends BaseComponent\n{\n\n    /**\n     * Override function.\n     */\n    destroy: () => void = noop;\n\n\n    constructor(public env: Environment)\n    {\n        super(env);\n    }\n\n\n    /**\n     * function that closes the dialog by calling destroy on the component reference.\n     * Method inherited by all its children.\n     */\n    closeModal(): void\n    {\n        this.destroy();\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Injectable, Type} from '@angular/core';\nimport {isBlank, isPresent, isStringMap, isType, objectToName} from '@aribaui/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\n/**\n * DataTypeProviderRegistry aggregates different DataProviders per type.\n */\n@Injectable()\nexport class DataTypeProviderRegistry\n{\n\n    /**\n     * Maps class name to DataProvider implementation\n     */\n    private registryByProvider: Map<string, DataProvider<any>>;\n\n\n    /**\n     * Maps a class Name  to actual type\n     */\n    private registryNameToClass: Map<string, any>;\n\n\n    constructor()\n    {\n        this.registryByProvider = new Map<string, DataProvider<any>>();\n        this.registryNameToClass = new Map<string, any>();\n    }\n\n    /**\n     * For every single registered DataProvider implementation we also need store its prototype\n     * in order to be able to support some kind of inheritance. You can register a provider for\n     * a parent class if needed\n     *\n     */\n    registerProvider<T>(target: any, provider: DataProvider<T>): void\n    {\n        if (isBlank(target) || (!isStringMap(target) && !isType(target))) {\n            throw new Error(' Cannot register non-object');\n        }\n\n        let name = isType(target) ? target.prototype.constructor.name : target.constructor.name;\n        this.registryByProvider.set(name, provider);\n\n        let prototype = Object.getPrototypeOf(target);\n        this.registryNameToClass.set(name, prototype);\n    }\n\n\n    /**\n     * Search for best matching provider. If not found then use object prototype to get hold of its\n     * parent and see if there is a provider registered on this level\n     *\n     */\n    bestMatchForClass<T>(className: string): DataProvider<T>\n    {\n        let registeredClassName = className;\n        let classProto = this.registryNameToClass.get(className);\n\n        while (isPresent(registeredClassName)) {\n            let provider: DataProvider<T> = this.registryByProvider.get(registeredClassName);\n\n            if (isPresent(provider)) {\n                provider.type = className;\n                return provider;\n            }\n\n            // Go up to parent\n            if (isPresent(classProto)) {\n                classProto = Object.getPrototypeOf(classProto);\n                let parentName = objectToName(classProto);\n                registeredClassName =\n                    (isPresent(parentName) && parentName !== registeredClassName) ? parentName\n                        : null;\n            } else {\n                return null;\n            }\n        }\n        return null;\n    }\n\n\n    /**\n     * The same as bestMatchForClass() with the difference to pass a type. If you want to\n     * support object inheritance you need this.\n     *\n     *\n     */\n    bestMatchForType<T>(type: Type<T>): DataProvider<T>\n    {\n        let name: string = objectToName(type);\n\n        this.registryNameToClass.set(name, type);\n        return this.bestMatchForClass<T>(name);\n    }\n}\n\n\n/**\n * Provider is a data driver that can access data and retrieve them. It knows how to get 1\n * or more records, maybe do paging and some other things.\n *\n */\nexport abstract class DataProvider<T>\n{\n    /**\n     * Defines current type for this DataProvider\n     */\n    type: any;\n\n    /**\n     * Notifies all the listeners in case of data are available or if they changed due to some user\n     * interaction  (search, adding or removing).\n     *\n     */\n    dataChanges: BehaviorSubject<T[]> = new BehaviorSubject<T[]>([]);\n\n\n    /**\n     * Internal data source populated by fetch or search. JS application can hold large amount of\n     * records without going back to the REST server. This can be used to cache search result on\n     * the client site.\n     *\n     */\n    offScreenData: any[];\n\n\n    /**\n     *  Return size of the source\n     *\n     */\n    expectedCount(params?: Map<string, any>): number\n    {\n        return -1;\n    }\n\n    /**\n     *\n     * For use cases where we need to retrieve data based on some criteria e.g.\n     *\n     *  - max number of records\n     *  - support paging with offset and limit\n     *\n     * @deprecated by fetch\n     */\n    abstract dataForParams(params: Map<string, any>): Array<T>;\n\n\n    /**\n     *\n     * Fetches data from underlying dataProvider.\n     *\n     * Replacement for dataforParams\n     *\n     */\n    abstract fetch(params: Map<string, any>): Observable<T[]>;\n\n    /**\n     *\n     * Returns non-async current state of data\n     */\n    data(): Array<T>\n    {\n        return this.dataChanges.getValue();\n    }\n\n\n    /**\n     * Tells if this DataProvider supports INSERT, REMOVE\n     *\n     */\n    canCRUD(): boolean\n    {\n        return false;\n    }\n\n\n    /**\n     * Tells if this DataProvider supports query capability\n     *\n     */\n    canQuery(): boolean\n    {\n        return false;\n    }\n\n    /**\n     * Implement to support insertion. After record is inserted emit event for dataChanges to\n     * inform all subscribers\n     *\n     */\n    insert(obj: any): void\n    {\n    }\n\n\n    /**\n     * Implement to support record removal. After record is removed emit event for dataChanges to\n     * inform all subscribers.\n     *\n     */\n    remove(obj: any): void\n    {\n\n    }\n\n    /**\n     * Implement to provide access to low level searcg API.\n     *\n     */\n    query(params: Map<string, string>): void\n    {\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {DataProvider} from './datatype-registry.service';\nimport {FieldPath, isBlank, isPresent} from '@aribaui/core';\nimport {Observable, of as observableOf} from 'rxjs';\n\n\n/**\n * Default implementation for Arrays.\n */\nexport class ArrayDataProvider<T> extends DataProvider<T>\n{\n\n    constructor(protected  values: Array<T>)\n    {\n        super();\n        this.type = Array;\n\n        this.offScreenData = this.values;\n        this.dataChanges.next(this.values);\n    }\n\n    expectedCount(params?: Map<string, any>): number\n    {\n        return this.offScreenData.length;\n    }\n\n    dataForParams(params?: Map<string, any>): Array<T>\n    {\n        if (isBlank(params)) {\n            return this.offScreenData;\n        }\n        let data = this.offScreenData;\n\n        if (isPresent(params) && params.has('offset') && params.has('limit')) {\n            let offset = params.get('offset');\n            let limit = params.get('limit');\n\n            if (data.length > (offset + limit)) {\n                data = data.slice(offset, offset + limit);\n            } else {\n                data = data.slice(offset, data.length);\n            }\n        }\n\n        if (params.has('orderby') && params.has('selector')) {\n            this.sort(data, params.get('orderby'), params.get('selector'));\n        }\n        return data;\n    }\n\n\n    fetch(params: Map<string, any>): Observable<T[]>\n    {\n        return observableOf(this.dataForParams(params));\n    }\n\n\n    /**\n     * Provides default implementation for sorting current dataset by one column / key\n     *\n     * for sortOrdering please see Datatable and its sortOrderingForNumber()\n     *\n     *      1  = ascending\n     *      -1 = descending\n     */\n    private sort(arrayToSort: any[], key: string, sortOrder: number): void\n    {\n        arrayToSort.sort((data1: any, data2: any) =>\n        {\n            let value1 = FieldPath.getFieldValue(data1, key);\n            let value2 = FieldPath.getFieldValue(data2, key);\n            let result = null;\n\n            if (value1 == null && value2 != null) {\n                result = -1;\n            } else if (value1 != null && value2 == null) {\n                result = 1;\n            } else if (value1 == null && value2 == null) {\n                result = 0;\n            } else if (typeof value1 === 'string' && typeof value2 === 'string') {\n                result = value1.localeCompare(value2);\n            } else {\n                result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n            }\n\n            return (sortOrder * result);\n        });\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {DataProvider, DataTypeProviderRegistry} from './datatype-registry.service';\nimport {Injectable} from '@angular/core';\nimport {isArray, isString} from '@aribaui/core';\nimport {ArrayDataProvider} from './array-data-provider';\n\n\n/**\n * Provides top level accessor class in order to make {@link DataProvider} retrieval process easier.\n * Using {@link DataTypeProviderRegistry} we either retrieve registered instance of concrete\n * provider or instantiate our implicit provider for native types such as Array.\n *\n *\n */\n@Injectable()\nexport class DataProviders\n{\n\n\n    constructor(private registry: DataTypeProviderRegistry)\n    {\n    }\n\n    /**\n     * Finds the best matching  DataProvider or create new one in case of Array\n     * More room to register and instantiate some other implicit Providers\n     */\n    find(target: any): DataProvider<any>\n    {\n        if (isArray(target)) {\n            return new ArrayDataProvider(target);\n        } else if (isString(target)) {\n            return this.registry.bestMatchForClass(target);\n        }\n\n        return this.registry.bestMatchForType(target);\n    }\n\n\n    /**\n     * Registers new provider within DataTypeProviderRegistry\n     *\n     */\n    register<T>(target: any, provider: DataProvider<T>): void\n    {\n        this.registry.registerProvider(target, provider);\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {DataProvider} from './datatype-registry.service';\nimport {Injectable, Type} from '@angular/core';\nimport {\n    assert,\n    FieldPath,\n    isArray,\n    isBlank,\n    isFunction,\n    isJsObject,\n    isPresent,\n    objectToName,\n    objectValues,\n    unimplemented\n} from '@aribaui/core';\nimport {Observable, of as observableOf} from 'rxjs';\nimport {ArrayDataProvider} from './array-data-provider';\nimport {OutlineNode} from '../../widgets/outline/outline-for.component';\n\n\n/**\n *\n * Provides a registry of different data Finders used mostly by DataSources. All Finders are\n * registered by this class as we don't have any needs right now to expose this to developer.\n *\n */\n@Injectable()\nexport class DataFinders\n{\n\n    private findersByType: Map<DataFinder, Type<DataFinder>> = new Map();\n\n    constructor()\n    {\n        this.initFinders();\n    }\n\n    /**\n     * Finds the best matching DataFinder based on the object type and queryType.\n     */\n    find(forProvider: DataProvider<any>, forType: QueryType): DataFinder\n    {\n\n        let finderMatch: Type<DataFinder>;\n        this.findersByType.forEach((v: Type<DataFinder>, k: DataFinder) =>\n        {\n            if (k.accepts(forProvider, forType)) {\n                finderMatch = v;\n                return true;\n            }\n        });\n\n        if (isPresent(finderMatch)) {\n            let copy = new finderMatch();\n            copy.forData(forProvider);\n            return copy;\n\n        }\n        return null;\n    }\n\n    /**\n     * Registers new finder\n     *\n     */\n    register<T>(prototype: DataFinder, type: Type<DataFinder>): void\n    {\n        this.findersByType.set(prototype, type);\n    }\n\n    private initFinders()\n    {\n        // create a prototype for each\n        this.findersByType.set(new FullTextArrayDataFinder(), FullTextArrayDataFinder);\n        this.findersByType.set(new OutlineFullTextArrayDataFinder(),\n            OutlineFullTextArrayDataFinder);\n\n    }\n}\n\n/**\n * We have different options how to query data. FullText uses a string where predicate is\n * using key:value pair to built a query\n */\nexport enum QueryType\n{\n    FullText,\n    FullTextOutline,\n    Predicate,\n    FullTextAndPredicate\n}\n\n\n/**\n * This class provides matching capability for given DataProvider.\n */\nexport abstract class DataFinder\n{\n\n\n    /**\n     *\n     * Lookup key to apply when running match. Ideally your DS should be able to set lookupKey\n     * either globally for given dataProvider or locally every time you run search. This is in\n     * case you have many choosers for the same type and you want them to have different lookup\n     * key.\n     *\n     *\n     *\n     */\n    abstract set lookupKey(key: string);\n\n    /**\n     * In order to find concrete DataFinder we need to know the target type and the query type\n     *\n     */\n    accepts(forData: DataProvider<any>, forType: QueryType): boolean\n    {\n        return false;\n    }\n\n    /**\n     *\n     * Sets a DataProvider for DataFinder\n     *\n     */\n    abstract forData(provider: DataProvider<any>): DataFinder;\n\n    /**\n     *\n     * Matching methods which are either async or sync\n     *\n     */\n    abstract instantMatch<T>(query: any, max: number): T[];\n\n    abstract instantMatchWithSelections<T>(selectionsForMatch: any[], query: any,\n                                           max: number): T[];\n\n\n    /**\n     *\n     * Query can be a simple string literal or a map having different key value pair as a\n     * filter\n     *\n     */\n    match<T>(query: any, max: number = -1): Observable<T[]>\n    {\n        return unimplemented();\n    }\n\n    matchWithSelections<T>(selections: any[], query: any, max: number): Observable<T[]>\n    {\n        return unimplemented();\n    }\n}\n\n\n/**\n * Simple FullText implementation based on infix string matching which works on top of\n * ArrayDataProvider.\n *\n */\nexport class FullTextArrayDataFinder extends DataFinder\n{\n    /**\n     *  If list value is object set keyPath to get the object value\n     */\n    _keyPath: FieldPath;\n\n    /**\n     * Current DataProvider used to access data\n     */\n    protected _provider: DataProvider<any>;\n\n    set lookupKey(key: string)\n    {\n        this._keyPath = isPresent(key) ? new FieldPath(key) : null;\n    }\n\n    accepts(forData: DataProvider<any>, forType: QueryType): boolean\n    {\n        return forData instanceof ArrayDataProvider && forType === QueryType.FullText;\n    }\n\n    forData(provider: DataProvider<any>): FullTextArrayDataFinder\n    {\n        this._provider = provider;\n        return this;\n    }\n\n    instantMatch<T>(query: any, max: number): T[]\n    {\n        assert(isPresent(this._provider), 'Missing DataProvider');\n\n        let list = this._provider.dataForParams(new Map().set('limit', max));\n        return this.instantMatchWithSelections<T>(list, query, max);\n    }\n\n    instantMatchWithSelections<T>(selectionsForMatch: any[], query: string, max: number): Array<T>\n    {\n        assert(isPresent(this._provider), 'Missing DataProvider');\n\n        if (isBlank(query)) {\n            return selectionsForMatch;\n        }\n        let result: any[] = [];\n        let toLowerPattern = query.toLowerCase();\n\n        for (let i = 0; i < selectionsForMatch.length; i++) {\n            let item = selectionsForMatch[i];\n            if (this.matches(item, toLowerPattern)) {\n                result.push(item);\n                if (result.length >= max) {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    /**\n     *\n     * Warning: If you dont supply search Key and you want fulltext search and you use this\n     * default implementation be aware that it can  perform poorly as it is naive implementaion\n     * that does not do deep compare.\n     *\n     */\n    matches<T>(item: any, pattern: string): boolean\n    {\n        let val = (isPresent(this._keyPath)) ? this._keyPath.getFieldValue(item) : item;\n        if (isFunction(val)) {\n            val = val.call(item);\n        } else if (isJsObject(item)) {\n            return this.hasObjectValue(item, pattern);\n\n        } else {\n            return isBlank(pattern) ||\n                isPresent(val) && val.toString().toLowerCase().indexOf(pattern) > -1;\n        }\n    }\n\n\n    match<T>(query: any, max: number): Observable<T[]>\n    {\n        return observableOf(this.instantMatch(query, max));\n    }\n\n    matchWithSelections<T>(selections: any[], query: any, max: number): Observable<T[]>\n    {\n        return observableOf(this.instantMatchWithSelections(selections, query, max));\n    }\n\n    protected hasObjectValue(obj: any, pattern: string): boolean\n    {\n        let values = objectValues(obj);\n        let parentObj = objectToName(obj);\n        let length2 = values.filter((value: any) =>\n        {\n            if (isBlank(value) || isArray(value)) {\n                return false;\n\n            } else if (!isJsObject(value) && !isFunction(value)) {\n                return value.toString().toLowerCase().indexOf(pattern) !== -1;\n\n            } else if (isJsObject(value) && objectToName(value) !== parentObj) {\n                return this.hasObjectValue(value, pattern);\n            }\n\n            return false;\n        }).length;\n        return length2 > 0;\n    }\n}\n\n\n/**\n * Extends basic Infix implementation to work on top of OutlineNodes. It first checks all the\n * children on lowest level and moving up to the root and marking nodes that can be removed.\n *\n *  For simple data structure which operates on local array this should be good enough we this\n *  can never match with real DB full text search.\n *\n */\nexport class OutlineFullTextArrayDataFinder extends FullTextArrayDataFinder\n{\n\n    accepts(forData: DataProvider<any>, forType: QueryType): boolean\n    {\n        return forData instanceof ArrayDataProvider && forType === QueryType.FullTextOutline;\n    }\n\n\n    instantMatchWithSelections<T>(selectionsForMatch: any[], query: string, max: number): Array<T>\n    {\n        assert(isPresent(this._provider), 'Missing DataProvider');\n\n        if (isBlank(query)) {\n            return selectionsForMatch;\n        }\n        let toLowerPattern = query.toLowerCase();\n\n        let sourceToSearch = selectionsForMatch.slice();\n        this.rollup(sourceToSearch, toLowerPattern);\n        return this.shake(sourceToSearch);\n    }\n\n\n    /**\n     *\n     * Going thru the tree from bottom up and mark all that matches query\n     *\n     */\n    rollup(nodes: OutlineNode[], query: string): boolean\n    {\n        nodes.forEach((item: OutlineNode) =>\n        {\n            // start from bottom up and capture how many occurrences is found for future use\n            let hasChildrenMatch = false;\n            if (isPresent(item.children) && item.children.length > 0) {\n                hasChildrenMatch = this.rollup(item.children, query);\n            }\n            item.visible = hasChildrenMatch || this.matches(item, query);\n        });\n\n        return nodes.some((item: OutlineNode) => item.visible);\n    }\n\n    /**\n     * Filter out all the nodes that are marked as visible = false and make sure and\n     * don't modify original list\n     *\n     */\n    shake(nodes: OutlineNode[]): any[]\n    {\n        return nodes\n            .filter(node => node.visible)\n            .map(node => ({\n                ...node,\n                isExpanded: node.visible,\n                children: node.children && this.shake(node.children)\n            }));\n    }\n\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {DataProviders} from './data-providers';\nimport {DataFinders} from './data-finders';\nimport {Observable} from 'rxjs';\nimport {InjectionToken} from '@angular/core';\nimport {unimplemented} from '@aribaui/core';\nimport {DataFinder, QueryType} from '../../core/data/data-finders';\nimport {DataProvider} from '../../core/data/datatype-registry.service';\n\n\nexport const DATA_SOURCE = new InjectionToken<DataSource>('DATA_SOURCE');\n\n/**\n * DataSource describes basic functionality for handling stream of data specific to component\n *\n * It is expected that DataSource will be defined as component provider using\n *\n * @Components ({\n *      ...\n *      providers:[\n *\n *          provide: DATA_SOURCE, useClass: ChooserDataSourcePlainArrayExample,\n                        deps: [DataProviders, DataFinders]\n *      ]\n *\n * })\n *\n *\n * so all the dependencies (DataProviders, DataFinders) are properly injected.\n *\n * DataProvider uses open() method to broadcast changes to all the subscribers in reactive way.\n * Or you can use instant() method to retrieve current state of this DataSource (sync)\n *\n */\nexport abstract class DataSource\n{\n    static readonly MaxLength = 10;\n    static readonly MaxRecentSelected = 5;\n\n    /**\n     *\n     * Each DataSource have injected DataProviders and DataFinders to retrieve concrete\n     * implementation\n     *\n     */\n    constructor(protected dataProviders?: DataProviders, protected finders?: DataFinders)\n    {\n    }\n\n\n    /**\n     * Allows to initialize data source and pass some additional values\n     *\n     *\n     */\n    abstract init(...args: any[]): void;\n\n    /**\n     * DataProviders works with stream of data and this opens up the channel in order to\n     * listen and react for any changes that could happen inside DataProvider\n     */\n    abstract open<T>(): Observable<T[]>;\n\n\n    /**\n     * Release subscription to DataProvider\n     */\n    abstract close(): void;\n\n\n    /**\n     * Returns a data instantly from the internal state of DataProvider\n     */\n    instant<T>(): T[]\n    {\n\n        return unimplemented();\n    }\n\n}\n\n\n/**\n * To make initialization easier we have this common format.\n */\nexport interface DSInitParams\n{\n    /**\n     * List of values or the object type name we want to render\n     */\n    obj?: any;\n\n    /**\n     * Which find we want to load FullText or Predicate\n     */\n    queryType: QueryType;\n\n    /**\n     * Can specify lookup Key to narrow down the search to specific field. If lookup key is\n     * null, items are assumed to be strings\n     */\n    lookupKey?: string;\n\n    /**\n     * Tells if the Chooser is single or multi select\n     */\n    multiselect: boolean;\n\n    /**\n     * Option to pass custom DataProvider instead letting DataProviders to find match\n     */\n    dataProvider?: DataProvider<any>;\n\n    /**\n     * Option to pass custom DataFinder instead letting DataFinders to find match\n     */\n    dataFinder?: DataFinder;\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, HostBinding} from '@angular/core';\n\n/**\n * We are using these components as a better way selectors.\n *\n */\n\n\n/**\n * Common class used used for Five Zone layout. Used for the ng-content selector\n */\n@Component({\n    selector: 'aw-top',\n    template: '<ng-content></ng-content>'\n})\nexport class TopZoneComponent\n{\n    @HostBinding('class') classList: string = 'ui-g-12 ui-g-nopad ';\n}\n\n/**\n * Common class used used for Five Zone layout. Used for the ng-content selector\n */\n@Component({\n    selector: 'aw-left',\n    template: '<ng-content></ng-content>'\n})\nexport class LeftZoneComponent\n{\n    @HostBinding('class') classList: string = 'ui-g-12 ui-g-nopad';\n}\n\n/**\n * Common class used used for Five Zone layout. Used for the ng-content selector\n */\n@Component({\n    selector: 'aw-middle',\n    template: '<ng-content></ng-content>'\n})\nexport class MiddleZoneComponent\n{\n    @HostBinding('class') classList: string = 'ui-g-12 ui-md-6 ui-lg-4 ui-g-nopad';\n}\n\n\n/**\n * Common class used used for Five Zone layout. Used for the ng-content selector\n */\n@Component({\n    selector: 'aw-right',\n    template: '<ng-content></ng-content>'\n})\nexport class RightZoneComponent\n{\n    @HostBinding('class') classList: string = 'ui-g-12 ui-g-nopad';\n\n}\n\n/**\n * Common class used used for Five Zone layout. Used for the ng-content selector\n */\n@Component({\n    selector: 'aw-bottom',\n    template: '<ng-content></ng-content>'\n})\nexport class BottomZoneComponent\n{\n    @HostBinding('class') classList: string = 'ui-g-12 ui-g-nopad';\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, forwardRef, HostBinding, Inject, Input, Optional, SkipSelf} from '@angular/core';\nimport {AsyncValidatorFn, ValidatorFn, Validators} from '@angular/forms';\nimport {Environment, isBlank, isPresent, ListWrapper, StringWrapper} from '@aribaui/core';\nimport {FormTableComponent} from '../form-table.component';\nimport {BaseFormComponent, WidgetSizeColumns} from '../../../core/base-form.component';\n\n/**\n * Used by FormTable to layout fields into Rows. Each FormTable row is reasonable for not only to\n * include actual component such is DropDown or InputField but mainly provides a enough context for\n * the component to specify the size, how it should layout, whether we need to show required flag,\n * to show/hide labels in case if we have no label layout and much more.\n *\n * FormRow component also registers angular validator for the current row/field. As already\n * mentioned We treat our widgets with minimal responsibility as possible to present and retrive\n * information to/from user and let somebody else to figure out where it appear and how.\n *\n * todo: Move under FormTable\n */\n@Component({\n    selector: 'aw-form-row',\n    template: `<div *ngIf=\"!hidden\"\n     class=\"w-form-row ui-g\"\n     [class.highlight-row]=\"highlightRow\"\n     [class.required]=\"required\"\n     [class.label-on-top]=\"labelsOnTop\"\n     [class.label-on-side]=\"!labelsOnTop\"\n     [class.has-danger]=\"!formControl.valid && !formControl.pristine \"\n     [ngClass]=\"styleClass\">\n\n    <div class=\"control-label ui-g-12 ui-g-nopad\"\n         *ngIf=\"!noLabelLayout\"\n         [class.ui-md-3]=\"!labelsOnTop\">\n        <label [class.sr-only]=\"noLabelLayout\">{{label}}</label>\n    </div>\n\n    <div class=\"control-value ui-g-nopad\" [ngClass]=\"size\"\n         [class.read-only]=\"!editable\">\n        <ng-content></ng-content>\n        <a-error-messages [control]=\"formControl\"></a-error-messages>\n    </div>\n</div>\n`,\n    styles: [`.required label:after{content:\"*\";color:red}/deep/ .highlight-row{background-color:#f7f8fa}.w-form-row.highlight-row{background-color:#f7f8fa}.w-form-row.label-on-top{padding-bottom:13px}.w-form-row.label-on-top .control-label,.w-form-row.label-on-top .control-value{padding-top:0;padding-bottom:0}.w-form-row.label-on-top .control-label{padding-bottom:12px}.w-form-row.label-on-side .control-label,.w-form-row.label-on-side .control-value{padding-top:0;padding-bottom:0}.w-form-row.label-on-side .control-label ::ng-deep .w-string-field,.w-form-row.label-on-side .control-value ::ng-deep .w-string-field{line-height:36px}.w-form-row.label-on-side .control-label ::ng-deep .sap-icon,.w-form-row.label-on-side .control-value ::ng-deep .sap-icon{line-height:26px}.w-form-row.label-on-side .control-label label,.w-form-row.label-on-side .control-value label{line-height:36px}.w-form-row.label-on-side .control-label .fa,.w-form-row.label-on-side .control-value .fa{line-height:18px}.control-label{color:#636363}.u-validation-error{border-color:red}`],\n    providers: [\n        {provide: BaseFormComponent, useExisting: forwardRef(() => FormRowComponent)}\n    ]\n})\nexport class FormRowComponent extends BaseFormComponent {\n\n    /**\n     * Hides the label\n     *\n     */\n    @Input()\n    noLabelLayout: boolean = false;\n\n    /**\n     * Renders row with highlighted background\n     *\n     */\n    @Input()\n    highlightRow: boolean = false;\n\n    /**\n     *\n     *  Field label that should appear above or next to the control\n     *\n     */\n    @Input()\n    label: string = '';\n\n    /**\n     *  For inputs type fields provides default angular validators, maximal length of the field\n     */\n    @Input()\n    maxLength: number;\n\n    /**\n     *  For inputs type fields provides default angular validators, minimal length of the field\n     */\n    @Input()\n    minLength: number;\n\n\n    /**\n     *  For inputs type fields provides default angular formatters. How the input fields should be\n     * formatted\n     */\n    @Input()\n    pattern: string;\n\n\n    /**\n     * Defines custom async validators which will be attached to the Control\n     */\n    @Input()\n    customAsyncValidators: AsyncValidatorFn[];\n\n    /**\n     * Defines custom  validators which will be attached to the Control\n     */\n    @Input()\n    customValidators: ValidatorFn[];\n\n    /**\n     * What is the current size of the field. Current we support 4 different sizes: x-small, small,\n     * medium, large, x-large\n     */\n    private _size: string;\n\n    /**\n     *\n     * For single column layout without zones we need to apply grid directly to the FormRow tag\n     * so we don't need to introduce extra div level\n     *\n     */\n    @HostBinding('class') classList: string = '';\n\n\n    private _labelsOnTop: boolean;\n\n    constructor(public env: Environment,\n                // Event this creates CI depends. Need to have a reference to parent\n                // I need to refactor more parent to not use this child and refactor layouting\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormTableComponent))\n                protected parentContainer: FormTableComponent) {\n        super(env, parentContainer);\n\n        this._size = 'ui-g-12 ui-md-' + WidgetSizeColumns.medium;\n    }\n\n\n    /**\n     * Right now we just initialize this once and use the values we do not expect now to react to\n     * changes\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        super.registerFormControl(null);\n\n        this.registerValidators();\n\n        this.omitPadding = this.parentContainer.omitPadding;\n        this.classList += isPresent(this.parentContainer) ? ' ui-g-12 ' : '';\n        this.classList = this.highlightRow ? this.classList + ' highlight-row ' : this.classList;\n\n        this.classList = this.omitPadding ? this.classList + ' ui-g-nopad ' : this.classList;\n    }\n\n\n    /**\n     * Just a size getter\n     *\n     */\n    get size(): string {\n        return this._size;\n    }\n\n    /**\n     *  A size setter we translate custom sizes into actual bootstrap grid system. We use medium\n     * right now. but we should extend this for other screen sizes\n     *\n     *  todo: provide mapping and add other grid classes for other sizes xs, sm, lg, xl\n     *\n     *  Also check if this is dynamic size that should vary based on the how many number of columns\n     * we have. e.g. Date widgets is by default small, but in 2, 3 columns layout this small is too\n     * small.\n     */\n\n\n\n    @Input()\n    set size(value: string) {\n\n        let isDynVal = false;\n\n        if (StringWrapper.startsWidth(value, 'd-')) {\n            isDynVal = true;\n            value = value.substr(2, value.length - 1);\n        }\n\n        if (isPresent(value)) {\n            this._size = value;\n            let dSize = this.dynSize(value, isDynVal);\n            this._size = 'ui-g-12 ui-md-' + dSize;\n        }\n    }\n\n\n    ngDoCheck(): void {\n        super.ngDoCheck();\n\n        if (isPresent(this.parentContainer) && this.editable !== this.parentContainer.editable) {\n            this.editable = this.parentContainer.editable;\n        }\n    }\n\n    /**\n     * Push out of box angular validator as well as custom one to current FormControl\n     */\n    private registerValidators() {\n        let validators: ValidatorFn[] = [];\n\n        if (isPresent(this.maxLength)) {\n            validators.push(Validators.maxLength(this.maxLength));\n        }\n\n        if (isPresent(this.minLength)) {\n            validators.push(Validators.minLength(this.minLength));\n        }\n\n        if (isPresent(this.required) && this.required) {\n            validators.push(Validators.required);\n        }\n\n        if (isPresent(this.pattern)) {\n            validators.push(Validators.pattern(this.pattern));\n        }\n        if (isPresent(this.customValidators)) {\n            ListWrapper.addAll(validators, this.customValidators);\n        }\n\n        if (validators.length === 1) {\n            this.formControl.setValidators(validators[0]);\n        } else if (validators.length > 1) {\n            this.formControl.setValidators(Validators.compose(validators));\n        }\n\n        if (isPresent(this.customAsyncValidators) && this.customAsyncValidators.length === 1) {\n            this.formControl.setAsyncValidators(this.customAsyncValidators[0]);\n        } else if (isPresent(this.customAsyncValidators) && this.customAsyncValidators.length > 1) {\n            this.formControl.setAsyncValidators(\n                Validators.composeAsync(this.customAsyncValidators));\n        }\n    }\n\n\n    /**\n     *\n     * Do we have labels on TOP, try to read this from Parent\n     *\n     */\n    get labelsOnTop(): boolean {\n        if (isBlank(this._labelsOnTop) && isPresent(this.parentContainer)) {\n            return (<FormTableComponent>this.parentContainer).isLabelsOnTop();\n        }\n        return false;\n    }\n\n\n    /**\n     *\n     * Can refactor all into 1 line but its hard to debug so this is just for read\n     *\n     */\n    private dynSize(value: string, isDynValue: boolean): string {\n        let normalizeSize = value.toLowerCase().replace('-', '');\n\n        if (isPresent(this.parentContainer) &&\n            (<FormTableComponent>this.parentContainer).hasTwoColumn && isDynValue) {\n\n            let enumValues: string[] = Object.keys(WidgetSizeColumns);\n            normalizeSize = enumValues[enumValues.indexOf(normalizeSize) + 1];\n        }\n        return (<any>WidgetSizeColumns)[normalizeSize];\n\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ContentChildren,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {\n    BottomZoneComponent,\n    LeftZoneComponent,\n    MiddleZoneComponent,\n    RightZoneComponent,\n    TopZoneComponent\n} from '../five-zone-layout.component';\nimport {FormRowComponent} from './form-row/form-row.component';\nimport {BaseFormComponent} from '../../core/base-form.component';\n\n\n/**\n * FormTable is a specific layout component for rendering Labels and its controls in two columns\n * and 5 different zones.\n *\n * We support LEFT, MIDDLE, RIGHT, TOP, BOTTOM zone where we can place our component or widgets.\n * This\n * component is used as primary layout to wrap all the common use cases. E.g. When we lay out\n * fields in the form I do not want controls to be aware of error validation, size, labels, and\n * some other things. Control such INPUT is just responsible for retrieve user value but not how it\n * appear on the page.\n *\n * This way we can be flexible how we treat widgets for different kinds of situation depending\n * where they appear\n\n * FormTable just like the rest of the components are using Model driven approach how to work with\n * data, mean we are using FormGroup, FormControl etc. FormGroup can be passed into the FormTable,\n * otherwise its automatically created when the FormTable is instantiated.\n *\n * FormGroup is saved insode Environment where we are using this to pass this around the pages and\n * components.\n *\n * ### Example\n *\n * Simple Layout fields and its control\n *\n *\n * ```typescript\n *  @Component({\n *      selector: 'wrapper-comp' ,\n *      template: `\n *  \t\t\t<aw-form-table [formGroup]=\"formGroup\" (onSubmit)=>\n *  \t\t\t\t<aw-form-row [label]=\"'name'\" [name]=\"'name'\">\n *  \t\t\t\t\t<aw-input-field [type]=\"'string'\"></aw-input-field>\n *  \t\t\t\t</aw-form-row>\n *\n *  \t\t\t\t<aw-form-row [label]=\"'Preferred Colors'\" [name]=\"'myColors'\">\n *  \t\t\t\t\t<aw-checkbox-list [list]=\"checkBoxListValues\"\n *  \t\t\t\t\t                 [selections]=\"selectedValues\"\n *  \t\t\t\t\t                 [layout]=\"'inline'\"\n *  \t\t\t\t\t                 (onSelection)=\"onCBClick($event)\">\n *  \t\t\t\t\t</aw-checkbox-list>\n *  \t\t\t\t</aw-form-row>\n *  \t\t\t\t<aw-form-row [label]=\"'Gender'\" [name]=\"'gender'\">\n *\n *  \t\t\t\t\t<aw-radiobutton-list [list]=\"rbValues\" [selection]=\"rbSelection\">\n *\n *  \t\t\t\t\t</aw-radiobutton-list>\n *\n *  \t\t\t\t</aw-form-row>\n *  \t\t\t\t<aw-form-row [label]=\"'My birthdate'\" [name]=\"'birthDate'\" [size]=\"'small'\">\n *\n *  \t\t\t\t\t<aw-date-time [value]=\"date\" [editable]=\"editable\" [showTime]=\"showTime\">\n *  \t\t\t\t\t</aw-date-time>\n *  \t\t\t\t</aw-form-row>\n *  \t\t\t</aw-form-table>\n *    `\n *  })\n *  export class ShowUserInfoComponent\n *  {\n *       checkBoxListValues: string[] = ['blue' , 'red' , 'yellow' , 'orange' , 'white' , 'silver'\n *     , 'black' , 'Green'\n *     , 'Gray' , 'Navy' ,\n *          'Olive' , 'Aqua' , 'Purple'];\n *      selectedValues: string[] = ['blue' , 'Olive' , 'Aqua' , 'Purple'];\n *      rbValues: string[] = ['male' , 'female' , 'other'];\n *      rbSelection: string = 'male';\n *      editable: boolean = true;\n *      showTime: boolean = true;\n *\n *      formGroup: FormGroup = new FormGroup({});\n *\n *\n *      onCBClick (event): void\n *      {\n *          console.log('onCBClick = ' + event);\n *      }\n *\n *      onSubmit (model: any): void\n *      {\n *         console.log(model)\n *\n *         // will print { name:null, myColors:['blue' , 'Olive' , 'Aqua' , 'Purple'], gender:\n *     male}\n *      }\n *\n *  }\n *\n *  ```\n *\n *  Or you can use zone to layout these fields into two columns:\n *\n *  Current zones are implement with <ng-content SELECT> which is just a selector to searches for\n *     specific pattern. In our case instead of creating extra wrapper custom component use simple\n *     CSS class\n *\n *\n *  ```\n *            <aw-form-table #metaFormTable [editable]=\"editing\"\n *                          [useFiveZone]=\"isFiveZoneLayout\"\n *                          (onSubmit)=\"onSaveAction($event)\">\n *\n *                <aw-left  *ngIf=\"canShowZone('zLeft')\">\n *\n *                        <aw-form-row [label]=\"'name'\" [name]=\"'name'\">\n *                            <aw-input-field [type]=\"'string'\"></aw-input-field>\n *                        </aw-form-row>\n *\n *                        <aw-form-row [label]=\"'Preferred Colors'\" [name]=\"'myColors'\">\n *                            <aw-checkbox-list [list]=\"checkBoxListValues\"\n *                                             [selections]=\"selectedValues\"\n *                                             [layout]=\"'inline'\"\n *                                             (onSelection)=\"onCBClick($event)\">\n *                            </aw-checkbox-list>\n *                        </aw-form-row>\n *                </aw-left>\n *\n *\n *                <aw-right  *ngIf=\"canShowZone('zRight')\">\n *                        <aw-form-row [label]=\"'Gender'\" [name]=\"'gender'\">\n *                                <aw-radiobutton-list [list]=\"rbValues\" [selection]=\"rbSelection\">\n *                                </aw-radiobutton-list>\n *                        </aw-form-row>\n *\n *                        <aw-form-row [label]=\"'My birthdate'\" [name]=\"'birthDate'\"\n *     [size]=\"'small'\">\n *                            <aw-date-time [value]=\"date\" [editable]=\"editable\"\n *     [showTime]=\"showTime\">\n *                            </aw-date-time>\n *                        </aw-form-row>\n *                </<aw-right>\n *            </aw-form-table>\n *\n *  ```\n *\n *  todo: remove my css selectors for zones and replace it with real component even just a tag\n *  todo: would work file\n *\n */\n@Component({\n    selector: 'aw-form-table',\n    template: `<form class=\"w-form-table ui-g ui-fluid\" [formGroup]=\"formGroup\"\n      [ngClass]=\"styleClass\"\n      (ngSubmit)=\"onSubmitForm(formGroup.value)\" novalidate>\n\n    <div class=\"ui-g-12 ui-g-nopad\">\n\n        <div class=\"ui-g\">\n            <ng-content></ng-content>\n        </div>\n\n    </div>\n</form>\n\n`,\n    styles: [`.page-container>form{margin-top:1em}.w-form-table button{float:right}`],\n    providers: [\n        {provide: BaseFormComponent, useExisting: forwardRef(() => FormTableComponent)}\n    ]\n})\nexport class FormTableComponent extends BaseFormComponent implements AfterContentInit\n{\n\n    /**\n     * Used for the form layout to see if we need to render labels stacked  or side by side next to\n     * the control\n     *\n     */\n    @Input()\n    labelsOnTop?: boolean = false;\n\n\n    /**\n     *\n     * Is this a 4 zone layout\n     *\n     */\n    @Input()\n    useFiveZone?: boolean = false;\n\n    /**\n     * For certain usecase we dont want to set automatically this to all children\n     */\n    @Input()\n    editabilityCheck: boolean = true;\n\n    /**\n     *  Triggers when the <form> is submitted. onSubmit we emit the whole formController objects\n     *\n     *\n     */\n    @Output()\n    onSubmit: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * These properties represent individual zones and we use them to adjust our column grid\n     * layout\n     */\n    @ContentChild(LeftZoneComponent) leftZone: LeftZoneComponent;\n\n    @ContentChild(MiddleZoneComponent) middleZone: MiddleZoneComponent;\n\n    @ContentChild(RightZoneComponent) rightZone: RightZoneComponent;\n\n    @ContentChild(TopZoneComponent) topZone: TopZoneComponent;\n\n    @ContentChild(BottomZoneComponent) bottomZone: BottomZoneComponent;\n\n\n    @ContentChildren(BaseFormComponent, {descendants: true})\n    formFields: QueryList<BaseFormComponent>;\n\n    @ContentChildren(forwardRef(() => FormRowComponent), {descendants: true})\n    rows: QueryList<FormRowComponent>;\n\n\n    /**\n     * Cache calculated properties when init this component\n     *\n     */\n    hasOneColumn: boolean = false;\n    hasTwoColumn: boolean = false;\n    hasThreeColumn: boolean = false;\n\n\n    constructor(public env: Environment)\n    {\n        super(env, null);\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        super.ngOnChanges(changes);\n\n        if (isPresent(changes['editable']) &&\n            changes['editable'].previousValue !== changes['editable'].currentValue) {\n\n            this.updateFormFields();\n        }\n    }\n\n\n    onSubmitForm(event: any)\n    {\n        this.onSubmit.emit(event);\n    }\n\n    /**\n     *\n     * Are labels on top\n     *\n     */\n    isLabelsOnTop(): boolean\n    {\n        return this.labelsOnTop;\n    }\n\n\n    /**\n     *\n     * Used by child component to inherit editability\n     *\n     */\n    isFormEditable(): boolean\n    {\n        return this.editable;\n    }\n\n\n    applyColumns(): void\n    {\n        if (!this.useFiveZone && this.hasAnyZones()) {\n            throw new Error('Zones detected in the FormTable but useFiveZone option is false');\n        }\n\n        this.hasOneColumn = !isPresent(this.rightZone) && !isPresent(this.middleZone);\n        this.hasTwoColumn = isPresent(this.leftZone) && isPresent(this.rightZone) &&\n            !isPresent(this.middleZone);\n\n        this.hasThreeColumn = isPresent(this.leftZone) && isPresent(this.rightZone) &&\n            isPresent(this.middleZone);\n\n        if (this.hasTwoColumn && !this.isTwoZoneReady()) {\n            this.leftZone.classList += ' ui-md-6 ui-lg-6';\n            this.rightZone.classList += ' ui-md-6 ui-lg-6';\n        }\n\n        if (this.hasThreeColumn && !this.isThreeZoneReady()) {\n            this.leftZone.classList += ' ui-md-6 ui-lg-4';\n            this.rightZone.classList += ' ui-md-6 ui-lg-4';\n        }\n    }\n\n\n    private hasAnyZones()\n    {\n        return isPresent(this.leftZone) || isPresent(this.rightZone) || isPresent(this.middleZone)\n            || isPresent(this.topZone) || isPresent(this.bottomZone);\n    }\n\n    /**\n     * Helper method to check if we already initialized the classList.\n     * the\n     *\n     * TODO: Probably string array would be easier\n     */\n    isTwoZoneReady(): boolean\n    {\n        return this.leftZone.classList.indexOf('ui-lg-6') > 0 &&\n            this.leftZone.classList.indexOf('ui-lg-6') > 0;\n    }\n\n\n    /**\n     * Helper method to check if we already initialized the classList.\n     * the\n     *\n     * TODO: Probably string array would be easier\n     */\n    isThreeZoneReady(): boolean\n    {\n        return this.leftZone.classList.indexOf('ui-lg-4') > 0 &&\n            this.leftZone.classList.indexOf('ui-lg-4') > 0;\n    }\n\n    ngAfterContentInit(): void\n    {\n        // problem since Angular 4.2, ngAfterContentInit\n        // without this I get error that value was changed after view was checked\n        // todo: refactor  - mainly our zones left, right middle\n        setTimeout(() =>\n        {\n            this.applyColumns();\n            this.updateFormFields();\n            this.adjustLayout();\n        });\n    }\n\n\n    private updateFormFields(): void\n    {\n        if (this.editabilityCheck && isPresent(this.formFields) && this.formFields.length > 0) {\n            this.formFields.forEach((item: BaseFormComponent) =>\n            {\n                item.editable = this.editable;\n                // item.formGroup = this.formGroup;\n            });\n        }\n    }\n\n\n    /**\n     * Based on if we are 2 or 3 or 1 column layout we need to adjust widgets width within the\n     * form row.\n     */\n    private adjustLayout(): void\n    {\n        if (isPresent(this.rows) && this.rows.length > 0) {\n            if (this.hasThreeColumn) {\n                this.rows.forEach((item: FormRowComponent) => item.size = 'large');\n            }\n\n        }\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {InputTextModule} from 'primeng/components/inputtext/inputtext';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {FormTableComponent} from './form-table.component';\nimport {FormRowComponent} from './form-row/form-row.component';\nimport {\n    BottomZoneComponent,\n    LeftZoneComponent,\n    MiddleZoneComponent,\n    RightZoneComponent,\n    TopZoneComponent\n} from '../five-zone-layout.component';\nimport {AWCoreComponentModule} from '../../core/core.module';\n\n\n@NgModule({\n    declarations: [\n        FormTableComponent,\n        FormRowComponent,\n        TopZoneComponent,\n        LeftZoneComponent,\n        RightZoneComponent,\n        MiddleZoneComponent,\n        BottomZoneComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule,\n        AWCoreComponentModule\n    ],\n    entryComponents: [\n        FormTableComponent,\n        FormRowComponent,\n        TopZoneComponent,\n        LeftZoneComponent,\n        RightZoneComponent,\n        MiddleZoneComponent,\n        BottomZoneComponent\n    ],\n    exports: [\n        FormTableComponent,\n        FormRowComponent,\n        TopZoneComponent,\n        LeftZoneComponent,\n        RightZoneComponent,\n        MiddleZoneComponent,\n        BottomZoneComponent\n    ]\n})\nexport class AWFormTableModule\n{\n}\n\n\n","import {distinctUntilChanged} from 'rxjs/operators';\nimport {Component, forwardRef, Inject, Input, Optional, SkipSelf} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Environment, isPresent, Value} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\nimport {Subscription} from 'rxjs';\nimport {DecimalPipe} from '@angular/common';\n\n\n/**\n * This component represent a Input field and it can  accept different types of values such as\n * text, number.\n *\n *\n *\n * ### Example\n *\n * ```typescript\n *  @Component({\n *      selector: 'wrapper-comp' ,\n *      template: '<aw-input-field [value]=\"inputValue\" [type]=\"inputType\"></aw-input-field>'\n *  })\n *  export class TestInputComponent\n *  {\n *      inputValue: string = 'Some text';\n *\n *      // by default input type is text, you can pass string, String, or text\n *      inputType: string = 'string';\n *  }\n *\n * ```\n *\n *\n *\n * ### Example wher input field is initialized with ngModel\n *\n * ```typescript\n *  @Component({\n *      selector: 'wrapper-comp' ,\n *      template: '<aw-input-field [value]=\"inputValue\" [(ngModel)]=\"inputType\"></aw-input-field>'\n *  })\n *  export class TestInputComponent\n *  {\n *      inputValue: string = 'Some text';\n *\n *      // by default input type is text, you can pass string, String, or text\n *      inputType: string = 'string';\n *  }\n *\n * ```\n *\n *  Note: if you are using this outside of FormTable please provide your own FormGroup\n *\n */\n\n\n\nexport const INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputFieldComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-input-field',\n    template: `<div *ngIf=\"editable\" [formGroup]=\"formGroup\" class=\"w-input-wrapper\">\n\n    <input pInputText\n           #inputFieldValue\n           [attr.name]=\"name\"\n           [attr.type]=\"type\"\n           class=\"w-input-field\"\n           [ngClass]=\"styleClass\"\n           [class.has-icon]=\"icon\"\n           placeholder=\"{{placeHolder}}\"\n           [class.u-validation-error]=\"!(formControl.valid || (formControl.pristine))\"\n           formControlName=\"{{name}}\"\n           (keydown)=\"onKeyDown(inputFieldValue)\"\n           (blur)=\"onBlur(inputFieldValue)\"\n           [value]=\"displayValue\">\n    <span *ngIf=\"icon\" class=\"sap-icon\" [ngClass]=\"icon\"></span>\n</div>\n\n\n<ng-template [ngIf]=\"!editable\">\n    <aw-string [value]=\"displayValue\"></aw-string>\n</ng-template>\n`,\n    styles: [`.w-input-wrapper{position:relative}.w-input-field{padding-right:35px}.w-input-field~span{top:13px;position:absolute;right:15px}`],\n\n    providers: [\n        INPUT_CONTROL_VALUE_ACCESSOR,\n\n        {provide: BaseFormComponent, useExisting: forwardRef(() => InputFieldComponent)}\n    ]\n})\nexport class InputFieldComponent extends BaseFormComponent\n{\n\n    /**\n     *\n     * A value used to save and read  when rendering and updating a component\n     *\n     */\n    @Input()\n    value: any = '';\n\n    /**\n     *\n     * The number of decimal places used to format the number object.\n     *\n     */\n    @Input()\n    precision: number;\n\n    /**\n     * BigDecimal object that encapsulates value and locale.\n     * If this object is set, values will be taken from this object\n     */\n    @Input()\n    bigDecimal: BigDecimal;\n\n    /**\n     * Provide custom icon that is placed into the input field.\n     *\n     * Todo: add extra binding that will allow developer to tell position, left right\n     */\n    @Input()\n    icon: string;\n    /**\n     * The decimal pipe is used to format our number object.\n     */\n    decimalPipe: DecimalPipe;\n    /**\n     * The formatted decimal value. Uses angular decimalPipe to format based on locale.\n     */\n    displayValue: string = '';\n    /**\n     * Just to clean up subscriber when component is destroyed\n     */\n    private vchSubscriber: Subscription;\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n        this.decimalPipe = new DecimalPipe(env.locale);\n    }\n\n    /**\n     * Input field type. Currently we support either Number or text\n     */\n    private _type: string = 'string';\n\n    get type(): string\n    {\n        return this._type;\n    }\n\n    /**\n     *\n     * generated setter to check for value and normalizing into expected either number or text\n     *\n     */\n    @Input()\n    set type(value: string)\n    {\n        if (value.toLowerCase() === 'string' || value.toLowerCase() === 'text') {\n            this._type = 'text';\n        } else if (value.toLowerCase() === 'number') {\n            this._type = 'number';\n        }\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n        super.registerFormControl(this.bigDecimal);\n\n        this.vchSubscriber = this.formControl.valueChanges\n            .pipe(distinctUntilChanged())\n            .subscribe(val =>\n            {\n                this.value = val;\n                this.onModelChanged(this.value);\n            });\n\n        if (this.bigDecimal) {\n            this.displayValue = this.formatNumber(this.bigDecimal.amount);\n        } else {\n            this.displayValue = this.value;\n        }\n    }\n\n    canSetType(): boolean\n    {\n        return true;\n    }\n\n    onKeyDown(el: any): void\n    {\n        if (this._type === 'number') {\n            this.displayValue = el.value;\n            this.onModelChanged(this.displayValue);\n        }\n    }\n\n    onBlur(el: any): void\n    {\n        if (this._type === 'number') {\n            this.bigDecimal = new BigDecimal(Number(el.value));\n            this.displayValue = this.formatNumber(this.bigDecimal.amount);\n            this.onModelChanged(this.displayValue);\n        }\n    }\n\n    writeValue(value: any)\n    {\n        if (value !== this.displayValue) {\n            this.value = value;\n            this.displayValue = '';\n            if (this.value) {\n                this.displayValue = this.value;\n            }\n            this.formControl.setValue(value, {onlySelf: true});\n        }\n    }\n\n    /**\n     * Format the number object according to its precision.\n     *\n     */\n    formatNumber(value: any)\n    {\n        if (!value) {\n            return '';\n        }\n\n        // If precision is present, use it for format the bigDecimal value for display.\n        if (isPresent(this.precision) &&\n            this._type === 'number')\n        {\n            // The default precision is 2. For example, 10.23.\n            let digits = '1.0-2';\n            digits = '1.0-' + this.precision;\n            return this.decimalPipe.transform(value, digits);\n        }\n        return value;\n    }\n\n    ngOnDestroy(): void\n    {\n        super.ngOnDestroy();\n\n        if (isPresent(this.vchSubscriber)) {\n            this.vchSubscriber.unsubscribe();\n        }\n    }\n}\n\n/**\n * BigDecimal object is represented as a value, locale, and currencyCode\n */\nexport class BigDecimal implements Value\n{\n    uniqueName: string;\n\n    constructor(public readonly amount: number = 0,\n                public readonly locale: string = 'en_US')\n    {\n    }\n\n\n    getTypes(): any\n    {\n        return {\n            amount: Number,\n            locale: String\n        };\n    }\n\n    className(): string\n    {\n        return 'BigDecimal';\n    }\n\n    $proto(): BigDecimal\n    {\n        return new BigDecimal(1, 'en_US');\n    }\n\n    toString(): string\n    {\n        return this.amount + ', locale: ' + this.locale;\n    }\n\n\n    clone(data: { amount?: number, locale?: string } = {}): BigDecimal\n    {\n        return new BigDecimal(\n            isPresent(data.amount) ? data.amount : this.amount,\n            isPresent(data.locale) ? data.locale : this.locale);\n    }\n\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {StringComponent} from './string.component';\n\n@NgModule({\n    declarations: [\n        StringComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    entryComponents: [\n        StringComponent\n    ],\n    exports: [\n        StringComponent\n    ],\n    providers: []\n})\nexport class AWStringFieldModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {InputTextModule} from 'primeng/components/inputtext/inputtext';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {InputFieldComponent} from '../input-field/input-field.component';\nimport {AWStringFieldModule} from '../string/string.module';\n\n@NgModule({\n    declarations: [\n        InputFieldComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule,\n        AWStringFieldModule\n    ],\n    entryComponents: [\n        InputFieldComponent\n    ],\n    exports: [\n        InputFieldComponent,\n        AWStringFieldModule,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWInputFieldModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ContentChild, EventEmitter, Input, Output, TemplateRef} from '@angular/core';\nimport {BaseComponent} from '../../core/base.component';\nimport {AppConfig, Environment, isBlank, isPresent} from '@aribaui/core';\n\n\n/**\n *\n * basic navigation bar provide a main action buttons for its content (page level buttons).\n * This is not the Top level application navigation. This component provides by default action OK,\n * CANCEL and you are free to modify how the OK or CANCEL will be call as well as subscribe to the\n * event. Or you can provide your own buttons template which will be used instead of this default\n * one.\n *\n *\n *\n *\n *\n * ### Example 1:\n *\n * In order to use navigation bar in its basic usage you can do following:\n * this will render buttons on the top as well as on the bottom around the content.\n *\n *\n *  ```html\n *\n *      <aw-basic-navigator [brandImg]=\"'img/aribalogobal.png'\">\n *\n *            <div class=\"container\">\n *                <form>\n *                    User name: <input type=text value=\"peter.pan\">\n *                </<form>>\n *            </div>\n *      </aw-basic-navigator>\n *\n *\n * ```\n *\n *  if you do not want button on the top or bottom you can say thi using binding showTop or\n * showBottom.\n *\n *\n * ### Example 2:\n *  In this example we are providing custom buttons as well as brank section\n *\n *\n *  ```html\n *\n *\n *      <aw-basic-navigator [brandImg]=\"'img/aribalogobal.png'\">\n *            <ng-template #buttons>\n *                <ul class=\"nav navbar-nav float-md-right collapse navbar-toggleable-xs\">\n *                    <li class=\"nav-item \">\n *                        <button class=\"btn btn-secondary\" type=\"button\"\n * (click)=\"onSaveAction($evemt)\">Cancel</button>\n *                    </li>\n *                    <li class=\"nav-item active\">\n *                        <button class=\"btn btn-primary\" type=\"button\"\n * (click)=\"onCancelAction($event)\"> Save\n *                        </button>\n *                    </li>\n *                </ul>\n *            </ng-template>\n *\n *            <ng-template #brand>\n *                <span class=\"brand-title\">Ariba</span>\n *            </ng-template>\n *\n *\n *            <div class=\"container\">\n *                <form>\n *                    User name: <input type=text value=\"peter.pan\">\n *                </<form>>\n *            </div>\n *      </aw-basic-navigator>\n *\n *\n * ```\n\n *\n */\n@Component({\n    selector: 'aw-basic-navigator',\n    template: `<p-toolbar *ngIf=\"showTop\" [class]=\"'w-basic-navigator'\">\n    <div class=\"ui-toolbar-group-left\">\n\n        <a class=\"nav-brand\" href=\"#\" *ngIf=\"showBrand\">\n            <ng-template [ngIf]=\"!hasBrandTemplate()\">\n                <img src=\"{{assetFolder}}/{{brandImg}}\" height=\"30\" alt=\"\">\n                <span class=\"nav-brand-title\">Ariba</span>\n            </ng-template>\n\n            <ng-template [embeddedItem]=\"brandTemplate\" [item]=\"context\"\n                         *ngIf=\"hasBrandTemplate()\"></ng-template>\n        </a>\n\n    </div>\n\n    <div class=\"ui-toolbar-group-right\">\n        <ng-template [ngIf]=\"!hasButtonTemplate()\">\n\n            <aw-button *ngIf=\"showCancelButton\" [style]=\"'secondary'\"\n                       (action)=\"onCancelAction.emit($event)\">\n                {{cancelActionLabel}}\n            </aw-button>\n\n            <aw-button (action)=\"onOKAction.emit($event)\">\n                {{okActionLabel}}\n            </aw-button>\n\n\n        </ng-template>\n        <ng-template [embeddedItem]=\"buttonsTemplate\" [item]=\"context\"\n                     *ngIf=\"hasButtonTemplate()\"></ng-template>\n    </div>\n\n</p-toolbar>\n\n<ng-content></ng-content>\n\n<p-toolbar *ngIf=\"showBottom\">\n\n    <div class=\"ui-toolbar-group-right\">\n        <ng-template [ngIf]=\"!hasButtonTemplate()\">\n\n            <aw-button *ngIf=\"showCancelButton\" [style]=\"'secondary'\"\n                       (action)=\"onCancelAction.emit($event)\">\n                {{cancelActionLabel}}\n            </aw-button>\n\n            <aw-button (action)=\"onOKAction.emit($event)\">\n                {{okActionLabel}}\n            </aw-button>\n        </ng-template>\n        <ng-template [embeddedItem]=\"buttonsTemplate\" [item]=\"context\"\n                     *ngIf=\"hasButtonTemplate()\"></ng-template>\n    </div>\n\n</p-toolbar>\n\n\n\n`,\n    styles: [`a.nav-brand{vertical-align:middle;line-height:inherit;text-decoration:none;color:#2d353c}a.nav-brand:focus,a.nav-brand:hover{text-decoration:none}a.nav-brand span{vertical-align:middle}.nav-brand img{display:inline-block;vertical-align:middle;padding:3px}`]\n})\nexport class BasicNavigatorComponent extends BaseComponent\n{\n\n    /**\n     * Indicates that buttons will be rendered on the top\n     *\n     * Default value is TRUE\n     *\n     */\n    @Input()\n    showTop: boolean = true;\n\n\n    /**\n     * Indicates that buttons will be rendered on the bottom\n     *\n     * Default value is TRUE\n     *\n     */\n    @Input()\n    showBottom: boolean = true;\n\n    /**\n     * Indicates that brand section that is on the left side and only in the top bar is visible\n     *\n     * Default value is TRUE\n     *\n     */\n    @Input()\n    showBrand: boolean = true;\n\n    /**\n     * Relative path to a image. Images are saved inside assets folder.\n     *\n     */\n    @Input()\n    brandImg: string;\n\n    /**\n     * If you are not using custom buttons you can pass a label to OK action\n     *\n     * Default value is OK\n     */\n    @Input()\n    okActionLabel: string;\n\n    /**\n     * If you are not using custom buttons you can pass a label to Cancel action\n     *\n     * Default value is OK\n     */\n    @Input()\n    cancelActionLabel: string;\n\n\n    /**\n     * Context is an object which is rendered inside nav-bar content. Sometimes there are situation\n     * that you want to render some information from the object inside navigation bar. So you are\n     * free to pass a context object and then access it inside your template\n     *\n     * ```HTML\n     *            <ng-template #brand let-item>\n     *                <span class=\"brand-title\">{{item.firstName}}</span>\n     *            </ng-template>\n     *\n     * ```\n     */\n    @Input()\n    context: any;\n\n\n    @Input()\n    showCancelButton: boolean;\n\n    /**\n     *\n     * EventEmitter that is triggered when you click on default OK Action\n     *\n     */\n    @Output()\n    onOKAction: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     *\n     * EventEmitter that is triggered when you click on default CANCEL Action\n     *\n     */\n    @Output()\n    onCancelAction: EventEmitter<any> = new EventEmitter<any>();\n\n\n    /**\n     * Queries a buttons template if any\n     */\n    @ContentChild('buttons')\n    buttonsTemplate: TemplateRef<any>;\n\n    /**\n     * Queries a brand template if any\n     */\n    @ContentChild('brand')\n    brandTemplate: TemplateRef<any>;\n\n\n\n    constructor(env: Environment, appConfig: AppConfig)\n    {\n        super(env);\n\n        // todo: load this from resource file using ngTranslate service\n        this.okActionLabel = 'OK';\n        this.cancelActionLabel = 'Cancel';\n        this.brandImg = 'images/aribalogobal.png';\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n        if (isBlank(this.showCancelButton)) {\n            this.showCancelButton = this.editable || (this.onCancelAction.observers.length > 0\n                && this.onOKAction.observers.length > 0);\n        }\n    }\n\n\n    /**\n     * Returns if buttonsTemplate is available\n     *\n     */\n    hasButtonTemplate(): boolean\n    {\n        return isPresent(this.buttonsTemplate);\n    }\n\n    /**\n     * Returns if brandTemplate is available\n     *\n     */\n    hasBrandTemplate(): boolean\n    {\n        return isPresent(this.brandTemplate);\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {AfterViewInit, Component, ElementRef, EventEmitter, Input, Output} from '@angular/core';\nimport {Environment, isBlank, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../core/base.component';\n\n/**\n * Button component that implements consistent styling, behavior. Button can be rendered either as\n * a button or as a link. It could be standalone or be part of a form.\n *\n *  ### Example\n *  ```\n *\n *  @Component({\n *    selector: 'registration' ,\n *    template: `\n *\n *   <aw-form-table >\n *       <aw-form-row [label]=\"'Amount'\" [name]=\"'amount'\" [size]=\"'small'\">\n *\n *           <aw-button [type]=\"'submit'\" [name]=\"'button'\"\n *                     (action)=\"onClicked($event)\" [value]=\"command\"\n *                     [style]=\"'warning'\" >Button</aw-button>\n *       </aw-form-row>\n *   </aw-form-table>\n *\n *    `\n *    })\n *    export class MyComponent\n *    {\n *        command:boolean;\n *\n *        constructor ()\n *        {\n *        }\n *\n *        onClicked(value:string) {\n *           if (value) {\n *              // submit form.\n *           }\n *        }\n *    }\n */\n@Component({\n    selector: 'aw-button',\n    template: `<button\n    pButton\n    [attr.type]=\"type\"\n    [attr.name]=\"name\"\n    [ngClass]=\"buttonClass\"\n    [disabled]=\"disabled\"\n    [attr.value]=\"value\"\n    (click)=\"clicked($event)\">\n\n    <ng-content></ng-content>\n</button>\n`,\n    styles: [`.ui-button-link{color:#337ab7;font-weight:400;border-radius:0;background-color:transparent}.ui-button-link,.ui-button-link.active,.ui-button-link:active,.ui-button-link:focus,.ui-button-link:hover,.ui-button-link[disabled]{border-color:transparent}.ui-button-link:focus,.ui-button-link:hover{color:#337ab7;-webkit-text-decoration:#337ab7;text-decoration:#337ab7;background-color:transparent}.ui-button-link[disabled]:focus,.ui-button-link[disabled]:hover{color:#2399e5;text-decoration:none}.ui-button{margin-right:5px}.btn-mid{height:36px;padding:5px 10px}.btn-lg{height:42px;font-size:16px;padding:5px 12px}.btn-sm{height:30px;font-size:12px;padding:5px 10px}`]\n})\nexport class ButtonComponent extends BaseComponent implements AfterViewInit\n{\n\n    /**\n     * Button types  [ button | submit | reset ]\n     *\n     */\n    @Input()\n    type: string = 'button';\n\n    /**\n     * Name for this button. Can be used to lookup component in form.\n     */\n    @Input()\n    name: string;\n\n\n    /**\n     * styling for this button. See ButtonStyle for all supported styles.\n     */\n    @Input()\n    style: ButtonStyle = 'primary';\n\n\n    /**\n     * sizing for this button. [large, normal, small].\n     */\n    @Input()\n    size: ButtonSize = 'normal';\n\n    /**\n     * Specify the target of the button. [_blank | _self | _parent | _top | framename ]\n     */\n    @Input()\n    target: string;\n\n    /**\n     * Value to be send to server when clicked.\n     */\n    @Input()\n    value: string;\n\n    /**\n     * Event fired when user select a item\n     */\n    @Output()\n    action: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * PrimeNg button simply does not support content so we need to get around it\n     */\n    label: string;\n\n    /**\n     * Internal CSS class that styles this button based on input 'style' and 'size'\n     */\n    buttonClass: string;\n\n    constructor(protected element: ElementRef, public env: Environment)\n    {\n        super(env);\n\n        // Default button class is secondary.\n        this.buttonClass = 'ui-button-secondary';\n\n        // Default disabled\n        this.disabled = false;\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n        // How to style this button.\n        if (isPresent(this.style)) {\n            if (this.style === 'primary') {\n                // Default .ui-button and .ui-button-primary get the same style.\n                // .ui-button-primary is necessary because button style can be overridden\n                // when included inside other widgets. So specify primary\n                this.buttonClass = 'ui-button-primary';\n            } else {\n                this.buttonClass = 'ui-button-' + this.style;\n            }\n        }\n\n        // Determine the button class based on input size.\n        if (this.size) {\n\n            switch (this.size) {\n                case 'large' :\n                    this.buttonClass += ' btn-lg';\n                    break;\n                case 'normal' :\n                    this.buttonClass += ' btn-mid';\n                    break;\n                case 'small' :\n                    this.buttonClass += ' btn-sm';\n                    break;\n            }\n        }\n    }\n\n\n    /**\n     * This is little hacky hackity hack as currently primeng button directive does not work with\n     * ngcontent projection but it has a label bindings, which is not the way developers work with\n     * button. you want to\n     *\n     * <button> MY CONTENT</button instead of <button label='MyContent'></button>\n     *\n     *\n     * @Todo: Change this until the time keep a test that check that they are still using ui-button\n     *     that we are expecting and replacing\n     */\n    ngAfterViewInit(): void\n    {\n        if (isPresent(this.element)) {\n            let button = this.element.nativeElement.querySelector('button');\n            let buttonTitle = button.children[0];\n            button.children[0].textContent = this.element.nativeElement.textContent.trim()\n                .replace('ui-button', '').replace('ui-btn', '');\n\n            button.classList.remove('ui-button-text-empty');\n            button.textContent = '';\n            button.appendChild(buttonTitle);\n        }\n    }\n\n    /**\n     *  Action clicked. Call parent action.\n     */\n    clicked($event: any)\n    {\n        this.action.emit(isBlank(this.value) ? $event : this.value);\n    }\n}\n\n\n/**\n * Supported Button Style\n */\nexport type ButtonStyle = 'info' | 'primary' | 'secondary' | 'warning' | 'success' | 'danger' |\n    'link';\n\n/**\n * Supported Button Size\n */\nexport type ButtonSize = 'large' | 'normal' | 'small';\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonComponent} from './button.component';\nimport {ButtonModule} from 'primeng/primeng';\n\n\n@NgModule({\n    declarations: [\n        ButtonComponent\n    ],\n    imports: [\n        CommonModule,\n        ButtonModule,\n\n    ],\n    entryComponents: [\n        ButtonComponent\n    ],\n    exports: [\n        ButtonComponent\n    ],\n    providers: []\n})\nexport class AWButtonModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BasicNavigatorComponent} from './basic-navigator.component';\nimport {ToolbarModule} from 'primeng/primeng';\nimport {AWButtonModule} from '../button/button.module';\nimport {AWCoreComponentModule} from '../../core/core.module';\n\n\n@NgModule({\n    declarations: [\n        BasicNavigatorComponent\n    ],\n    imports: [\n        CommonModule,\n        ToolbarModule,\n        AWButtonModule,\n        AWCoreComponentModule\n\n    ],\n    exports: [\n        BasicNavigatorComponent\n    ],\n    providers: []\n})\nexport class AWBasicNavigatorModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {\n    Component,\n    ContentChild,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {BaseComponent} from '../../core/base.component';\nimport {Environment, isBlank, isPresent} from '@aribaui/core';\n\n\n@Directive({\n    selector: `aw-card-top`,\n    host: {\n        'class': 'w-card-ztop'\n    }\n})\nexport class CardZoneTopComponent\n{\n}\n\n@Directive({\n    selector: `aw-card-bottom`,\n    host: {\n        'class': 'w-card-zbottom'\n    }\n})\nexport class CardZoneBottomComponent\n{\n}\n\n/**\n *\n * Card component is a container rendering its content inside 3 different zones.\n *\n *  ------------------------------------------\n *  |   TITLE                       | ACTION |\n *  |-----------------------------------------\n *  |                                        |\n *  |   TOP                                  |\n *  |                                        |\n *  ------------------------------------------\n *  |                                        |\n *  |   BOTTOM                               |\n *  |                                        |\n *  |                                        |\n *  ------------------------------------------\n *\n *\n *  There are 3 zones  + 1 placeholder for the actionIcon\n *\n *  Cards can be selectable which means when you click on it there will be rendered a border with\n *  a check mark inside Action zone (this is default behavior).\n *  You can use [selectable] binding to disable this, in such case card will have just a border\n *  without any check mark.\n *\n *  Cards can also contain custom Action which is rendered inside ACTION zone and on the\n *  application level you can listen for (click) events as well as you can provide your own action\n *  icon\n *\n *  Besides ACTION, TITLE, TOP and BOTTOM content zones cards support hover overlay effect and\n *  when its activated there is a overlay displayed on top of the card with Icon in the middle.\n *  Please note when [hasHover] is TRUE all the actions and selectability are disabled as there is\n *  only one action which click on the hover overlay.\n *\n *\n * ###example 1:\n *  Basic hover card which by default support selectable mode\n *\n * ```\n *          <aw-card #card1 [hasAction]=\"false\" [width]=\"'202px'\" [height]=\"'154px'\">\n *\n *                 <aw-card-title [align]=\"'bottom-left'\">\n *                     <span class=\"a-supplier-tag\">\n *                         Preferred\n *                     </span>\n *                 </aw-card-title>\n *\n *                 <aw-card-top>\n *                     <div class=\"supplierName\">\n *                         Haight Pumps\n *                     </div>\n *                     <div class=\"supplierLocation\">\n *                         Palo Alto, CA, USA\n *                     </div>\n *                 </aw-card-top>\n *\n *                 <aw-card-bottom class=\"w-card-zbottom\">\n *                     some text about the supplier and his parents<br/>\n *                     and some contacts\n *                 </aw-card-bottom>\n *\n *             </aw-card>\n *\n * ```\n *\n *  ###example 2:\n *   Hover card with custom action. when unselected action will appear and user can click on it.\n *\n * ```\n *          <aw-card #card1 [selectable]=\"true\" [actionIcon]=\"'icon-question-mark'\"\n *                     (onAction)=\"onAction(3, $event)\">\n *\n *                 <aw-card-title [align]=\"'bottom-left'\">\n *                     <span class=\"a-supplier-tag\">\n *                         Preferred\n *                     </span>\n *                 </aw-card-title>\n *\n *                 <aw-card-top>\n *                     <div class=\"supplierName\">\n *                         Haight Pumps\n *                     </div>\n *                     <div class=\"supplierLocation\">\n *                         Palo Alto, CA, USA\n *                     </div>\n *                 </aw-card-top>\n *\n *                 <aw-card-bottom class=\"w-card-zbottom\">\n *                     some text about the supplier and his parents<br/>\n *                     and some contacts\n *                 </aw-card-bottom>\n *\n *             </aw-card>\n *\n * ```\n *\n *\n *\n */\n@Component({\n    selector: 'aw-card',\n    template: `<div class=\"w-card\" [style.width]=\"width\" [style.height]=\"height\"\n     [class.u-is-hover]=\"hasHover\"\n     (mouseenter)=\"onHover(true)\"\n     (mouseleave)=\"onHover(false)\"\n     [class.u-card-selected]=\"selected\"\n     [class.u-card-unselected]=\"!selected\"\n     [ngClass]=\"styleClass\"\n>\n\n    <div class=\"card-body ui-g\"  *ngIf=\"!showBodyTemplate()\">\n        <!-- Hover element that is triggered by mouseenter, mouseleave events-->\n        <div #hoverDiv *ngIf=\"hasHover\" class=\"u-card-hover\" (click)=\"onHoverAction.emit($event)\">\n            <span [style.width]=\"'100%'\" class=\"sap-icon\" [ngClass]=\"hoverIcon\"></span>\n        </div>\n        <!-- HEADER HAVING TITLE AND ICONS/ACTIONS-->\n        <div class=\"ui-g-12 ui-g-nopad w-card-header\">\n            <div class=\"w-card-ztitle ui-g-nopad\" (click)=\"toggleSelect($event)\"\n                 [class.u-card-pointer]=\"selectable\"\n                 [ngClass]=\"{'ui-g-9': hasAction || selectable, 'ui-g-11': !hasAction && !selectable}\">\n                <ng-content select=\"aw-card-title\"></ng-content>\n            </div>\n\n            <div *ngIf=\"hasAction || selectable\" class=\"w-card-zaction ui-g-nopad ui-g-3\">\n\n                <span *ngIf=\"selected && selectable\" class=\"sap-icon selection\"\n                      [class.u-card-pointer]=\"selectable\"\n                      [class.u-card-action-bg]=\"selected\"\n                      (click)=\"toggleSelect($event)\"\n                      [ngClass]=\"selectedIcon\"></span>\n\n\n                <span *ngIf=\"hasAction && (!selected || !selectable) \"\n                      class=\"sap-icon action\"\n                      [class.u-card-pointer]=\"true\"\n                      (click)=\"onActionClick($event)\"\n                      [ngClass]=\"actionIcon\"\n                ></span>\n            </div>\n        </div>\n\n        <!--TOP CARD SECTION-->\n        <div class=\"w-card-ztop ui-g-nopad ui-g-12 \"\n             (click)=\"toggleSelect($event)\"\n             [class.u-card-pointer]=\"selectable\">\n            <ng-content select=\"aw-card-top\"></ng-content>\n        </div>\n\n        <div class=\"ui-g-12 ui-g-nopad w-card-line-divider  \" *ngIf=\"showBottomSection()\"></div>\n        <!--BOTTOM CARD SECTION-->\n        <div *ngIf=\"showBottomSection()\" class=\"ui-g-12 ui-g-nopad w-card-zbottom\"\n             [class.u-card-pointer]=\"selectable\"\n             (click)=\"toggleSelect($event)\">\n            <ng-content select=\"aw-card-bottom\"></ng-content>\n        </div>\n    </div>\n\n    <div *ngIf=\"showBodyTemplate()\" class=\"w-card-user-cnt\" >\n        <ng-container *ngTemplateOutlet=\"bodyTemplate\">\n        </ng-container>\n    </div>\n\n</div>\n`,\n    styles: [`.w-card{border:2px solid #0076cb;display:inline-block;overflow:hidden;color:#636363;box-sizing:border-box}.w-card-header{position:relative;height:30px;padding-left:1em}.w-card-ztitle{height:100%;padding-top:3px}.w-card-ztitle ::ng-deep .w-card-title{height:100%;width:100%;display:flex}.w-card-ztitle ::ng-deep .w-card-title>*{flex:0 1}.w-card-zaction{height:100%;display:inline-block;text-align:right}.w-card-zaction .sap-icon{width:29px;height:29px;text-align:center;display:inline-block;font-size:1.5em;line-height:1.4em}.w-card-zaction .sap-icon.selection{color:#fff}.w-card-zaction .sap-icon.action{color:#969696}.w-card-zbottom,.w-card-ztop{padding:1em}.w-card-line-divider{border-top:1px solid #d6d6d6;margin:0 14px}.w-card-user-cnt{width:100%;height:100%;position:relative;background-color:#eee}.u-card-hover{position:absolute;height:100%;width:100%;opacity:0;transition:.5s ease;background-color:#0076cb;z-index:100}.u-card-hover .sap-icon{text-align:center;display:inline-block;font-size:4em;color:#fff;position:relative;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.u-card-action-bg{background:#0076cb}.u-is-hover{position:relative}.u-card-selected{border-color:#0076cb}.u-card-unselected{border-color:#d7d7d7}.u-card-hover,.u-card-pointer{cursor:pointer}`]\n})\nexport class CardComponent extends BaseComponent\n{\n    /**\n     * Tells if we should explicitly hide the action\n     *\n     */\n    @Input()\n    hasAction: boolean = false;\n\n    /**\n     *\n     * Is selectable mode supported? Saying Yes, card will have by default check-mark in the\n     * ACTION zone when selected\n     *\n     */\n    @Input()\n    selectable: boolean = true;\n\n    /**\n     * Option to pass custom \"Card Selected\" Icon\n     *\n     */\n    @Input()\n    selectedIcon: string = 'icon-accept';\n\n    /**\n     * There is no default value for action icon, when application want to add action to the card\n     * it must also provide a icon\n     *\n     */\n    @Input()\n    actionIcon: string;\n\n    /*\n     * Enable and disables hover effect on top of the card\n     */\n    @Input()\n    hasHover: boolean = false;\n\n    /**\n     *\n     * Default icon name for the hover overlay. This icons shows up in the middle over the card\n     * vertically and horizontally centered\n     *\n     */\n    @Input()\n    hoverIcon: string = 'icon-add';\n\n\n    /**\n     *  Selection state\n     *\n     */\n    @Input()\n    selected: boolean = true;\n\n\n    /**\n     * Fired when the card is selected.\n     *\n     */\n    @Output()\n    onSelect: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Fired when action icon is clicked.\n     *\n     */\n    @Output()\n    onAction: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Fired when the user clicks on the hover overlay.\n     *\n     */\n    @Output()\n    onHoverAction: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * This query is used to save the content reference to bottom section if any\n     */\n    @ContentChild(CardZoneBottomComponent)\n    bottom: CardZoneBottomComponent;\n\n\n    /**\n     * Provides custom template for the body which is under application developer control.\n     */\n    @ContentChild('body')\n    bodyTemplate: TemplateRef<any>;\n\n\n    @ViewChild('hoverDiv')\n    hoverDiv: ElementRef;\n\n    /**\n     * Usually when template is provided we want to use it and replace internal one but in this\n     * case it will be always conditional and application developer can switch between default\n     * template with zones and custom one provided by developer.\n     *\n     */\n    useBodyTemplate: boolean = false;\n\n\n    constructor(public env: Environment)\n    {\n        super(env);\n\n        // sets default value\n        this.width = '202px';\n        this.height = '154px';\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        // If application wants to use action it must provide actionIcon\n        if (isBlank(this.actionIcon) && this.hasAction) {\n            throw new Error('You need to provide action icon');\n        }\n\n    }\n\n    public showBottomSection()\n    {\n        return isPresent(this.bottom);\n    }\n\n\n    /**\n     * fires select and unselect event.\n     */\n    toggleSelect(event: any)\n    {\n        if (!this.selectable) {\n            event.preventDefault();\n            event.stopPropagation();\n\n        } else {\n            this.selected = !this.selected;\n            this.onSelect.emit(this.selected);\n        }\n    }\n\n    /**\n     *\n     * Only fired when action is rendered and user clicks on custom actionIcon\n     *\n     */\n    onActionClick(event: any)\n    {\n        if (this.hasAction && (!this.selected || !this.selectable)) {\n            this.onAction.emit(this.selected);\n        }\n    }\n\n    /**\n     * Triggered  when hover effect is on + user click on the card\n     *\n     */\n    onHover(isEnter: boolean): void\n    {\n        if (isPresent(this.hoverDiv)) {\n            this.hoverDiv.nativeElement.style.opacity = isEnter ? 0.5 : 0;\n        }\n    }\n\n    /**\n     *\n     * Used to decide if we should render implicit card template with our zones or\n     * user provided template\n     *\n     */\n    showBodyTemplate(): boolean\n    {\n        return isPresent(this.bodyTemplate)  && this.useBodyTemplate;\n    }\n\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {Directive, ElementRef, Input} from '@angular/core';\nimport {BaseComponent} from '../../../core/base.component';\nimport {Environment} from '@aribaui/core';\n\n\n/**\n * Maps our internal alignment value to real css values\n *\n */\nconst VAlignMap = {\n    'top-left': 'flex-start',\n    'top-center': 'flex-start',\n    'top-right': 'flex-start',\n    'center-left': 'center',\n    'center-center': 'center',\n    'center-right': 'center',\n    'bottom-left': 'flex-end',\n    'bottom-center': 'flex-end',\n    'bottom-right': 'flex-end'\n};\n\n\nconst HAlignMap = {\n    'top-left': 'flex-start',\n    'top-center': 'center',\n    'top-right': 'flex-end',\n    'center-left': 'flex-start',\n    'center-center': 'center',\n    'center-right': 'flex-end',\n    'bottom-left': 'flex-start',\n    'bottom-center': 'center',\n    'bottom-right': 'flex-end'\n};\n\n\n/**\n * Title zone provides a content placeholder for the Title Area. This zone is adding ability\n * to align its content into 9 different position.\n *\n * You can use this Title zone within <aw-card> as:\n *\n *\n * ```html\n *\n *  <aw-card  [width]=\"'202px'\" [height]=\"'154px'\" [hasHover]=\"true\"\n *                       [selectable]=\"false\" [hasAction]=\"false\"\n *                  (onHoverAction)=\"onAction(7, $event)\" >\n *\n *                  <aw-card-title [align]=\"'bottom-left'\">\n *                      <span class=\"a-supplier-tag\">\n *                          Preferred\n *                      </span>\n *                  </aw-card-title>\n *\n *   </aw-card>\n *\n * ```\n * Default alignment is top-left\n *\n *\n *\n *\n */\n@Directive({\n    selector: `aw-card-title`,\n    host: {\n        'class': 'w-card-title'\n    }\n})\nexport class CardZoneTitleComponent extends BaseComponent\n{\n    /**\n     * Special property which is used to apply flex properties for aligning content vertically\n     * as well as horizontally\n     *\n     */\n    @Input()\n    align: CardTitleAlignment = 'top-left';\n\n\n    constructor(public env: Environment, public elem: ElementRef)\n    {\n        super(env);\n\n    }\n\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n\n        this.elem.nativeElement.style.alignItems = VAlignMap[this.align];\n        this.elem.nativeElement.style.justifyContent = HAlignMap[this.align];\n    }\n}\n\n\n/**\n * Make sure we dont accept any unsupported values. These values maps to the HAlignMap and\n * VAlignMap in order to get real css value for the flex alignment\n */\nexport type CardTitleAlignment = 'top-left' | 'top-center' | 'top-right' | 'center-left' |\n    'center-center'  | 'center-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent, CardZoneBottomComponent, CardZoneTopComponent} from './card.component';\nimport {CardZoneTitleComponent} from './card-title/card-title.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        CardComponent,\n        CardZoneTitleComponent,\n        CardZoneTopComponent,\n        CardZoneBottomComponent\n    ],\n    entryComponents: [\n        CardComponent\n    ],\n    exports: [\n        CardComponent,\n        CardZoneTitleComponent,\n        CardZoneTopComponent,\n        CardZoneBottomComponent\n    ],\n    providers: []\n})\nexport class AWCardModule\n{\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SimpleChanges,\n    SkipSelf\n} from '@angular/core';\nimport {FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Environment, isBoolean, isPresent} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\n\n\n/**\n *  CheckboxType describes what type of checkbox is this:\n *\n * - Form type: that is writing and reading a value from/to model both using FormGroup as well\n *              as ngModel\n * - Action type:  only fires action and does not write value to model.\n *\n *\n */\nexport type CheckboxType = 'form' | 'action';\n\n/**\n *\n * Implements standard HTML checkbox on top of PrimeNG. There are 2 types of\n * {@link CheckboxComponent}: form and action checkbox as described above.\n *\n *\n * Usage: Basic example having red checkbox checked\n *\n * ```HTML\n *        <aw-checkbox [name]=\"'color'\" [value]=\"'red'\" [label]=\"'Red'\"\n *                                        [(ngModel)]=\"model\">\n *        </aw-checkbox>\n *        <aw-checkbox [name]=\"'color'\" [value]=\"'blue'\" [label]=\"'Blue'\"\n *                                        [(ngModel)]=\"model\">\n *       </aw-checkbox>\n *\n * ```\n *\n * ```ts\n *\n *\n *   class CBBasicWithNgModelComponent\n *   {\n *\n *       model: string[] = ['red'];\n *\n *       constructor()\n *       {\n *       }\n *   }\n *\n * ```\n *\n * For more examples please see a playground or unit test.\n *\n */\nexport const CB_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-checkbox',\n    template: `<span class=\"w-checkbox\">\n\n    <ng-template [ngIf]=\"editable && isFormType()\">\n        <p-checkbox [name]=\"name\" [value]=\"value\" [label]=\"label\"\n                    [(ngModel)]=\"model\"\n                    [binary]=\"isBinary\"\n                    (onChange)=\"onChange($event)\"\n                    [disabled]=\"disabled\"\n                    [class.u-validation-error]=\"!(formControl.valid || (formControl.pristine))\"\n        >\n        </p-checkbox>\n    </ng-template>\n\n\n    <ng-template [ngIf]=\"!isFormType()\">\n        <p-checkbox [binary]=\"isBinary\"\n                    [label]=\"label\"\n                    [(ngModel)]=\"model\"\n                    (onChange)=\"onChange($event)\"\n                    [disabled]=\"disabled\">\n        </p-checkbox>\n\n    </ng-template>\n</span>\n`,\n    styles: [`/deep/ .ui-chkbox .ui-chkbox-box{width:22px;height:22px}/deep/ .ui-chkbox .pi{font-family:\"SAP icon fonts\";color:#199de0;cursor:pointer;font-size:1.07em;line-height:1.42em}/deep/ .ui-chkbox .pi.pi-check:before{content:'\\\\e05b'}`],\n\n    providers: [\n        CB_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => CheckboxComponent)}\n    ]\n})\nexport class CheckboxComponent extends BaseFormComponent\n{\n\n    /**\n     *\n     * A value associated with this checkbox\n     *\n     */\n    @Input()\n    value: any = '';\n\n\n    /**\n     * Type of checkbox. Form based updates model and Action based only fires click events\n     *\n     */\n    @Input()\n    type: CheckboxType = 'form';\n\n\n    /**\n     * Label to be used when rendering a checkbox\n     */\n    @Input()\n    label: string;\n\n\n    /**\n     * Trigger click event.\n     *\n     */\n    @Output()\n    action: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * PrimeNG has this type called binary which works only with Boolean meaning it does not add or\n     * remove values.\n     *\n     * In our case Checktype = Action is always binary or when this.value is boolean\n     *\n     */\n    isBinary: boolean = false;\n\n    /**\n     * Internal model for checkbox\n     */\n    model: any;\n\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n    ngOnInit()\n    {\n        this.model = this.value;\n        this.type = this.action.observers.length > 0 ? 'action' : this.type;\n\n        if (this.isFormType()) {\n            super.ngOnInit();\n\n            if (this.isStandalone) {\n                super.registerFormControl(this.value);\n                this.model = this.formControl.value;\n                this.onModelChanged(this.model);\n            } else {\n                // get control from parent\n                this.formControl = <FormControl> this.formGroup.controls[this.name];\n            }\n        }\n        // When value is boolean we are dealing with PrimeNg Binary checkbox\n        // which only sets TRUE/FALSE and does not add or remove values\n        this.isBinary = isBoolean(this.value);\n\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        super.ngOnChanges(changes);\n\n        if (isPresent(changes['value']) &&\n            (changes['value'].currentValue !== changes['value'].previousValue)) {\n            this.model = changes['value'].currentValue;\n        }\n\n\n    }\n\n    /**\n     * Called when Checkbox is clicked and it either fire action or updates the model.\n     *\n     */\n    onChange(event: any): void\n    {\n        if (this.isFormType()) {\n            this.onModelChanged(this.model);\n            if (this.isStandalone) {\n                this.formControl.setValue(this.model);\n            }\n        } else {\n            this.action.emit(event);\n        }\n    }\n\n\n    /**\n     *\n     * Tell if we are using Form Checkbox. This is used remove some of the bindings that are not\n     * applicable for certain type.\n     *\n     */\n    isFormType(): boolean\n    {\n        return this.type === 'form';\n    }\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any)\n    {\n        if (value !== this.model && this.isFormType()) {\n            this.model = value;\n\n            if (this.isStandalone) {\n                this.onModelChanged(this.model);\n                this.formControl.setValue(this.model);\n            }\n        }\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CheckboxComponent} from './checkbox.component';\nimport {CheckboxModule} from 'primeng/primeng';\n\n\n@NgModule({\n    declarations: [\n        CheckboxComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CheckboxModule\n    ],\n\n    entryComponents: [\n        CheckboxComponent\n    ],\n    exports: [\n        CheckboxComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWCheckBoxModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterContentInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf\n} from '@angular/core';\nimport {Environment, equals, isBlank, isPresent} from '@aribaui/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\n\n\n/**\n *  Checkbox list is a wrapper class around 'Checkbox' component to simply assembly of multi choice\n * component\n *\n * In Addition it adds ability to work with complex object. PrimeNG checkboxes work only with\n * primitive values.\n *\n * @see {@link check-box/check-box.component.ts}\n *\n *\n * ### Example\n *\n *\n *    @Component({\n *       selector: 'showCheckBoxList' ,\n *       template: `\n *           <aw-checkbox-list [list]=\"checkBoxListValues\" [selections]=\"selectedValues\"\n *\n *            [name]=\"'myColors'\" [formGroup]=\"formGroup\" (onSelection)=\"onCBClick\">\n *           </aw-checkbox-list>\n *       `\n *\n *       })\n *        class MyShowCLComponent\n *        {\n *            checkBoxListValues: string[] = ['blue' , 'red' , 'yellow' , 'orange' , 'white' ,\n *     'silver' , 'black' ,\n *            'Green' , 'Gray' , 'Navy' , 'Olive' , 'Aqua' , 'Purple'];\n *\n *            selectedValues: string[] = ['blue' , 'Olive' , 'Aqua' , 'Purple'];\n *\n *\n *            formGroup: FormGroup = new FormGroup({});\n *\n *\n *            onCBClick (event): void\n *            {\n *                console.log('onCBClick = ' + event);\n *            }\n *\n *        }\n **\n */\n\n\n\n\nexport const CB_LIST_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckBoxListComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-checkbox-list',\n    template: `<div *ngFor=\"let item of list; let i = index\" class=\"ui-g\">\n\n    <!-- in the future we should be able to to support inline and stack-->\n    <div class=\"ui-g-12\">\n        <aw-checkbox [(ngModel)]=\"model\"\n                     (ngModelChange)=\"onChange($event)\"\n                     [editable]=\"editable\"\n                     [isStandalone]=\"false\"\n                     [name]=\"name\"\n                     [value]=\"i\"\n                     [label]=\"labelValue(item)\">\n\n        </aw-checkbox>\n    </div>\n\n</div>\n\n`,\n    styles: [``],\n\n    providers: [\n        CB_LIST_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => CheckBoxListComponent)}\n    ]\n})\nexport class CheckBoxListComponent extends BaseFormComponent implements AfterContentInit\n{\n    /**\n     * List of values used to render checkboxes. Even we have here type as ANY we internally\n     * support only string at the moment\n     */\n    @Input()\n    list: any[];\n\n\n    /**\n     *  Selections are default CHECKED values passed. e.g. When rendering field favorite colors:\n     * blue, red, yellow you will pass in here blue, red, then checkboxes with value blue, red wil\n     * be rendered as check and yellow unchecked\n     */\n    @Input()\n    selections: any[];\n\n    /**\n     * Fires event when checkbox is selected/clicked. Emits current clicked checkboxed. not the\n     * actuall internal model value in this case array of choices\n     *\n     */\n    @Output()\n    onSelection: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * special expression to format label\n     */\n    @Input()\n    labelFormatter: (value: any) => string;\n\n\n    /**\n     * Internal model\n     */\n    model: any = [];\n\n    constructor(public env: Environment,\n                private cd: ChangeDetectorRef,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        if (isBlank(this.selections)) {\n            this.selections = [];\n        }\n\n        this.registerFormControl(this.selections);\n\n        this.updateModel(this.selections);\n        this.onModelChanged(this.selections);\n    }\n\n\n    ngAfterContentInit(): void\n    {\n        let updatedModel: any[] = [];\n\n        this.model.forEach((index: number) => updatedModel.push(this.list[index]));\n        this.formControl.setValue(updatedModel, {\n            emitEvent: true,\n            emitViewToModelChange: false\n        });\n        this.cd.detectChanges();\n\n    }\n\n\n    /**\n     * Label is extracted into this method so in the future we can play more how we want to display\n     * the value. Since I want to support formatters for each components we might have a chance to\n     * decide how label will look like.\n     *\n     */\n    labelValue(item: any): string\n    {\n        if (isPresent(this.labelFormatter)) {\n            return this.labelFormatter(item);\n        }\n        return item.toString();\n    }\n\n\n    /**\n     * In this version of checkboxes we still expect only primitive types. Keep this functionality\n     * in extra method so we can work with it even now we just return the same value back\n     */\n    value(item: any): any\n    {\n        return item;\n    }\n\n    /**\n     * Delegate event outside of this component and convert indexed model to original objects\n     *\n     */\n    onChange(event: any): void\n    {\n        let updatedModel: any[] = [];\n\n        this.model.forEach((index: number) =>\n        {\n            updatedModel.push(this.list[index]);\n        });\n\n        this.onSelection.emit(updatedModel);\n        this.onModelChanged(updatedModel);\n        this.formControl.setValue(updatedModel, {\n            emitEvent: true,\n            emitViewToModelChange: false\n        });\n    }\n\n\n    /**\n     * Since we might be dealing with complex object store only INDEXes number in the model.\n     *\n     */\n    updateModel(sourceList: any[]): void\n    {\n        sourceList.forEach((item: any) =>\n        {\n            let index = this.list.findIndex((elem: any) =>\n            {\n                return equals(item, elem);\n            });\n            this.model.push(index);\n        });\n    }\n\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any)\n    {\n        if (isPresent(this.model) && isPresent(value)) {\n            let newModel = value;\n            this.updateModel(newModel);\n\n            // this.cd.markForCheck();\n        }\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CheckBoxListComponent} from '../check-box-list/check-box-list.component';\nimport {AWCheckBoxModule} from '../checkbox/check-box.module';\n\n\n@NgModule({\n    declarations: [\n        CheckBoxListComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AWCheckBoxModule\n    ],\n\n\n    exports: [\n        CheckBoxListComponent\n    ],\n    providers: []\n})\nexport class AWCheckBoxListModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {BaseComponent} from '../../core/base.component';\nimport {Environment} from '@aribaui/core';\n\n/**\n * Hyperlink component that implements consistent styling, behavior. Hyperlink supports all of the\n * native link functionality. In addition, it supports navigation to components through the action\n * binding.\n *\n *\n * for more info please see class Doc of the:\n *  @see {@link button/button.component.ts}\n *\n *  ### Example\n *  ```\n *\n *  @Component({\n *    selector: 'registration' ,\n *    template: `\n *\n *           <aw-hyperlink  [type]=\"'text/html'\" [name]=\"'link'\"\n *                        (action)=\"onClicked($event)\" [value]=\"customerId\"\n *                        [size]=\"'large'\" >my link</aw-hyperlink>\n *\n *    `\n *    })\n *    export class MyComponent\n *    {\n *        command:boolean;\n *\n *        constructor ()\n *        {\n *        }\n *\n *        onClicked(customerId:string) {\n *           if (customerId) {\n *              // display customer details component.\n *           }\n *        }\n *    }\n */\n@Component({\n    selector: 'aw-hyperlink',\n    template: `<a [attr.type]=\"type\"\n   [attr.href]=\"href\"\n   [attr.rel]=\"rel\"\n   [attr.target]=\"target\"\n   [ngClass]=\"linkClass\"\n   [class.disabled]=\"disabled\"\n   (click)=\"clicked($event)\">\n\n    <ng-content></ng-content>\n</a>\n`,\n    styles: [`.link{color:#0275d8;cursor:pointer}.link.link-bh{color:#0275d8}.link.link-bh:hover{text-decoration:underline;cursor:pointer}.link-sm{font-size:.875em}.link-mid{font-size:1em}.link-lg{font-size:1.25em}.link.disabled{pointer-events:none;cursor:default;color:#ddd}`]\n})\nexport class HyperlinkComponent extends BaseComponent\n{\n\n    /**\n     *    Specifies the media type of the linked document. Mime type\n     *    ex: [text/html | text/csv | image/png | audio/3gpp | ....]\n     */\n    @Input()\n    type: string;\n\n    /**\n     * url for this hyperlink. Can be used to navigate to a component.\n     */\n    @Input()\n    href: string;\n\n    /**\n     * rel for this hyperlink. Specify the relationship of the current document and linked document\n     */\n    @Input()\n    rel: string;\n\n\n    /**\n     * sizing for this link. [large, normal, small].\n     */\n    @Input()\n    size: LinkSize = 'normal';\n\n    /**\n     * Specify the target of the hyperlink. [_blank | _self | _parent | _top | framename ]\n     */\n    @Input()\n    target: string;\n\n    /**\n     * Value to be send to server when clicked.\n     */\n    @Input()\n    value: string;\n\n    /**\n     * Event fired when user select a item\n     */\n    @Output()\n    action: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Internal CSS class that styles this hyperlink based on input 'size'\n     */\n    linkClass: string = 'link';\n\n    constructor(public env: Environment)\n    {\n        super(env);\n\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        // Determine the link class based on input size.\n        if (this.size) {\n            switch (this.size) {\n                case 'large' :\n                    this.linkClass += ' link-lg';\n                    break;\n                case 'normal' :\n                    this.linkClass += ' link-mid';\n                    break;\n                case 'small' :\n                    this.linkClass += ' link-sm';\n                    break;\n            }\n        }\n\n        // If I have an action tag, and no href. We add default styling and behavior.\n        if (this.action.observers.length > 0) {\n            this.linkClass += ' link-bh';\n        }\n\n    }\n\n    /**\n     *  Action clicked. Call parent action.\n     */\n    clicked(event: any)\n    {\n        this.action.emit({\n            event: event,\n            value: this.value\n        });\n    }\n}\n\n/**\n * Supported Link Size\n */\nexport type LinkSize = 'large' | 'normal' | 'small';\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HyperlinkComponent} from './hyperlink.component';\n\n\n@NgModule({\n    declarations: [\n        HyperlinkComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    entryComponents: [\n        HyperlinkComponent\n    ],\n    exports: [\n        HyperlinkComponent\n    ],\n    providers: []\n})\nexport class AWHyperlinkModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {unimplemented} from '@aribaui/core';\n\n\n/**\n * Selection State for the chooser in order to be able to comunicate with the parent object using a\n * chooser. If I would have to manage only single values with no addional methods i would user\n * emitters to do the job, but in this case we need this interface (abstract class) between a\n * chooser and actual object.\n *\n *\n */\nexport abstract class ChooserSelectionState\n{\n    /**\n     *\n     * Set selection state is usually triggered by selecting and unselecting a item (in case of\n     * multiselect) and it should update its list of objects with either settings/adding item or\n     * removing it.\n     *\n     *\n     */\n    setSelectionState(selection: any, selected: boolean): void\n    {\n    }\n\n    /**\n     * The most recent selection . Null if last action was a deselection. Usually used by Chooser\n     * or ChooserState to get cuurent value.\n     *\n     */\n    selectedObject(): any\n    {\n        return unimplemented();\n    }\n\n\n    /**\n     * The most recent selections.\n     *\n     */\n    selectedObjects(): Array<any>\n    {\n        return unimplemented();\n    }\n\n\n    /**\n     *\n     * Check if the item selection items is in the selectedObjects\n     */\n    isSelected(selection: any): boolean\n    {\n        return unimplemented();\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {isBlank, isPresent, ListWrapper} from '@aribaui/core';\nimport {ChooserSelectionState} from './chooser-selection-state';\nimport {DataSource} from '../../core/data/data-source';\n\n/**\n * ChooserState manages complete lifecycle for the Chooser Component. It keeps track of current\n * selection as well as it can broadcast any updates.\n *\n *\n */\nexport class ChooserState\n{\n\n    /**\n     *  Callback to the parent object to store current selection\n     */\n    selectionState: ChooserSelectionState;\n\n    /**\n     * todo: We do not needed this !!\n     */\n    currentItem: any;\n\n\n    /**\n     * Matching pattern. User latest input to the chooser input field\n     */\n    pattern: string;\n\n\n    /**\n     * Last successfull pattern that retrieved some data\n     */\n    lastFullMatchPattern: string;\n\n\n    /**\n     * Current matched items using ChooserSelectionState\n     */\n    matches: Array<any>;\n\n\n    /**\n     * Is this multiselect chooser\n     */\n    multiselect: boolean;\n\n\n    /**\n     *\n     * Implementation can set lookup key to narrow the search. If we are dealing with object\n     * you should set this.\n     *\n     */\n    lookupKey: string;\n\n\n    /**\n     * previous display value is set when the display value is rendered on the chooser. we cache\n     * the UI value to compare with the inbound value later instead of the value from underlying\n     * object because business logic level code could have changed the underlying object's value\n     *\n     * todo: do I still need this?\n     */\n    prevDisplayValue: string;\n\n\n    /**\n     * Indicates if there are any validation like entered value does not much with the source list.\n     *\n     */\n    isInvalid: boolean = false;\n\n    /**\n     *\n     * indicates that we started to some editing e.g. starting to type in something into the\n     * filter, or removing already selected items\n     */\n    addMode: boolean = false;\n\n\n    recentSelectedDisplayed: number = 0;\n\n\n    /**\n     * When this option is active we do not show all selected items, but max number that is\n     * defined. User is able to toggle to expand the view to see all selections and hide them as\n     * well\n     */\n    showAllRecentlySelected: boolean = false;\n\n\n    constructor(chooserSelectionState?: ChooserSelectionState, isMulti: boolean = true)\n    {\n\n        this.selectionState = chooserSelectionState;\n        this.multiselect = isMulti;\n\n        if (isBlank(this.selectionState)) {\n            this.selectionState = new DefaultSelectionState(this.multiselect);\n        }\n    }\n\n\n    /**\n     *\n     * It will select and persist an item using ChooserSelectionState provider.\n     *\n     */\n    updatedSelectedObjects(item: any): void\n    {\n        if (isBlank(item)) {\n            item = this.currentItem;\n        }\n\n        if (!this.multiselect) {\n            this.setSelectionState(item, true);\n        } else {\n            let selectedObject = this.selectedObject();\n            let selectedObjects = this.selectedObjects();\n\n\n            if (this.addMode) {\n                if (this.isInvalid) {\n                    if (isPresent(selectedObject)) {\n                        this.setSelectionState(selectedObject, false);\n                    }\n\n                }\n                this.setSelectionState(item, !ListWrapper.containsComplex(selectedObjects, item));\n            } else {\n                if (isPresent(selectedObject)) {\n                    this.setSelectionState(selectedObject, false);\n                }\n                this.setSelectionState(item, true);\n            }\n        }\n    }\n\n\n    /**\n     * When user selection is large we use this method to check if we need to show all selected\n     * items or only MaxRecentSelected\n     */\n    toggleAllSelected(): void\n    {\n        this.showAllRecentlySelected = !this.showAllRecentlySelected;\n    }\n\n\n    /**\n     *\n     * Renders user's selection under the input field\n     *\n     */\n    get recentSelectedObjects(): Array <any>\n    {\n\n        if (!this.multiselect) {\n            return [];\n        }\n\n        let recentSelectedObjects: any[] = [];\n        this.recentSelectedDisplayed = 0;\n        let selectedObjects = this.selectedObjects();\n        let size = selectedObjects.length;\n        let maxCount = DataSource.MaxRecentSelected;\n        if (size > DataSource.MaxRecentSelected && !this.showAllRecentlySelected) {\n            maxCount -= 1;\n        }\n        if (this.showAllRecentlySelected) {\n            maxCount = size;\n        }\n\n        for (let i = size - 1; i >= 0 && (this.recentSelectedDisplayed < maxCount); i--) {\n            let selection = selectedObjects[i];\n            recentSelectedObjects.push(selection);\n            this.recentSelectedDisplayed++;\n        }\n\n        return recentSelectedObjects;\n    }\n\n    selectedObject(): any\n    {\n        return this.selectionState.selectedObject();\n    }\n\n\n    selectedObjects(): Array<any>\n    {\n        return this.selectionState.selectedObjects();\n    }\n\n    setSelectionState(selection: any, selected: boolean): void\n    {\n        if (isPresent(selection)\n        ) {\n            this.selectionState.setSelectionState(selection, selected);\n        }\n    }\n\n}\n\n\n/**\n * Dummy implementation ChooserSelectionState\n */\nexport class DefaultSelectionState extends ChooserSelectionState\n{\n    private _selectedObject: any;\n    private _selectedObjects: any;\n\n\n    constructor(private multiSelect: boolean)\n    {\n        super();\n    }\n\n    setSelectionState(selection: any, selected: boolean): void\n    {\n        if (selected) {\n            this._selectedObject = selection;\n            if (this.multiSelect && !ListWrapper.containsComplex(this.selectedObjects(),\n                    selection)) {\n                this.selectedObjects().push(selection);\n            }\n        } else {\n            if (this.multiSelect) {\n                ListWrapper.removeIfExist(this.selectedObjects(), selection);\n            }\n        }\n    }\n\n    selectedObject(): any\n    {\n        return this._selectedObject;\n    }\n\n    selectedObjects(): Array<any>\n    {\n        if (isBlank(this._selectedObjects)) {\n            this._selectedObjects = [];\n        }\n        return this._selectedObjects;\n    }\n\n    isSelected(selection: any): boolean\n    {\n        return super.isSelected(selection);\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {DataSource, DSInitParams} from '../../core/data/data-source';\nimport {DataFinder, DataFinders} from '../../core/data/data-finders';\nimport {DataProviders} from '../../core/data/data-providers';\nimport {Observable} from 'rxjs';\nimport {DataProvider} from '../../core/data/datatype-registry.service';\nimport {ChooserState} from './chooser-state';\nimport {assert, isArray, isBlank, isPresent, ListWrapper} from '@aribaui/core';\n\n/**\n * Concrete DataSource implementation for the Chooser component. There are two ways how to use it:\n *\n * 1) You can use default DataSource injected inside component constructor and just call\n * initialize to configure it with correct DataProvider and DataFinder:\n *\n *\n * ```\n *   this.dataSource.init({\n *               obj: this.list,\n *               queryType: QueryType.FullText,\n *               state: null,\n *               multiselect: this.multiselect\n *           });\n *\n * ```\n *\n * and then you can use it to simply retrieve data or run queries.\n *\n * 2) You will instantiate your own DataSource and pass it into the component using [dataSource]\n * binding\n *\n * ```\n *\n *   this.ds = new ChooserDataSource(this.data, this.finders);\n *   this.ds.init({\n *               obj: this.list,\n *               queryType: QueryType.FullText,\n *               state: null,\n *               multiselect: this.multiselect\n *           });\n *\n * ```\n *\n *\n */\nexport class ChooserDataSource extends DataSource\n{\n\n    /**\n     * Matching dataProviders and finders\n     */\n    private dataProvider: DataProvider<any>;\n    private dataFinder: DataFinder;\n\n\n    /**\n     * Special object to keep current state of this chooser\n     */\n    state: ChooserState;\n\n\n    constructor(public dataProviders: DataProviders, public finders: DataFinders)\n    {\n        super(dataProviders, finders);\n    }\n\n\n    /**\n     * To initialize this DataSource with current DataFinder and Provider as well as state we use\n     * an interface DSChooserInitParams to have all init values typed checked\n     *\n     *\n     */\n    init(...args: any[]): void\n    {\n        if (isBlank(args) || args.length !== 1 && !isDSChooserInitParams(args[0])) {\n            throw new Error('You need to initialize DS with (DSChooserInitParams)');\n        }\n        let init: DSChooserInitParams = args[0];\n\n        this.dataProvider = isPresent(init.dataProvider) ? init.dataProvider\n            : this.dataProviders.find(init.obj);\n\n        this.dataFinder = isPresent(init.dataFinder) ? init.dataFinder\n            : this.finders.find(this.dataProvider, init.queryType);\n\n        assert(isPresent(this.dataProvider) && isPresent(this.dataFinder),\n            'DataSource incorrectly initialized. (DataProvider, DataFinder) missing. ');\n\n        if (isPresent(init.state)) {\n            this.state = init.state;\n        } else {\n            this.state = new ChooserState(null, init.multiselect);\n        }\n\n        this.dataFinder.lookupKey = init.lookupKey;\n        this.state.lookupKey = init.lookupKey;\n    }\n\n\n    find(pattern: string, max: number): void\n    {\n        this.state.pattern = pattern;\n        this.state.lastFullMatchPattern = pattern;\n\n        if (pattern.length === 0) {\n            return;\n        }\n        if (pattern === '*') { // query everything\n            pattern = '';\n        }\n\n\n        // make sure we dataFinder has expected lookup key\n        let origKey = this.dataFinder.lookupKey;\n        this.dataFinder.lookupKey = this.state.lookupKey;\n        this.dataFinder.forData(this.dataProvider).match<any>(pattern, max)\n            .subscribe((result: any[]) =>\n            {\n                this.state.matches = result;\n\n                if (this.state.multiselect) {\n                    for (let i = 0; i < this.state.selectedObjects().length; i++) {\n                        let item = this.state.selectedObjects()[i];\n                        ListWrapper.removeIfExist(this.state.matches, item);\n                    }\n                }\n\n                this.dataFinder.lookupKey = origKey;\n            });\n    }\n\n    /**\n     *\n     * When multiselect this method checks if we need to show SHOW MORE label under the selected\n     * items. We do not want show e.g. 50 selection under the chooser that would take up whole\n     * page.\n     *\n     */\n    showMoreSelected(): boolean\n    {\n        return this.state.selectedObjects().length >= DataSource.MaxRecentSelected;\n    }\n\n    open<T>(): Observable<T[]>\n    {\n        return this.dataProvider.dataChanges.asObservable();\n    }\n\n    close(): void\n    {\n        this.dataProvider = null;\n        this.dataFinder = null;\n        this.state = null;\n    }\n\n    instant<T>(): T[]\n    {\n        return this.dataProvider.data();\n    }\n\n    updateValue(value: any): void\n    {\n        this.state.addMode = true;\n        if (isArray(value)) {\n            let items: any[] = value;\n            items.forEach((item) => this.state.updatedSelectedObjects(item));\n        } else {\n            this.state.updatedSelectedObjects(value);\n        }\n        this.state.addMode = false;\n\n    }\n\n\n    get lookupKey(): string\n    {\n        return this.dataFinder.lookupKey;\n    }\n}\n\n/* is \"init\" type of DSChooserInitParams interface ? */\nexport function isDSChooserInitParams(init: DSChooserInitParams): init is DSChooserInitParams\n{\n    return isPresent(init.obj) || isPresent(init.queryType);\n}\n\n/**\n * To make initialization easier we have this common format.\n */\nexport interface DSChooserInitParams extends DSInitParams\n{\n    /**\n     * Chooser state keeping information what is currently selected , result of the last match\n     */\n    state?: ChooserState;\n}\n\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterViewChecked,\n    AfterViewInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {AutoComplete} from 'primeng/primeng';\nimport {assert, Environment, isBlank, isPresent} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {DATA_SOURCE} from '../../core/data/data-source';\nimport {ChooserDataSource} from './chooser-data-source';\nimport {DataProviders} from '../../core/data/data-providers';\nimport {DataFinders, QueryType} from '../../core/data/data-finders';\nimport {ChooserState, DefaultSelectionState} from './chooser-state';\n\n\n/**\n * Typeahead chooser that supports both single and multi-select. Not like Dropdown, this chooser\n * requires little bit different setup. It requires at minimum @Input dataSource or\n * destinationClass\n *\n *\n * By default chooser is multi-select. If you want single select then you must provide multi-select\n * with @Input.\n *\n * ### Example\n *\n * In simple scenario you can use Chooser like so:\n *\n *\n * ```\n *  @Component({\n *      selector: 'chooser-app' ,\n *      template: `<aw-chooser  [formGroup]=\"formGroup\" name=\"color\"'\n *                      [dataSource]=\"ds\"></aw-chooser>`\n *  })\n *  export class MyChooserApp\n *  {\n *\n *      ds: ChooserDataSource;\n *\n *     constructor(private data: DataProviders, private finders: DataFinders){\n *          this.ds = new ChooserDataSource(this.data, this.finders);\n *\n *       this.ds.init({\n *           obj: ['blue', 'red', 'yellow'], queryType: QueryType.FullText, state: null,\n *            multiselect: true\n *       });\n *\n *     }\n *  }\n *\n * ````\n *  Above example will use provided dataSource and render multi-select chooser. With default\n *  implementation  selected values will appear as a tags under the input box\n *\n *\n *\n * * ### Example\n *\n *  In this example we provide custom template to change the way how chooser's MenuItem are\n *     rendered as well as template for the selection item looks like\n *\n * ```\n *  @Component({\n *      selector: 'chooser-app' ,\n *      template: `<aw-chooser  name=\"commodity\"' [dataSource]=\"ds\">\n *\n *          <ng-template #menuItem let-item>\n *             \t<span>\n *             \t\t<i class=\"fa fa-envira \" ></i>\n *             \t\t{{item}}\n *             \t</span>\n *\n *          </ng-template>\n *\n *          <ng-template #selectionItem let-item>\n *             \t<span class=\"tag tag-circle\">\n *             \t\titem: {{item }}\n *             \t\t<i class=\"fa fa-close\" (click)=\"chooser.removeValue(item)\"></i>\n *             \t</span>\n *\n *\n *          </ng-template>\n *\n *\n *          </aw-chooser>\n *      `\n *      style: [`\n *              .tag-circle {\n *              \tborder-radius: 6rem;\n *              \theight: 7rem;\n *              \tcolor: #e8eef1;\n *              \tbackground-color: rgba(53, 56, 58, 0.67);\n *              \tline-height: 6rem;\n *              }\n *      `]\n *  })\n *\n * ````\n *\n *  In above example we change how the chooser's menu item look like as well as we define custom\n *     template for selection item to turn all selection to circles with text in the middle.\n *\n *\n *\n */\n\nexport const CHOOSER_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ChooserComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-chooser',\n    template: `<div class=\"w-chooser \">\n\n    <p-autoComplete #autoCompplete [(ngModel)]=\"internalChooserModel\"\n                    [suggestions]=\"dataSource.state.matches\"\n                    [multiple]=\"dataSource.state.multiselect\"\n                    [dropdown]=\"!dataSource.state.multiselect\"\n                    [minLength]=\"minLenForSearch\"\n                    [placeholder]=\"placeHolder\"\n                    [delay]=\"delay\"\n                    [disabled]=\"disabled\"\n                    (onDropdownClick)=\"onDropdownClick($event)\"\n                    (completeMethod)=\"match($event.query)\"\n                    (onSelect)=\"selectItem($event)\"\n                    (onUnselect)=\"removeValue($event)\">\n\n\n        <ng-template let-internalChooserModel pTemplate=\"item\">\n            <ng-template [ngIf]=\"!hasMenuTemplate()\">\n                {{ displayItem(internalChooserModel) }}\n            </ng-template>\n            <ng-template [embeddedItem]=\"menuTemplate\" [item]=\"internalChooserModel\"\n                         *ngIf=\"hasMenuTemplate()\"></ng-template>\n        </ng-template>\n    </p-autoComplete>\n\n    <!--\n        Wrap whole selection with one extra element so we can move it around\n\n         see: selectionAppendTo\n    -->\n    <span #selectionView>\n        <div class=\"w-chooser-selections\"\n             *ngIf=\"multiselect && dataSource.state.recentSelectedObjects.length > 0\">\n\n        <ng-template [ngIf]=\"!hasSelectionTemplate()\">\n\n            <!-- no selection template render it as it is from CORE-->\n            <ul class=\"ui-autocomplete-multiple-container ui-widget ui-state-default \"\n                [ngClass]=\"{'ui-state-disabled':disabled,'ui-state-focus':autoCompleteComponent.focus}\">\n\n                <li #token *ngFor=\"let item of dataSource.state.recentSelectedObjects\"\n                    class=\"ui-autocomplete-token ui-state-highlight ui-corner-all\" tabindex=\"0\"\n                    (keyup.delete)=\"removeValue(item)\"\n                    (keyup.backspace)=\"removeValue(item)\">\n\t\t\t\t\t<span class=\"ui-autocomplete-token-icon sap-icon icon-decline\"\n                          (click)=\"removeValue(item)\"></span>\n                    <span class=\"ui-autocomplete-token-label\">{{ displayItem(item) }}</span>\n                </li>\n            </ul>\n        </ng-template>\n\n            <!--Yes there is selection template let's iterate and push each item to be rendered-->\n        <ng-template ngFor [ngForOf]=\"dataSource.state.recentSelectedObjects\" let-item>\n            <ng-template [embeddedItem]=\"selectionTemplate\" [item]=\"item\"\n                         *ngIf=\"hasSelectionTemplate()\"></ng-template>\n        </ng-template>\n\n        <ng-template [ngIf]=\"dataSource.showMoreSelected()\">\n\t\t\t<span class=\"more-selected\">\n\t\t\t\t<aw-hyperlink [size]=\"'small'\" (action)=\"dataSource.state.toggleAllSelected()\">\n\t\t\t\t\t{{moreSelectString()}}\n\t\t\t\t</aw-hyperlink>\n\t\t\t</span>\n        </ng-template>\n    </div>\n    </span>\n\n\n</div>\n\n`,\n    styles: [`/deep/ .ui-fluid .ui-autocomplete.ui-autocomplete-dd .ui-autocomplete-input,/deep/ .ui-fluid .ui-autocomplete.ui-autocomplete-dd .ui-autocomplete-multiple-container{width:100%}/deep/ .w-chooser .ui-autocomplete-multiple{line-height:normal}/deep/ .w-chooser .ui-autocomplete-input{width:100%}/deep/ .w-chooser .ui-autocomplete-dropdown.ui-button{right:0;position:absolute;border:0;width:30px;background:0 0}/deep/ .w-chooser .ui-autocomplete-dropdown.ui-button .pi{font-family:\"SAP icon fonts\";color:#767676;cursor:pointer;font-size:1.4em;margin-left:-.85em}/deep/ .w-chooser .ui-autocomplete-dropdown.ui-button .pi-caret-down:before{content:'\\\\e1ef'}/deep/ .w-chooser .ui-autocomplete-dropdown.ui-button input{padding-right:30px}/deep/ .w-chooser .ui-autocomplete-input-token{padding:0;margin:0;vertical-align:baseline;width:inherit}/deep/ .w-chooser .ui-autocomplete-input-token .fa{font-family:\"SAP icon fonts\";color:#767676;cursor:pointer;font-size:1.2em}/deep/ .w-chooser .ui-autocomplete-input-token .fa-search:before{content:'\\\\e00d'}/deep/ .w-chooser .ui-autocomplete-input-token input{width:inherit;padding-right:25px}/deep/ .w-chooser .ui-autocomplete-input-token span{position:absolute;right:5px;top:0;padding-top:.6em}/deep/ .w-chooser .ui-autocomplete-dropdown{height:36px}/deep/ .w-chooser .ui-autocomplete-panel .ui-autocomplete-list-item{padding:.65em 2em .65em .64em;margin:0}/deep/ body .ui-autocomplete.ui-autocomplete-multiple .ui-autocomplete-multiple-container{padding:.4em .5em .4em 1em}.w-chooser-selections{margin-top:2px}.w-chooser-selections ul{margin:0;padding:0}.w-chooser-selections .ui-autocomplete-multiple-container{border:0}.w-chooser-selections .ui-autocomplete-multiple-container .ui-autocomplete-token{font-size:.85em;letter-spacing:.1px;font-weight:400;padding:0;background:#e0f2ff;margin-right:5px;margin-bottom:5px}.w-chooser-selections .ui-autocomplete-multiple-container .ui-autocomplete-token-label{padding:4px 21px 4px 5px}.w-chooser-selections .ui-autocomplete-multiple-container .ui-autocomplete-token-icon{font-size:.78em;padding-right:.28em}.w-chooser-selections .ui-autocomplete-multiple-container .sap-icon{line-height:inherit}.w-chooser-selections .more-selected{display:inline-block}`],\n    providers: [\n        CHOOSER_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => ChooserComponent)},\n        {provide: DATA_SOURCE, useClass: ChooserDataSource, deps: [DataProviders, DataFinders]}\n    ]\n\n\n})\nexport class ChooserComponent extends BaseFormComponent implements AfterViewChecked,\n    AfterViewInit {\n\n    /**\n     * Max number of items return at single Match so we do not return 1000 items at single time.\n     *\n     */\n    @Input()\n    maxLength: number = 10;\n\n\n    /**\n     * Max number of items return at single Match so we do not return 1000 items at single time.\n     *\n     */\n    @Input()\n    minLenForSearch: number = 1;\n\n\n    /**\n     * Formatter used to format each selection and selected object for display.\n     *\n     */\n    @Input()\n    valueTransformer: (value: any) => string;\n\n    /**\n     * Is this multiselect\n     *\n     */\n    @Input()\n    multiselect: boolean = true;\n\n\n    /**\n     * By default ChooserDataSource will be created but there is a option to set\n     * custom one on application level\n     */\n    @Input()\n    dataSource: ChooserDataSource;\n\n\n    /**\n     * In case we want to change the place where selection is rendered use this appendTo property\n     * and it will use DOM operation appendChild() to move selectionView under different parent\n     */\n    @Input()\n    selectionAppendTo: ElementRef;\n\n\n    @Input()\n    delay: number = 300;\n\n\n    /**\n     * Target type to render. Data will be read from the registered DataProvider\n     */\n    @Input()\n    destinationClass: string;\n\n\n    @Input()\n    field: string;\n\n\n    /**\n     * Event fired when user select a item\n     */\n    @Output()\n    onSelection: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * internal model to listen for Input value changes\n     */\n    internalChooserModel: any;\n\n\n    /**\n     * Embedded template defined by user. If user does not provide any template then when rendering\n     * an item we assume we are dealing with primitive types and call on each item toString(), if\n     * we are dealing with object, then we expect user to provide a template and tell the chooser\n     * how items shoulds be handled or at least valueTransformer so we know how to convert this\n     * value.\n     *\n     * Each object can provide its own toString implementation.\n     *\n     */\n    @ContentChild('menuItem')\n    menuTemplate: TemplateRef<any>;\n\n\n    @ContentChild('selectionItem')\n    selectionTemplate: TemplateRef<any>;\n\n    @ViewChild('autoCompplete')\n    autoCompleteComponent: AutoComplete;\n\n    @ViewChild('selectionView')\n    selectionViewElem: ElementRef;\n\n\n    /**\n     * When the selection is > max selection, then show hide link.\n     */\n    private hideLink: string;\n\n    constructor(public env: Environment, private elemementRef: ElementRef,\n                @Inject(DATA_SOURCE) private _defaultDS: ChooserDataSource,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                protected parentContainer: BaseFormComponent) {\n        super(env, parentContainer);\n\n        if (isBlank(this.placeHolder)) {\n            // this.placeHolder = i18n.instant('Widgets.chooser.placeHolder');\n            this.placeHolder = 'Search';\n        }\n        // this.hideLink = i18n.instant('Widgets.chooser.hideSelection');\n        this.hideLink = 'Hide';\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        if (isBlank(this.dataSource)) {\n\n            this.dataSource = this._defaultDS;\n            this.initDatasource();\n        }\n\n        if (isPresent(this.formControl) && isPresent(this.formControl.value)) {\n            this.dataSource.updateValue(this.formControl.value);\n        }\n\n        this.initInternalModel();\n\n\n        if (this.isStandalone) {\n            super.registerFormControl(this.internalChooserModel);\n        } else {\n            if (isPresent(this.name)) {\n                this.formControl = <FormControl> this.formGroup.controls[this.name];\n            }\n        }\n    }\n\n    /**\n     * Add Search icon in case of multiselect.\n     * todo: Once PrimeNG will provide a template to override default behavior remove it\n     *\n     */\n    ngAfterViewInit() {\n        if (!this.dataSource.state.multiselect) {\n            return;\n        }\n\n        let searchInput = this.elemementRef.nativeElement.querySelector(\n            '.ui-autocomplete-input-token');\n\n        if (isPresent(searchInput)) {\n            let iconElement = document.createElement('span');\n            iconElement.className = 'search-icon-right fa fa-fw fa-search';\n            searchInput.appendChild(iconElement);\n        }\n\n        if (isPresent(this.selectionAppendTo) && isPresent(this.selectionViewElem)) {\n            let parentElem = this.selectionAppendTo instanceof ElementRef ?\n                this.selectionAppendTo.nativeElement : this.selectionAppendTo;\n\n            parentElem.appendChild(this.selectionViewElem.nativeElement);\n        }\n    }\n\n    /**\n     * Need to change current behavior since we want to show selection under the chooser. K\n     *\n     */\n    ngAfterViewChecked(): void {\n        if (!this.dataSource.state.multiselect) {\n            return;\n        }\n\n        let tokens = this.elemementRef.nativeElement.querySelectorAll(\n            '.ui-autocomplete .ui-autocomplete-token');\n        if (isPresent(tokens) && tokens.length > 0) {\n            tokens.forEach((item: any) => {\n                item.remove();\n            });\n        }\n    }\n\n    /**\n     *\n     * When value is entered into search box, we ask our DataSource to match this pattern\n     * against data repository. It will retrieve all possible matches limited by MaxLen and this\n     * is again filtered so it does not include already selected items.\n     *\n     *  the matched resulted is saved in the: this.dataSource.state.matches\n     */\n    match(pattern: string): void {\n        let maxLen = this.maxLength ? this.maxLength : ChooserDataSource.MaxLength;\n        this.dataSource.find(pattern, maxLen);\n\n\n        // fix: for tests: In version 4 we need to explicitly focus input otherwise autocomplete\n        // doesn't give us any popup panel\n        if (this.env.inTest && isPresent(this.autoCompleteComponent)) {\n            this.autoCompleteComponent.focusInput();\n        }\n    }\n\n\n    /**\n     *\n     * Invoked by Dropdown button in case of single select and here we want to invoke match\n     * to retrieve all suggestions without any filter\n     *\n     */\n    onDropdownClick(event: any): void {\n        this.match('*');\n        setTimeout(() => {\n            this.match('*');\n        }, 100);\n    }\n\n    /**\n     *\n     * Chooser state is updated  with user selection. Please see writeValue. When do not need\n     * call anything additional as internalChooserModel and this.chooserState.selectedObjects()\n     * shares the same references so its important that we first save reference to\n     * this.chooserState.selectedObjects() and then back to internalChooserModel\n     *\n     */\n    selectItem(item: any): void {\n        this.onSelection.emit(this.internalChooserModel);\n        this.formControl.setValue(this.internalChooserModel, {emitEvent: true});\n        this.formControl.markAsDirty({onlySelf: true});\n\n        this.dataSource.state.addMode = true;\n\n        this.onModelChanged(this.internalChooserModel);\n        this.dataSource.state.updatedSelectedObjects(item);\n\n        this.dataSource.state.addMode = true;\n\n        if (!this.dataSource.state.multiselect) {\n            this.autoCompleteComponent.inputEL.nativeElement.value =\n                this.displayItem(this.internalChooserModel);\n        }\n    }\n\n\n    /**\n     *\n     * Unselect item\n     *\n     */\n    removeValue(item: any): void {\n        this.dataSource.state.addMode = true;\n        this.dataSource.state.updatedSelectedObjects(item);\n        this.dataSource.state.addMode = false;\n\n        this.internalChooserModel = this.dataSource.state.selectedObjects();\n\n        this.onSelection.emit(this.internalChooserModel);\n        this.formControl.setValue(this.internalChooserModel, {emitEvent: true});\n        this.formControl.markAsDirty({onlySelf: true});\n\n        this.onModelChanged(this.internalChooserModel);\n\n\n        if (isPresent(this.autoCompleteComponent)) {\n            this.autoCompleteComponent.focusInput();\n        }\n\n    }\n\n    /**\n     *\n     * Convert a object if any into the string representation\n     *\n     * todo: implement better way how to work with objects\n     *\n     */\n    displayItem(item: any) {\n        if (isBlank(item)) {\n            return null;\n        }\n        this.dataSource.state.currentItem = item;\n\n        if (isPresent(this.valueTransformer)) {\n            return this.valueTransformer(item);\n\n        } else if (isPresent(this.dataSource.lookupKey)) {\n            return item[this.dataSource.lookupKey];\n\n        } else {\n            return item.toString();\n        }\n    }\n\n    /**\n     *\n     * Returns a label that is shown under the selected item when user selection is >\n     * MaxRecentSelected\n     *\n     */\n    moreSelectString(): string {\n        let moreSelected = this.dataSource.state.selectedObjects().length -\n            this.dataSource.state.recentSelectedDisplayed;\n        if (moreSelected < 2 && !this.dataSource.state.showAllRecentlySelected) {\n            return '';\n        }\n\n        if (this.dataSource.state.showAllRecentlySelected) {\n            return this.hideLink;\n        }\n        return `${moreSelected} more selected...`;\n    }\n\n\n    /**\n     * In case of multiselect = false check if we want to show a selected value inside the input\n     * field\n     *\n     */\n    singleValueSelected(): boolean {\n        return !this.dataSource.state && isPresent(this.dataSource.state.currentItem)\n            && !this.dataSource.state.addMode;\n    }\n\n    hasMenuTemplate(): boolean {\n        return isPresent(this.menuTemplate);\n    }\n\n\n    hasSelectionTemplate(): boolean {\n        return isPresent(this.selectionTemplate);\n    }\n\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     * As we are using DataSource internally for [(ngModel)] case we need to deffer DataSource\n     * initialization once we have a value and we only accept []\n     *\n     *\n     * ? Should we do some deeper comparision?\n     */\n    writeValue(value: any) {\n        if (isBlank(value)) {\n            return;\n        }\n\n        if (isPresent(this.dataSource)) {\n            this.dataSource.updateValue(value);\n        } else {\n            let selState: DefaultSelectionState = new DefaultSelectionState(this.multiselect);\n            let chState: ChooserState = new ChooserState(selState, this.multiselect);\n            this.initDatasource(chState);\n\n            this.dataSource.updateValue(value);\n        }\n\n        this.initInternalModel();\n    }\n\n    initDatasource(chooserState?: ChooserState): void {\n        assert(isPresent(this.destinationClass),\n            'You need to provide destinationClass or custom DataSource');\n\n        this.dataSource.init({\n            obj: this.destinationClass,\n            queryType: QueryType.FullText,\n            lookupKey: this.field,\n            state: chooserState,\n            multiselect: this.multiselect\n        });\n    }\n\n    /**\n     *\n     * Used by ngOnInit and Write value to read state from ChooserState and set it to internal\n     * ngModel property\n     *\n     */\n    private initInternalModel(): void {\n        if (this.dataSource.state.multiselect) {\n            this.internalChooserModel = this.dataSource.state.selectedObjects();\n        } else {\n            this.internalChooserModel = this.dataSource.state.selectedObject();\n        }\n        if (isPresent(this.formControl)) {\n            this.formControl.setValue(this.internalChooserModel);\n        }\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ChooserComponent} from './chooser.component';\nimport {AutoCompleteModule} from 'primeng/primeng';\nimport {AWHyperlinkModule} from '../hyperlink/hyperlink.module';\nimport {AWCoreComponentModule} from '../../core/core.module';\n\n\n@NgModule({\n    declarations: [\n        ChooserComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AutoCompleteModule,\n        AWHyperlinkModule,\n        AWCoreComponentModule\n\n    ],\n    entryComponents: [\n        ChooserComponent\n    ],\n    exports: [\n        ChooserComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWChooserModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    ContentChild,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport {FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {SelectItem} from 'primeng/primeng';\nimport {Environment, equals, isPresent} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\n\n\n/**\n * A popup like component rendering list of values as. Based on PrimeNG component and one of the\n * main reason why we need to wrap this is to extend its capabilities to accept almost any\n * data type without using Primens's specific SelectItem type.\n *\n *\n * ### Example\n *\n * ```\n *  @Component({\n *      selector: 'showDropDown' ,\n *      template: '<aw-dropdown [list]=\"testItemSmall\"\n *     (onSelection)=\"onSelection($event)\"></aw-dropdown>'\n *  })\n *  export class MyDropComponent\n *  {\n *      testItemSmall: string[] = ['view' , 'edit'];\n *\n *      // when you switch list binding to refert to large item fiilter automatically is shown and\n *     max 10 items are\n *      // visible\n *      testItemLarge: string[] = ['view' , 'edit' , 'frank' , 'kolar' , 'The Sun' , 'Dog' ,\n *     'Computer' , 'A Desk' ,\n *      'My Car' , 'Pencil' , 'This Page' , 'Yesterday' , 'Monday' , 'Tuesday' , 'BMW R1200 GS' ,\n *     'Czech Republic' ,\n *      'Last Item'];\n *\n *\n *      itemSelected: string = 'view';\n *      itemSelectedLg: string = 'Monday';\n *\n *      noselString: string = '(no selection)';\n *\n *\n *      onSelection (event): void\n *      {\n *          this.itemSelected = event;\n *\n *      }\n *  }\n *\n *  ```\n *\n */\n\n\nexport const DD_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DropdownComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-dropdown',\n    template: `<div class=\"w-dropdown\" [formGroup]=\"formGroup\">\n\n    <ng-template [ngIf]=\"isStandalone\">\n        <p-dropdown [options]=\"internalList\"\n                    [formControlName]=\"name\"\n                    [placeholder]=\"noSelectionString\"\n                    [autoWidth]=\"false\"\n                    [filter]=\"showFilter()\"\n                    (onChange)=\"onItemSelection($event)\">\n\n            <ng-template let-item pTemplate=\"item\">\n                <ng-template [ngIf]=\"!hasEmbeddedTemplate() && itemExist(item)\">\n                    {{item.label }}\n                </ng-template>\n\n                <ng-template [embeddedItem]=\"itemTemplate\" [item]=\"item\"\n                             *ngIf=\"hasEmbeddedTemplate() && itemExist(item)\">\n\n                </ng-template>\n            </ng-template>\n\n\n        </p-dropdown>\n    </ng-template>\n</div>\n\n\n<!-- no formControl Name here. ngModel cannot have formGroup around -->\n<ng-template [ngIf]=\"!isStandalone\">\n    <div class=\"w-dropdown\">\n        <p-dropdown [options]=\"internalList\"\n                    [(ngModel)]=\"selection\"\n                    [placeholder]=\"noSelectionString\"\n                    [autoWidth]=\"false\"\n                    [filter]=\"showFilter()\"\n                    (onChange)=\"onItemSelection($event)\">\n\n            <ng-template let-item pTemplate=\"item\">\n\n                <ng-template [ngIf]=\"!hasEmbeddedTemplate() && itemExist(item)\">\n                    {{item.label }}\n                </ng-template>\n                <ng-template [embeddedItem]=\"itemTemplate\" [item]=\"item\"\n                             *ngIf=\"hasEmbeddedTemplate() && itemExist(item)\">\n                </ng-template>\n            </ng-template>\n        </p-dropdown>\n    </div>\n</ng-template>\n`,\n    styles: [`/deep/ .ui-dropdown-panel .ui-dropdown-items-wrapper{max-height:none!important}/deep/ .ui-dropdown-panel .ui-dropdown-item{padding:.65em 2em .65em .64em;margin:0}/deep/ .ui-dropdown-panel .ui-dropdown-filter-container{width:100%}/deep/ .ui-dropdown-panel .ui-dropdown-filter-container .fa{top:1.2em}/deep/ .ui-dropdown-panel .ui-dropdown-list{padding:1em 0}/deep/ .w-dropdown:not(.ng-dirty) label{color:#969696}/deep/ .w-dropdown .ui-dropdown-trigger.ui-corner-right{border-left:none;color:#969696}/deep/ .w-dropdown .ui-dropdown-trigger .pi{font-family:\"SAP icon fonts\";color:#767676;cursor:pointer;font-size:1.4em;margin-left:-.85em}/deep/ .w-dropdown .ui-dropdown-trigger .pi-caret-down:before{content:'\\\\e1ef'}/deep/ .w-dropdown .ui-dropdown-label{padding-right:2.4em}`],\n    providers: [\n        DD_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => DropdownComponent)}\n    ]\n\n})\nexport class DropdownComponent extends BaseFormComponent\n{\n\n    static readonly MaxNumShown = 10;\n\n    /**\n     * Ordered list of items rendered as a popup menu\n     */\n    @Input()\n    list: any[];\n\n    /**\n     * Items which was selected as a default value or by used in the popup menu.\n     */\n    @Input()\n    selection: any;\n\n    /**\n     * String rendered as first value in the popup which let the user to make 'no selection' from\n     * available list of values. When this option is active and use make this selection we save a\n     * NULL value\n     */\n    @Input()\n    noSelectionString: string;\n\n    /**\n     * Event fired when user select a item\n     */\n    @Output()\n    onSelection: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * This is the internal list that hides PrimeNG specifics where we need to deal with special\n     * type: SelectItem. Our expectation is that you need to be able to pass regular string values\n     * or full object and not trying to wrap it into extra layer.\n     *\n     */\n    internalList: SelectItem[];\n\n\n    /**\n     * Embedded template defined by user. If user does not provide any template and while rendering\n     * item we assume we are dealing with primitive types and call on each item toString(), if we\n     * are dealing with object, then we expect user to provide a template and tell the dropdown of\n     * each item should be handled\n     *\n     */\n    @ContentChild('itemTemplate')\n    itemTemplate: TemplateRef<any>;\n\n\n    /**\n     * Internal model used for embedded version.\n     */\n    model: SelectItem;\n\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n    /**\n     * Todo: Put back the scrolling option once we decide so. Currently the requirements are\n     * show only 10 items max, no scrolling. Functionality commented out can show scrollbar with\n     * search filter.\n     */\n    ngOnInit()\n    {\n\n        if (this.isStandalone) {\n            super.ngOnInit();\n            super.registerFormControl(this.selection);\n\n        } else {\n            if (isPresent(this.name)) {\n                this.formControl = <FormControl> this.formGroup.controls[this.name];\n            }\n        }\n\n\n        // transform a value to PrimeNg Format, we are not really be using a label field only a\n        // value.\n        this.internalList = [];\n        // if (isPresent(this.noSelectionString)) {\n        //     this.internalList.push({\n        //         label: this.noSelectionString,\n        //         value: null\n        //     });\n        //\n        //     if (isBlank(this.selection)) {\n        //         this.selection = this.noSelectionString;\n        //     }\n        // }\n\n        if (isPresent(this.list) && this.list.length >= DropdownComponent.MaxNumShown) {\n\n            this.internalList = this.list.slice(0, DropdownComponent.MaxNumShown).map((item: any) =>\n            {\n                return {label: item.toString(), value: item};\n            });\n        } else if (isPresent(this.list)) {\n            this.internalList = this.list.slice(0).map((item: any) =>\n            {\n                return {label: item.toString(), value: item};\n            });\n        }\n    }\n\n\n    hasEmbeddedTemplate(): boolean\n    {\n        return isPresent(this.itemTemplate);\n    }\n\n    /**\n     * Check to prevent Empty item to be rendered\n     *\n     * todo: Report this on PrimeNg\n     *\n     */\n    itemExist(item: any)\n    {\n        return isPresent(item);\n    }\n\n\n    /**\n     * When dropdown list is more then defined constant MaxNumShown (10) automatically show filter\n     * input field\n     */\n    showFilter()\n    {\n        return false;\n        // return isPresent(this.list) && this.list.length > DropdownComponent.MaxNumShown;\n    }\n\n    /**\n     *\n     * Updates internal models of current selections and triggers onSelection event\n     *\n     */\n    onItemSelection(value: any)\n    {\n        this.selection = value.value;\n        this.onSelection.emit(value.value);\n\n        if (this.isStandalone) {\n            this.formControl.setValue(this.selection);\n            this.formControl.markAsDirty({onlySelf: true});\n        }\n\n        this.onModelChanged(value.value);\n    }\n\n    displayItem(item: any)\n    {\n        return isPresent(item) ? item.label : 'No Selection';\n    }\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any)\n    {\n        if (!equals(value, this.selection)) {\n\n            this.selection = value;\n            this.formControl.setValue(value);\n        }\n\n    }\n\n}\n\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DropdownComponent} from './dropdown.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DropdownModule} from 'primeng/primeng';\nimport {AWCoreComponentModule} from '../../core/core.module';\n\n\n@NgModule({\n    declarations: [\n        DropdownComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DropdownModule,\n        AWCoreComponentModule\n    ],\n    entryComponents: [\n        DropdownComponent\n    ],\n    exports: [\n        DropdownComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWDropdownModule\n{\n}\n\n\n","import {Component, forwardRef, Inject, Input, Optional, SkipSelf} from '@angular/core';\nimport {CurrencyPipe} from '@angular/common';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Environment, equals, isBlank, isPresent, Value} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\n\n/**\n * Lightweight and configurable Currency component based on the ng bootstrap directive. This\n * component combines an input and currency code dropdown.\n *\n *\n * for more info please see class Doc of the:\n *  @see {@link currency/currency.component.ts}\n *\n *  ### Example\n *  ```\n *\n *  @Component({\n *    selector: 'amount' ,\n *    template: `\n *\n *      <aw-currency [money]=\"price\" [currencies]=\"currencies\" [name]=\"'currency'\">\n *      </aw-currency>\n *\n *    `\n *    })\n *    export class MyComponent\n *    {\n *        amount: number = 1000;\n *        currencies: string[] = ['USD', 'CNY', 'AUD', 'EUR', 'GBP'];\n *        currencyCode: string = this.currencies[0];\n *\n *        constructor ()\n *        {\n *        }\n *    }\n */\n\nexport const CURRENCY_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CurrencyComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-currency',\n    template: `<ng-template [ngIf]=\"editable\">\n    <div class=\"w-currency-field ui-fluid\" [formGroup]=\"formGroup\">\n        <div class=\"ui-g \">\n            <div class=\"ui-g-8 ui-g-nopad \">\n                <input #currencyInput\n                       pInputText\n                       type=\"text\" class=\"w-text-field currency-format\"\n                       [attr.name]=\"name\"\n                       [attr.placeholder]=\"placeHolder\"\n                       [value]=\"displayValue\"\n                       (focus)=\"onFocus(currencyInput)\"\n                       (blur)=\"onBlur(currencyInput)\"\n                       [disabled]=\"disabled\">\n            </div>\n            <div class=\"ui-g-4 ui-g-nopad w-cc-field\">\n                <aw-dropdown *ngIf=\"!readonlyCurrencyCode\"\n                             [isStandalone]=\"false\" [list]=\"currencies\"\n                             [selection]=\"money.currency\"\n                             (onSelection)=\"onSelection($event)\"\n                             [disabled]=\"disabled\">\n\n                </aw-dropdown>\n                <div *ngIf=\"readonlyCurrencyCode\" class=\"w-cc-readonly-field\">{{money.currency}}</div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<!-- currency:'USD':true -->\n\n<ng-template [ngIf]=\"!editable\">\n    <aw-string value=\"{{displayValue}} {{ getMoneyCurrency() }}\"></aw-string>\n</ng-template>\n`,\n    styles: [`.w-currency-field [readonly],.w-currency-type-field [readonly]{background-color:#fff}.w-currency-field input,.w-currency-type-field input{min-width:80px}.w-currency-field i.fa,.w-currency-type-field i.fa{cursor:pointer}.w-currency-field{margin-top:0}.w-currency-field /deep/ .ui-dropdown{min-width:80px}.w-cc-field{display:flex;align-items:center}.w-cc-readonly-field{padding-left:5px;color:#969696}.no-gutter>[class*=ui-g-]{padding-right:0;padding-left:0}`],\n    providers: [\n        CURRENCY_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => CurrencyComponent)}\n    ]\n\n})\nexport class CurrencyComponent extends BaseFormComponent\n{\n    /**\n     * Money object that encapsulates value, locale, currency code.\n     * If this object is set, values will be taken from this object\n     */\n    @Input()\n    money: Money;\n\n    /**\n     * Disable user to change Money's currency code and still\n     * allow user to edit Money's amount.\n     */\n    @Input()\n    readonlyCurrencyCode: boolean = false;\n\n    /**\n     * The currency that's selected for this currency field.\n     */\n    @Input()\n    currencySelection: string;\n\n    /**\n     *\n     * The number of decimal places used to format the money object.\n     *\n     */\n    @Input()\n    precision: number;\n\n    /**\n     * List of currencies that this currency widget support. The format for each entry should be\n     * [currency-code - description]\n     */\n    _currencies: any[];\n\n\n    /**\n     * The formatted currency value. Uses angular currencyPipe to format based on country code.\n     */\n    displayValue: string;\n\n    /**\n     * The currency pipe is used to format our money object.\n     */\n    currencyPipe: CurrencyPipe;\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n\n        // Initialize currencies.\n        this.initCurrencies();\n\n        this.currencyPipe = new CurrencyPipe(env.locale);\n\n        env.onLocaleChange.subscribe((locale: string) => {\n            this.currencyPipe = new CurrencyPipe(locale);\n\n            if (isPresent(this.money)) {\n                this.displayValue = this.formatCurrency(\n                    this.money.amount);\n            }\n        });\n    }\n\n    ngOnInit()\n    {\n\n        super.ngOnInit();\n        super.registerFormControl(this.money);\n\n        this.initCurrencies();\n\n        if (isBlank(this.currencySelection)) {\n            this.currencySelection = this._currencies[0];\n        }\n\n        // ready the money field if it exists. and override the existing values.\n        if (this.money) {\n            this.currencySelection = this.money.currency;\n        } else {\n            this.money = new Money(null, this.currencySelection);\n        }\n\n        this.displayValue = this.formatCurrency(this.money.amount);\n    }\n\n\n    private initCurrencies()\n    {\n        if (!this._currencies || this._currencies.length === 0) {\n            this._currencies = ['USD', 'CNY', 'AUD', 'EUR', 'GBP'];\n        }\n    }\n\n\n    /**\n     * Display the real value when the user clicks in the currency widget. Then he can modify the\n     * value without seeing the formatting.\n     *\n     * @param el\n     */\n    onFocus(el: any): void\n    {\n        if (isPresent(this.money) && isPresent(this.money.amount)) {\n            this.displayValue = this.money.amount.toString();\n        }\n    }\n\n    /**\n     * display the formatted currency value when the user navigates away.\n     * @param el\n     */\n    onBlur(el: any): void\n    {\n        this.money = this.money.clone({amount: Number(el.value)});\n        this.displayValue = this.formatCurrency(this.money.amount);\n\n        this.onModelChanged(this.money);\n    }\n\n    onSelection(currency: any): void\n    {\n        this.currencySelection = currency;\n        this.displayValue = this.formatCurrency(this.money.amount);\n\n    }\n\n\n    /**\n     * Function will check to see if currency is a valid number before formatting.\n     * @param val\n     */\n    private formatCurrency(val: any): any\n    {\n        if (!val || val.length === 0) {\n            return val;\n        }\n\n        if (isNaN(val)) {\n            return val;\n        }\n\n        let code = 'USD';\n        if (this.currencySelection) {\n            code = this.currencySelection;\n        }\n\n        this.money = this.money.clone({currency: this.currencySelection});\n\n        // By default, the precision is 2. For example, 10.23 USD.\n        let digits = '1.0-2';\n        // If precision is present, use it for format the money value for display.\n        if (isPresent(this.precision)) {\n            digits = '1.0-' + this.precision;\n        }\n        return this.currencyPipe.transform(val, code, 'symbol', digits);\n    }\n\n    getMoneyCurrency(): string {\n        if (isPresent(this.displayValue) && this.displayValue.length > 0) {\n            return this.currencySelection;\n        }\n        return '';\n    }\n\n    @Input()\n    get currencies(): any[]\n    {\n        return this._currencies;\n    }\n\n    set currencies(value: any[])\n    {\n        if (isPresent(value)) {\n            this._currencies = value;\n        }\n    }\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any)\n    {\n        if ((value instanceof Money) && !equals(value, this.money)) {\n            this.money = value;\n            if (isPresent(this.money.currency)) {\n                this.currencySelection = this.money.currency;\n            }\n            this.displayValue = this.formatCurrency(this.money.amount);\n            this.formControl.setValue(this.money);\n        }\n    }\n}\n\n/**\n * Money object is represented as a value, locale, and currencyCode\n */\nexport class Money implements Value\n{\n    uniqueName: string;\n\n    constructor(public readonly amount: number = 0, public readonly currency: string = 'USD',\n                public readonly locale: string = 'en_US')\n    {\n    }\n\n\n    getTypes(): any\n    {\n        return {\n            amount: Number,\n            currency: String,\n            locale: String\n        };\n    }\n\n    className(): string\n    {\n        return 'Money';\n    }\n\n    $proto(): Money\n    {\n        return new Money(1, '23', '33');\n    }\n\n    toString(): string\n    {\n        return this.amount + ', locale: ' + this.locale + ', code:  ' + this.currency;\n    }\n\n\n    clone(data: { amount?: number, currency?: string, locale?: string } = {}): Money\n    {\n        return new Money(\n            isPresent(data.amount) ? data.amount : this.amount,\n            isPresent(data.currency) ? data.currency : this.currency,\n            isPresent(data.locale) ? data.locale : this.locale\n        );\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule, CurrencyPipe} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DropdownModule, InputTextModule} from 'primeng/primeng';\nimport {CurrencyComponent} from './currency.component';\nimport {AWStringFieldModule} from '../string/string.module';\nimport {AWDropdownModule} from '../dropdown/dropdown.module';\nimport {AWCoreComponentModule} from '../../core/core.module';\n\n@NgModule({\n    declarations: [\n        CurrencyComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextModule,\n        DropdownModule,\n        AWDropdownModule,\n        AWStringFieldModule,\n        AWCoreComponentModule\n    ],\n    entryComponents: [\n        CurrencyComponent\n    ],\n    exports: [\n        CurrencyComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: [CurrencyPipe]\n})\nexport class AWCurrencyModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf\n} from '@angular/core';\nimport {distinctUntilChanged} from 'rxjs/operators';\nimport {Environment, isBlank, isDate} from '@aribaui/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\n\n\n/**\n * Lightweight and configurable Date and Time component based on the primeng. This\n * component combines both date picker as well as time picker\n *\n *\n *  ### Example\n *  ```\n *\n *  @Component({\n *    selector: 'myTimer' ,\n *    template: `\n *    <aw-date-time [value]=\"date\" [editable]=\"editable\"  [name]=\"'dueDate'\">\n *    </aw-date-time>\n *\n *    `\n *    })\n *    export class MyTimmerComponet\n *    {\n *\n *        date: Date = new Date();\n *\n *\n *        constructor ()\n *        {\n *            this.date.setFullYear(2016 , 10 , 3);\n *            this.date.setHours(10 , 10 , 10);\n *        }\n *    }\n *\n * ```\n *\n * By default you will see date field and time field is hidden to show both you just do following:\n *\n *  ```\n *\n *  @Component({\n *    selector: 'myTimer' ,\n *    template: `\n *\n *    <aw-date-time [value]=\"date\"  [showTime]=\"showTime\" [editable]=\"editable\"  [name]=\"'bbdd'\">\n *    </aw-date-time>\n *\n *    `\n *    })\n *    export class MyTimmerComponet\n *    {\n *        date: Date = new Date();\n *        showTime = true;\n *\n *        constructor ()\n *        {\n *            this.date.setFullYear(2016 , 10 , 3);\n *            this.date.setHours(10 , 10 , 10);\n *        }\n *    }\n *\n * ```\n *\n *\n *\n */\n\n\nexport const DATETIME_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DateAndTimeComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'aw-date-time',\n    template: `<ng-template [ngIf]=\"editable\">\n\n    <div class=\"w-datetime \" [class.has-time]=\"showTime\" [formGroup]=\"formGroup\">\n\n        <p-calendar formControlName=\"{{name}}\"\n                    [defaultDate]=\"defaultDate\"\n                    [showIcon]=\"showIcon\"\n                    dateFormat=\"{{showTime ? formatNameWithTime : formatPattern}}\"\n                    [yearNavigator]=\"showNavigation\"\n                    [monthNavigator]=\"showNavigation\"\n                    [yearRange]=\"yearRange\"\n                    placeholder=\"{{showTime ? formatNameWithTime.toUpperCase() : formatPattern.toUpperCase()}}\"\n                    (onSelect)=\"onDateChange($event)\"\n                    [timeOnly]=\"!showDate\"\n                    [readonlyInput]=\"true\"\n                    [locale]=\"i18n\">\n        </p-calendar>\n\n        <p-calendar *ngIf=\"showTime\"\n                    icon=\"icon-history\"\n                    formControlName=\"{{name}}\"\n                    [hourFormat]=\"hourFormat\"\n                    [defaultDate]=\"defaultDate\"\n                    [showIcon]=\"showIcon\"\n                    [timeOnly]=\"showTime\"\n                    [showTime]=\"showTime\"\n                    [placeholder]=\"timePlaceHolder\"\n                    (onSelect)=\"onDateChange($event)\"\n                    [locale]=\"i18n\">\n        </p-calendar>\n\n    </div>\n</ng-template>\n\n<ng-template [ngIf]=\"!editable\">\n    <aw-string value=\"{{value | date: formatPatternNG}}\"></aw-string>\n</ng-template>\n`,\n    styles: [`/deep/ .w-datetime .ui-calendar button{border:0;width:0}/deep/ .w-datetime .ui-calendar.ui-calendar-w-btn .ui-inputtext{width:100%}/deep/ .ui-calendar .ui-calendar-button .ui-button-icon-left{font-family:\"SAP icon fonts\";color:#199de0;cursor:pointer;font-size:1.4em}/deep/ .ui-calendar .ui-calendar-button .ui-button-icon-left.pi-calendar:before{content:'\\\\e0e0'}/deep/ .ui-calendar .ui-calendar-button .ui-button-icon-left.icon-history:before{content:'\\\\e02d'}/deep/ .ui-datepicker{width:24.28em;line-height:25px;padding:0;border-color:#979797;box-shadow:none}/deep/ .ui-datepicker .ui-datepicker-header{padding:.92em 0;font-weight:400;color:#000;font-size:1em}/deep/ .ui-datepicker .ui-datepicker-next,/deep/ .ui-datepicker .ui-datepicker-prev{top:1em}/deep/ .ui-datepicker .ui-datepicker-prev{left:.2em}/deep/ .ui-datepicker .ui-datepicker-next{right:.2em}/deep/ .ui-datepicker table{font-size:1em;margin:0 0 1.5em}/deep/ .ui-datepicker th{font-weight:400;background-color:#ececec;color:#363636;padding:.786em 1.07em}/deep/ .ui-datepicker td{padding:.1em}/deep/ .ui-datepicker td a{text-align:center;width:2.7em;height:2.7em;line-height:2.7em;padding:0;border-radius:50%}/deep/ .ui-datepicker td a.ui-state-default{border-color:transparent}/deep/ .ui-datepicker td a.ui-state-active{background-color:#199de0;color:#fff}/deep/ .ui-datepicker .pi{font-size:1em}/deep/ .ui-datepicker .pi.pi-chevron-left:before{content:'\\\\e1ee'}/deep/ .ui-datepicker .pi.pi-chevron-right:before{content:'\\\\e1ed'}/deep/ .ui-datepicker .ui-datepicker-calendar td:not(.ui-state-disabled) a:hover{border-color:transparent;background-color:rgba(25,157,224,.7);opacity:.75;color:#363636}/deep/ .ui-datepicker-timeonly{width:100%}/deep/ .ui-timepicker{font-size:1.14em;color:#767676;font-weight:400}/deep/ .ui-timepicker .pi{font-size:1em}/deep/ .ui-timepicker .pi.pi-chevron-up:before{content:'\\\\e1f0'}/deep/ .ui-timepicker .pi.pi-chevron-down:before{content:'\\\\e1ef'}/deep/ .ui-timepicker>div{margin-left:0}/deep/ .ui-timepicker .ui-separator{width:.1em;min-width:.1em}/deep/ .ui-timepicker .ui-separator .pi{font-size:0}/deep/ .ui-datepicker-trigger{background-color:transparent}/deep/ .ui-datepicker-trigger.ui-button:enabled:hover,/deep/ .ui-datepicker-trigger.ui-button:focus{background-color:transparent}/deep/ .has-time{display:flex;flex-wrap:nowrap}/deep/ .has-time p-calendar:first-child{width:55%;margin-right:14px}/deep/ .has-time p-calendar:last-child{width:45%}/deep/ .has-time p-calendar:last-child .ui-datepicker{padding:0}/deep/ .has-time .ui-button-icon-left{line-height:18px}`],\n    providers: [\n        DATETIME_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => DateAndTimeComponent)}\n    ]\n\n})\nexport class DateAndTimeComponent extends BaseFormComponent {\n\n    static readonly NgTime12: string = 'hh:mm a';\n    static readonly NgTime24: string = 'HH.mm a';\n\n\n    /**\n     * Default value used to set the date and time picker\n     */\n    @Input()\n    value: Date;\n\n    /**\n     * Default date format pattern used if none is passed\n     *\n     */\n    @Input()\n    formatPattern: string = 'mm/dd/yy';\n\n\n    /**\n     * Special workaround as formatters in the primeNG and angular are different so until its\n     * fixed we need to keep this extra pattern.\n     */\n    @Input()\n    formatPatternNG: string = 'MM/dd/yy';\n\n\n    /**\n     * Shows and hides navigation bar with year and months selections\n     */\n    @Input()\n    showNavigation: boolean = false;\n\n\n    /**\n     * Year range displayed for the drop down.\n     */\n    @Input()\n    yearRange: string;\n\n    /**\n     * Shows and hides navigation bar with year and months selections\n     */\n    @Input()\n    showIcon: boolean = true;\n\n    /**\n     * Whether to show timepicker\n     */\n    @Input()\n    showTime: boolean = false;\n\n\n    /**\n     * Whether to show DatePicker. Even we can hide it. it should be for most of the case always\n     * true\n     */\n    @Input()\n    showDate: boolean = true;\n\n\n    /**\n     *\n     * Tells the date picker what format it should use when presenting time. When hourFormat is 12,\n     * it shows the AM, PM\n     *\n     */\n    @Input()\n    hourFormat: string = '24';\n\n    /**\n     * Triggers event when specific date is clicked inside DatePicker\n     *\n     */\n    @Output()\n    onChange: EventEmitter<Date> = new EventEmitter<Date>();\n\n    /**\n     * Set the date to highlight on first opening if the field is blank.\n     *\n     */\n    defaultDate: Date = new Date();\n\n    /**\n     * In case of Datetime we need to make sure the DateAndTime formatName is not propagated\n     * to Date field.\n     */\n    formatNameWithTime: string;\n\n\n    i18n: any;\n    timePlaceHolder: string = 'hh:ss';\n\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                protected parentContainer: BaseFormComponent) {\n        super(env, parentContainer);\n    }\n\n    ngOnInit() {\n\n        super.ngOnInit();\n        super.registerFormControl(this.value);\n\n        // default to dateTime pattern which is defined in resource files\n        if (this.hourFormat !== '12' && this.hourFormat !== '24') {\n            this.hourFormat = '24';\n        }\n\n        this.timePlaceHolder = (this.hourFormat === '12') ?\n            ` ${DateAndTimeComponent.NgTime12}` : ` ${DateAndTimeComponent.NgTime24}`;\n\n        this.formControl.valueChanges.pipe(distinctUntilChanged()).subscribe((val: Date) => {\n            this.value = val;\n            this.onModelChanged(this.value);\n        });\n\n        this.initTranslations();\n\n        this.env.onLocaleChange.subscribe((locale: string) => {\n            this.initTranslations();\n\n        });\n\n    }\n\n\n    /**\n     * Need to refactor this as this really get complicated trying to cover usecase with time\n     * and date and every format we have. We should probably have separate patterns for\n     * dates only and date + time\n     */\n    private initTranslations() {\n\n        this.formatNameWithTime = this.formatPattern;\n        if (!this.showDate) {\n            this.formatPatternNG = this.formatPattern += (this.hourFormat === '12') ?\n                ` ${DateAndTimeComponent.NgTime12}` : ` ${DateAndTimeComponent.NgTime24}`;\n\n        }\n\n        if (this.showTime) {\n            let timeStarts = this.formatPattern.indexOf('h');\n            if (timeStarts !== -1) {\n                this.formatNameWithTime = this.formatPattern.substring(0, timeStarts);\n            }\n            this.formatPatternNG += (this.hourFormat === '12') ?\n                ` ${DateAndTimeComponent.NgTime12}` : ` ${DateAndTimeComponent.NgTime24}`;\n        }\n\n\n        this.i18n = {\n            firstDayOfWeek: 0,\n            dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',\n                'Saturday'],\n            dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            dayNamesMin: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n                'September', 'October', 'November', 'December'],\n            monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct',\n                'Nov', 'Dec']\n        };\n\n    }\n\n\n    /**\n     * Fired when dates changes. Here we update  this.value - > date and also update value inside\n     * formController\n     *\n     */\n    onDateChange(event: any): void {\n\n        if (isBlank(event)) {\n            // throw some error ?\n            return;\n        }\n\n        this.value = isDate(event) ? event : new Date(event);\n\n        this.formControl.setValue(this.value, {onlySelf: false, emitEvent: true});\n        this.onModelChanged(this.value);\n        this.onChange.emit(this.value);\n    }\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any) {\n        if (value !== this.value) {\n            this.value = value;\n            this.formControl.setValue(value);\n        }\n\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CalendarModule} from 'primeng/primeng';\nimport {DateAndTimeComponent} from './date-and-time.component';\nimport {AWStringFieldModule} from '../string/string.module';\n\n@NgModule({\n    declarations: [\n        DateAndTimeComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CalendarModule,\n        AWStringFieldModule\n    ],\n    entryComponents: [\n        DateAndTimeComponent\n    ],\n    exports: [\n        DateAndTimeComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ]\n})\nexport class AWDateAndTimeModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component} from '@angular/core';\n\n/**\n * An dialog header area.\n *\n * See {@link DialogComponent} for more explanation.\n */\n@Component({\n    selector: 'aw-dialog-header',\n    template: '<ng-content></ng-content>'\n})\nexport class DialogHeaderComponent\n{\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component} from '@angular/core';\n\n/**\n * An dialog header area.\n *\n * See {@link DialogComponent} for more explanation.\n */\n@Component({\n    selector: 'aw-dialog-footer',\n    template: '<ng-content></ng-content>'\n})\nexport class DialogFooterComponent\n{\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ContentChild, EventEmitter, Input, Output} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {ModalContainer} from '../../core/modal-service/modal-container';\nimport {DialogHeaderComponent} from './dialog-header.component';\nimport {DialogFooterComponent} from './dialog-footer.component';\n\n/**\n * Dialog Component that provides the look and feel for a modal dialog. This component has three\n * sections: header, body, and footer. It can be used by itself or extended.\n *\n * There are three types of popup.\n *   1.  a regular dialog box that has header, body and footer. It's the most customizable.\n *   2.  a confirmation box is similar to a dialog box but has accept and reject action buttons.\n *   3.  a overlay, which is a very basic popup with what you put inside.\n *       It doesn't have header and footer.\n *\n * There are two ways to use any popup component.\n *   1.  Either directly by using component, aw-dialog, aw-confirmation or aw-overlay\n *   2.  or the ModalService  service.open(<DialogComponent>), service.close()\n *\n * Usage:\n *    1.  Using Dialog directly to display a modal popup. This usage is a quick way to show a\n * message to the user.\n *\n *             this.modalService.open<DialogComponent>( DialogComponent, {\n *                     title: 'My Popup Title',\n *                     body: 'My Popup Body'\n *              });\n *\n *\n *   2.   Use the component inside your template.\n *\n *          @Component({\n *                selector: 'aw-page' ,\n *                           template: `\n *                              <aw-dialog [(visible)]=\"display\" [modal]=\"true\"\n *                                        (onOpen)=\"openAction()\" (onClose)=\"closeAction()\">\n *\n *                                    <aw-dialog-header>Dialog Header</aw-dialog-header>\n *\n *                                     Dialog Body: Creating a dialog using the dialog component\n *\n *                                    <aw-dialog-footer>\n *                                      <aw-button [size]=\"'small'\" [style]=\"'primary'\"\n *                                                 (click)=\"close()\">OK</aw-button>\n *                                    </aw-dialog-footer>\n *                              </aw-dialog>\n *\n *                          <aw-button [size]=\"'small'\" (click)=\"open()\">Open Dialog</aw-button>\n *                  `\n *         export class MyPageComponent implements OnInit {\n *\n *                     display: boolean = false;\n *\n *                     dialogAction: string;\n *\n *                     constructor(private modalService: ModalService) {\n *                          super();\n *                       }\n *                     ngOnInit() { }\n *\n *                     open() {\n *                        this.display = true;\n *                     }\n *\n *                     openAction()  {\n *                        this.dialogAction = \"open\";\n *                      }\n *       }\n *\n *\n */\n@Component({\n    selector: 'aw-dialog',\n    template: `<p-dialog [header]=\"title\" [(visible)]=\"visible\"\n          [modal]=\"modal\" [closable]=\"closable\" [width]=\"width\" [height]=\"height\"\n          [styleClass]=\"styleClass\" [appendTo]=\"appendTo\" (onShow)=\"open()\" (onHide)=\"close()\">\n\n    <p-header *ngIf=\"hasHeader()\">\n        <ng-content select=\"aw-dialog-header\"></ng-content>\n    </p-header>\n\n    {{body}}\n    <ng-content></ng-content>\n\n    <p-footer *ngIf=\"hasFooter()\">\n        <div class=\"dialog-footer-separator\"></div>\n        <ng-content select=\"aw-dialog-footer\"></ng-content>\n    </p-footer>\n</p-dialog>\n`,\n    styles: [`::ng-deep .ui-dialog .ui-dialog-titlebar{background-color:#f2f2f2;padding:15px 20px}::ng-deep .ui-dialog .ui-dialog-titlebar .ui-dialog-titlebar-icon:hover{border-color:transparent}::ng-deep .ui-widget-header{font-weight:400;font-size:16px}::ng-deep .ui-dialog .ui-dialog-content{padding:15px 20px;line-height:1.3em}::ng-deep .ui-dialog .ui-widget-content{border:none}::ng-deep .ui-dialog.ui-widget-content{border:none;box-shadow:0 2px 10px 0 rgba(0,0,0,.3)}::ng-deep .ui-dialog .dialog-footer-separator{border-top:1px solid #d7d7d7;height:14px}::ng-deep .ui-dialog .ui-dialog-footer{padding:0 20px 15px}`]\n})\nexport class DialogComponent extends ModalContainer\n{\n    /**\n     * Title for the Dialog.  if title and 'TitleTemplate' are both set, titleTemplate takes\n     * precedence.\n     */\n    @Input()\n    title: string;\n\n    /**\n     * Body section for Dialog. Caller should use either the body string, or content projection\n     * to add values to the dialog. If both are used, they will both show up.\n     */\n    @Input()\n    body: string;\n    /**\n     * support two way data binding on visible property.\n     */\n    @Output()\n    visibleChange: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * whether this dialog blocks the rest of the page or not when displayed.\n     */\n    @Input()\n    modal: boolean = true;\n\n    /**\n     * Whether there's an x at the top right that makes the dialog closable.\n     */\n    @Input()\n    closable: boolean = true;\n\n    /**\n     * Target element to attach the dialog. \"body\" or local ng-template variable are valid.\n     */\n    @Input()\n    appendTo: any;\n\n    /**\n     * Event fired when dialog is closed.\n     */\n    @Output()\n    onClose: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Event fired when the dialog is opened.\n     */\n    @Output()\n    onOpen: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Header component. Usually contains the title.\n     */\n    @ContentChild(DialogHeaderComponent) header: DialogHeaderComponent;\n\n    /**\n     * Dialog footer. Usually contains buttons\n     */\n    @ContentChild(DialogFooterComponent) footer: DialogFooterComponent;\n\n\n    constructor(public env: Environment)\n    {\n        super(env);\n\n        this.width = 300;\n        this.height = 'auto';\n    }\n\n    /**\n     * Open this dialog.\n     */\n    open()\n    {\n        this.visible = true;\n        this.onOpen.emit();\n\n        // visible is a 2-way binding variable.\n        this.visibleChange.emit(true);\n    }\n\n    /**\n     * close the dialog\n     */\n    close()\n    {\n        this.visible = false;\n        this.onClose.emit();\n\n        // Important to make sure change is set on parent binding.\n        // Otherwise, the variable and dialog open/close state can be out\n        // of sync and we wouldn't trigger change detection.\n        this.visibleChange.emit(false);\n    }\n\n    /**\n     * Does this dialog have header.\n     *\n     */\n    hasHeader(): boolean\n    {\n        return isPresent(this.header);\n    }\n\n    /**\n     * Does this dialog have footer.\n     *\n     */\n    hasFooter(): boolean\n    {\n        return isPresent(this.footer);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AWCoreComponentModule} from '../../core/core.module';\nimport {DialogComponent} from './dialog.component';\nimport {DialogHeaderComponent} from './dialog-header.component';\nimport {DialogFooterComponent} from './dialog-footer.component';\nimport {ModalComponent} from '../../core/modal-service/modal/modal.component';\nimport {DialogModule} from 'primeng/primeng';\n\n@NgModule({\n    declarations: [\n        DialogComponent,\n        DialogHeaderComponent,\n        DialogFooterComponent\n    ],\n    imports: [\n        CommonModule,\n        AWCoreComponentModule,\n        DialogModule\n    ],\n    entryComponents: [\n        ModalComponent,\n        DialogComponent,\n        DialogHeaderComponent,\n        DialogFooterComponent\n    ],\n    exports: [\n        DialogComponent,\n        DialogHeaderComponent,\n        DialogFooterComponent,\n        AWCoreComponentModule\n    ],\n    providers: []\n})\nexport class AWDialogModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    SkipSelf,\n    ViewContainerRef\n} from '@angular/core';\nimport {\n    Environment,\n    equals,\n    FieldPath,\n    isArray,\n    isBlank,\n    isFunction,\n    isPresent,\n    ListWrapper\n} from '@aribaui/core';\nimport {ChooserSelectionState} from '../chooser/chooser-selection-state';\nimport {ChooserState} from '../chooser/chooser-state';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {ChooserDataSource} from '../chooser/chooser-data-source';\nimport {DATA_SOURCE} from '../../core/data/data-source';\nimport {DataFinders, QueryType} from '../../core/data/data-finders';\nimport {DataProviders} from '../../core/data/data-providers';\n\n\n/**\n * Convenient wrapper class around controls such as radiobuttons, dropdown, checkboxes,\n * Chooser. The type of the chooser may be determined dynamically based on the number of items in\n * the data source list, or can be specified explicitly via the \"type\" binding.\n *\n *\n *\n */\n@Component({\n    selector: 'aw-generic-chooser',\n    template: `<ng-container [ngSwitch]=\"type\">\n\n    <ng-template [ngSwitchCase]=\"'Checkbox'\">\n        <aw-checkbox-list [list]=\"list\"\n                          [editable]=\"editable\"\n                          [selections]=\"selection\"\n                          [name]=\"name\"\n                          [disabled]=\"disabled\"\n                          [labelFormatter]=\"displayValue\"\n                          (onSelection)=\"onSelection($event)\">\n        </aw-checkbox-list>\n    </ng-template>\n\n\n    <ng-template [ngSwitchCase]=\"'Radio'\">\n        <aw-radiobutton-list [list]=\"list\"\n                             [selection]=\"selection\"\n                             [editable]=\"editable\"\n                             [name]=\"name\"\n                             [disabled]=\"disabled\"\n                             [labelFormatter]=\"displayValue\"\n                             (onSelection)=\"onSelection($event)\">\n        </aw-radiobutton-list>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'Dropdown'\">\n        <aw-dropdown [list]=\"list\"\n                     [isStandalone]=\"false\"\n                     [editable]=\"editable\"\n                     [noSelectionString]=\"noSelectionString\"\n                     [selection]=\"selection\"\n                     [disabled]=\"disabled\"\n                     [name]=\"name\"\n                     (onSelection)=\"onSelection($event)\">\n            <ng-template #itemTemplate let-item>\n\n                <!-- todo: allow to pass a PIPE to do some additional formatting -->\n                {{ displayValue(item.value) }}\n            </ng-template>\n        </aw-dropdown>\n    </ng-template>\n\n\n    <ng-template [ngSwitchCase]=\"'Chooser'\">\n        <aw-chooser #chooser\n                    [editable]=\"editable\"\n                    [isStandalone]=\"false\"\n                    [name]=\"name\"\n                    [multiselect]=\"multiselect\"\n                    [dataSource]=\"dataSource\"\n                    [valueTransformer]=\"displayValue\"\n                    [disabled]=\"disabled\">\n\n        </aw-chooser>\n\n    </ng-template>\n\n</ng-container>\n`,\n    styles: [``],\n    providers: [\n        {provide: BaseFormComponent, useExisting: forwardRef(() => GenericChooserComponent)},\n        {provide: DATA_SOURCE, useClass: ChooserDataSource, deps: [DataProviders, DataFinders]}\n    ]\n\n})\nexport class GenericChooserComponent extends BaseFormComponent\n{\n\n    /**\n     * Ordered list of items assignable to the key of the object\n     */\n    @Input()\n    list: any[];\n\n    /**\n     * The object this control is being assigned to.\n     */\n    @Input()\n    object: any;\n\n\n    /**\n     * The key field path this control is being assigned to.\n     */\n    @Input()\n    key: string;\n\n\n    /**\n     * Can be used in place of LIST binding to retrieve a list based on the ChoiceSource\n     *\n     */\n    @Input()\n    destinationClass: string;\n\n\n    /**\n     * Used when retrieving choiceSource by destination class and this are extra params that can be\n     * used to narrow the matching or to pass parameters into ChoiceSource provider\n     */\n    @Input()\n    choiceProviderParams: Map<string, any>;\n\n\n    /**\n     *  Is this a List property, or a to-one.\n     */\n    @Input()\n    multiselect: boolean = false;\n\n    /**\n     *  The style of chooser to use (Radio, Checkbox, Dropdown, Chooser)\n     *  Defaults based on cardinality of the list and whether it's multiSelect.\n     */\n    @Input()\n    type: string;\n\n    /**\n     * Support custom key. in order to make this work we need to introduce custom <templates> for\n     * all this chooser types\n     */\n    @Input()\n    displayKey: string;\n\n    // /**\n    //  *  Should we attempt a match as they type (against the full list)\n    //  */\n    // @Input()\n    // allowFullMatchOnInput: boolean;\n\n    /**\n     * String rendered as first value in the dropdown which let the user to make 'no selection'\n     * from available list of values. When this option is active and use make this selection we\n     * save a NULL value\n     */\n    @Input()\n    noSelectionString: string;\n\n\n    /**\n     * Generic Chooser works directly with object and its references and we need to create this\n     * keypath to be able to set/get value from target or parent object\n     */\n    keyPath: FieldPath;\n\n\n    constructor(public env: Environment, private _viewContainer: ViewContainerRef,\n                @Inject(DATA_SOURCE) public dataSource: ChooserDataSource,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        if (isBlank(this.object)) {\n            this.object = (<any>this._viewContainer.injector).view.context;\n        }\n        this.keyPath = new FieldPath(this.key);\n        let defaultDataProvider = null;\n\n        if (isPresent(this.list)) {\n            defaultDataProvider = this.dataSource.dataProviders.find(this.list);\n        } else {\n            defaultDataProvider = this.dataSource.dataProviders.find(this.destinationClass);\n        }\n\n        let projectedSize = defaultDataProvider.expectedCount(this.choiceProviderParams);\n        this.initType(projectedSize);\n\n        if (this.type === 'Chooser') {\n\n            this.dataSource.init({\n                dataProvider: defaultDataProvider,\n                queryType: QueryType.FullText,\n                lookupKey: this.displayKey,\n                state: new ChooserState(new GCChooserState(this), this.multiselect),\n                multiselect: this.multiselect\n            });\n        } else {\n\n            // do we need to read this value in async?\n            this.list = defaultDataProvider.data();\n        }\n        super.registerFormControl(this.selection);\n        this.validateRequired();\n\n        if (isBlank(this.selection)) {\n            // this.noSelectionString = this.i18n.instant('Widgets.gchooser.noSelString');\n            this.noSelectionString = 'Select a Item';\n        }\n    }\n\n    /**\n     *\n     * When @Input type is not passed we try to guess and select the best type for current data\n     *\n     */\n    private initType(projectedSize: number)\n    {\n        if (isBlank(this.type)) {\n            if (this.multiselect) {\n                this.type = (projectedSize <= 0 || projectedSize > 8) ? 'Chooser' : 'Checkbox';\n            } else {\n                this.type = (projectedSize <= 0 || projectedSize > 20) ? 'Chooser'\n                    : (projectedSize < 6) ? 'Radio' :\n                        'Dropdown';\n            }\n        }\n    }\n\n    /**\n     * There are certain properties which are required by this component. As already mentioned\n     * above GenericChooser works with references and thefore two key properties are object and key\n     * so we can access an object\n     *\n     *\n     */\n    private validateRequired()\n    {\n        if (isBlank(this.object)) {\n            throw Error('Cannot continue without a object');\n        }\n\n        if (isBlank(this.key)) {\n            throw Error('Cannot continue without a key binding');\n        }\n        if (isBlank(this.list) && isBlank(this.destinationClass)) {\n            throw Error('Cannot continue without having either list of values or destinationClass');\n        }\n\n        if (isPresent(\n                this.type) &&\n            (this.type !== 'Radio' && this.type !== 'Checkbox' && this.type !== 'Dropdown' &&\n                this.type !== 'Chooser')) {\n            throw Error('Cannot instantiate GenericChooser  - invalid type');\n        }\n\n        if (isBlank(this.displayKey)) {\n            this.displayKey = 'toString';\n        }\n    }\n\n    /**\n     *\n     * Used when displaying value both from primitive type as well complex object. If you want to\n     * control how item is displayed you can provide display key, which is can be a  method or\n     * property of the object you are displaying.\n     *\n     * Todo: think about formatters as well\n     *\n     */\n    displayValue(item: any): string\n    {\n        if (isBlank(this.displayKey)) {\n            return item;\n        }\n        let fieldValue = FieldPath.getFieldValue(item, this.displayKey);\n        if (isFunction(fieldValue)) {\n            return fieldValue.call(item);\n        }\n        return fieldValue;\n    }\n\n\n    /**\n     *  Retrieve a current value from the parent/target object\n     *\n     */\n    get selection(): any\n    {\n        return this.keyPath.getFieldValue(this.object);\n    }\n\n    /**\n     *  set value back to the object\n     *\n     */\n    set selection(value: any)\n    {\n        this.keyPath.setFieldValue(this.object, value);\n    }\n\n\n    onSelection(value: any): void\n    {\n        this.selection = value;\n\n        this.formControl.setValue(this.selection);\n        this.formControl.markAsDirty();\n\n    }\n}\n\n/**\n * GenericChooser implementation of the ChooserSelectionState which is used when Type = Chooser.\n *\n */\nexport class GCChooserState extends ChooserSelectionState\n{\n\n    constructor(private gChooser: GenericChooserComponent)\n    {\n        super();\n    }\n\n    setSelectionState(selection: any, selected: boolean): void\n    {\n        if (selected === this.isSelected(selection)) {\n            return;\n        }\n\n        if (this.gChooser.multiselect) {\n\n            // Check if we can implement smarter and more generic way how we use it in java\n            // RelationshipField.addTo(_object, _keyPath, selection);\n\n            let multiRel: Array<any> = this.gChooser.keyPath.getFieldValue(this.gChooser.object);\n            if (isBlank(multiRel)) {\n                multiRel = [];\n\n            } else if (isPresent(multiRel) && !isArray(multiRel)) {\n                throw new Error('I can not store multiselect value into non-array object');\n            }\n\n            if (selected) {\n                multiRel.push(selection);\n                this.gChooser.selection = multiRel;\n\n            } else {\n                ListWrapper.removeIfExist(multiRel, selection);\n            }\n\n        } else {\n            if (!selection) {\n                selection = null;\n            }\n            this.gChooser.selection = selection;\n\n        }\n    }\n\n    selectedObject(): any\n    {\n        if (this.gChooser.multiselect) {\n            let objects = this.selectedObjects();\n            return (isBlank(objects) || ListWrapper.isEmpty(objects)) ? null : ListWrapper.last(\n                objects);\n        }\n        return this.gChooser.selection;\n    }\n\n    selectedObjects(): Array<any>\n    {\n        let selection = this.gChooser.selection;\n        if (this.gChooser.multiselect && isBlank(selection)) {\n            selection = [];\n        }\n        return (this.gChooser.multiselect && isArray(selection)) ? selection : [selection];\n    }\n\n    isSelected(selection: any): boolean\n    {\n        if (this.gChooser.multiselect) {\n            return ListWrapper.containsComplex(this.selectedObjects(), selection);\n        }\n        let curValue = this.selectedObject();\n        return equals(curValue, selection);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {\n    AfterContentInit,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\n\n\n/**\n * Wrapper class for RadioButton component providing convenient way to to render RadioButton Groups\n *\n *\n * ### Example\n *\n *\n * ```\n *      @Component({\n *          selector: 'gender-selector' ,\n *          template: `\n *              <aw-radiobutton-list [list]=\"rbListValues\" [layout]=\"layout\"\n *     [selection]=\"selectedValue\" [name]=\"'name'\">\n *               </aw-radiobutton-list>\n *      `\n *      })\n *      export class GenderSelectorComponent\n *      {\n *          rbListValues: string[] = ['male' , 'female' , 'other'];\n *          selectedValue: string = 'other';\n *          layout: string = 'stacked';\n *\n *\n *          formGroup: FormGroup = new FormGroup({});\n *\n *\n *          onCBClick (event): void\n *          {\n *              console.log('onCBClick = ' + event);\n *          }\n *\n *      }\n *\n * ```\n */\n\n\nexport const RB_LIST_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonListComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-radiobutton-list',\n    template: `<div *ngFor=\"let item of list;  let i = index\" class=\"ui-g\">\n\n    <div class=\"ui-g-12\">\n        <aw-radiobutton\n            [(ngModel)]=\"model\"\n            (ngModelChange)=\"onChange($event)\"\n            [isStandalone]=\"false\"\n            [name]=\"name\"\n            [value]=\"i\"\n            [label]=\"labelValue(item)\">\n        </aw-radiobutton>\n    </div>\n\n</div>\n`,\n    styles: [``],\n    providers: [\n        RB_LIST_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => RadioButtonListComponent)}\n    ]\n\n})\nexport class RadioButtonListComponent extends BaseFormComponent implements AfterContentInit\n{\n\n    /**\n     * LIst of values used to render the radio button group\n     */\n    @Input()\n    list: any[];\n\n\n    /**\n     * Identifies which radio buttons is selected when rendered\n     */\n    @Input()\n    selection: any;\n\n\n    /**\n     * special expression to format label\n     */\n    @Input()\n    labelFormatter: (value: any) => string;\n\n\n    /**\n     *\n     * Fires an event when radio button is selected\n     *\n     */\n    @Output()\n    onSelection: EventEmitter<any> = new EventEmitter<any>();\n\n\n    /**\n     * internal model to listen for radio value changes\n     *\n     */\n    model: any;\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        if (isPresent(this.selection)) {\n            this.model = 0;\n        }\n\n        this.updateModel(this.selection);\n        this.onModelChanged(this.selection);\n        this.registerFormControl(this.selection);\n    }\n\n\n    /**\n     * Label is extracted into a method so in the future we can play how we want to display the\n     * value. Since I want to support formatters for each components we might have a chance to\n     * decide how the label will look like.\n     *\n     */\n    labelValue(item: any): string\n    {\n        if (isPresent(this.labelFormatter)) {\n            return this.labelFormatter(item);\n        }\n        return item.toString();\n    }\n\n\n    /**\n     * In this version of checkboxes we still expect only primitive types. Keep this functionality\n     * in extra method so we can work with it even now we just return the same value back\n     *\n     *\n     */\n    value(item: any): any\n    {\n        return item;\n    }\n\n\n    /**\n     *\n     * On NGModel change retrieve actual record based on the INDEX and propagate it to both\n     * ngModel as well as FormGroup.\n     *\n     */\n    onChange(event: any)\n    {\n        let updatedModel: any = this.list[this.model];\n\n        this.onSelection.emit(updatedModel);\n        this.onModelChanged(updatedModel);\n        this.formControl.setValue(updatedModel, {\n            emitEvent: true,\n            emitViewToModelChange: false\n        });\n    }\n\n\n    /**\n     * Since we might be dealing with complex object store only INDEX number in the model.\n     *\n     */\n    updateModel(souceItem: any): void\n    {\n        let index = this.list.findIndex((elem: any) =>\n        {\n            return souceItem === elem;\n        });\n        this.model = index === -1 ? 0 : index;\n    }\n\n    ngAfterContentInit(): void\n    {\n        let updatedModel: any = this.list[this.model];\n        this.formControl.setValue(updatedModel, {\n            emitEvent: true,\n            emitViewToModelChange: false\n        });\n        // this.cd.detectChanges();\n\n    }\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any)\n    {\n        if (value !== this.value) {\n            let newModel = value;\n            this.updateModel(newModel);\n        }\n\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf\n} from '@angular/core';\nimport {FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Environment} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\n\n\n/**\n *\n * Implements standard HTML radio button on top of PrimeNG with ariba styling\n *\n * ### Example\n *\n * 1. Basic usage using ngModel pre-selected first radio\n *\n *  ```ts\n *\n *      @Component({\n *          selector: 'demo-comp',\n *          template: `\n *              <aw-radiobutton [name]=\"'color'\" [value]=\"'red'\" [label]=\"'Red'\"\n *                             [(ngModel)]=\"model\">\n *             </aw-radiobutton>\n *              <aw-radiobutton [name]=\"'color'\" [value]=\"'blue'\" [label]=\"'Blue'\"\n *                      [(ngModel)]=\"model\">\n *              </aw-radiobutton>\n *      `\n *      })*\n *      class BasicWithNgModelComponent\n *      {\n *          model: string[] = ['red'];\n *\n *          constructor()\n *          {\n *          }\n *      }\n *\n *  ```\n *\n *\n * 2. Basic usage with formGroup\n *\n *\n * ```ts\n *       @Component({\n *           selector: 'demo-comp',\n *           template: `\n *          <div [formGroup]=\"env.currentForm\">\n *               <aw-radiobutton [name]=\"'color2'\" [value]=\"'red'\" [label]=\"'Red'\"\n *               (onChange)=\"onChange($event)\">\n *               </aw-radiobutton>\n *               <aw-radiobutton [name]=\"'color2'\" [value]=\"'blue'\" [label]=\"'Blue'\"\n *               (onChange)=\"onChange($event)\">\n *               </aw-radiobutton>\n *\n *       </div>\n *       `\n *       })\n *       class BasicWithFormGroupComponent implements OnInit\n *       {\n *           model: string = 'blue';\n *\n *           constructor(public env: Environment)\n *           {\n *           }\n *\n *           ngOnInit(): void\n *           {\n *               this.env.currentForm = new FormGroup({});\n *               this.env.currentForm.registerControl('color2', new FormControl(this.model));\n *           }\n *\n *\n *           onChange(event: any): void\n *           {\n *               this.modelSet = event;\n *           }\n *\n *       }\n *  ````\n *\n *\n *\n *\n */\nexport const RAB_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioButtonComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-radiobutton',\n    template: `<span class=\"w-radiobutton\">\n\n    <ng-template [ngIf]=\"editable \">\n        <p-radioButton [name]=\"name\"\n                       [value]=\"value\"\n                       [label]=\"label\"\n                       [(ngModel)]=\"model\"\n                       [disabled]=\"disabled\"\n                       (ngModelChange)=\"onModelChange($event)\"\n                       [class.u-validation-error]=\"!(formControl.valid || (formControl.pristine))\">\n        </p-radioButton>\n    </ng-template>\n</span>\n`,\n    styles: [`/deep/ .w-radiobutton .ui-radiobutton-box{width:23px;height:23px;line-height:23px}/deep/ .w-radiobutton .ui-radiobutton-icon{font-size:1.5em;line-height:1em}`],\n\n    providers: [\n        RAB_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => RadioButtonComponent)}\n    ]\n})\nexport class RadioButtonComponent extends BaseFormComponent\n{\n\n    /**\n     *\n     * A value associated with this radio\n     *\n     */\n    @Input()\n    value: any = '';\n\n\n    /**\n     * Label to be used when rendering a radio\n     */\n    @Input()\n    label: string;\n\n\n    /**\n     * Trigger click event with currrent selected value\n     *\n     */\n    @Output()\n    onChange: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * Internal model to comunicate with primeNg Radio\n     */\n    model: any;\n\n\n    constructor (public env: Environment,\n                 @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                 protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n    ngOnInit ()\n    {\n        super.ngOnInit();\n        if (this.isStandalone) {\n            super.registerFormControl(this.value);\n            this.model = this.formControl.value;\n            this.onModelChanged(this.model);\n\n        } else {\n            this.formControl = <FormControl> this.formGroup.controls[this.name];\n        }\n    }\n\n    /**\n     * Called when radio is clicked. Not using PrimeNG click event as it is fired before\n     * the model is changed. Therefore need to listen on (ngModelChange)\n     *\n     */\n    onModelChange (newVal: any): void\n    {\n        this.onModelChanged(this.model);\n        if (this.isStandalone) {\n            this.formControl.setValue(this.model, {emitEvent: true});\n        }\n        this.onChange.emit(this.model);\n    }\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue (value: any)\n    {\n        if (value !== this.model) {\n            this.model = value;\n            if (this.isStandalone) {\n                this.formControl.setValue(this.model, {emitEvent: true});\n            }\n\n            this.onModelChanged(this.model);\n        }\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RadioButtonComponent} from './radio-button.component';\nimport {RadioButtonModule} from 'primeng/primeng';\n\n\n@NgModule({\n    declarations: [\n        RadioButtonComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RadioButtonModule\n    ],\n    entryComponents: [\n        RadioButtonComponent\n    ],\n    exports: [\n        RadioButtonComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWRadioButtonModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RadioButtonListComponent} from './radio-button-list.component';\nimport {AWRadioButtonModule} from '../radio-button/radio-button.module';\n\n\n@NgModule({\n    declarations: [\n        RadioButtonListComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AWRadioButtonModule\n    ],\n    entryComponents: [\n        RadioButtonListComponent\n    ],\n    exports: [\n        RadioButtonListComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWRadioButtonListModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AWCoreComponentModule} from '../../core/core.module';\nimport {GenericChooserComponent} from './generic-chooser.component';\nimport {AWCheckBoxListModule} from '../check-box-list/check-box-list.module';\nimport {AWChooserModule} from '../chooser/chooser.module';\nimport {AWRadioButtonListModule} from '../radio-button-list/radio-button-list.module';\nimport {AWDropdownModule} from '../dropdown/dropdown.module';\n\n\n@NgModule({\n    declarations: [\n        GenericChooserComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AWCoreComponentModule,\n        AWDropdownModule,\n        AWCheckBoxListModule,\n        AWChooserModule,\n        AWRadioButtonListModule\n    ],\n    entryComponents: [\n        GenericChooserComponent\n    ],\n    exports: [\n        ReactiveFormsModule,\n        FormsModule,\n        GenericChooserComponent\n    ]\n})\nexport class AWGenericChooserModule\n{\n}\n\n\n","import {Entity, isBlank, isEntity, isPresent, ListWrapper} from '@aribaui/core';\nimport {Injectable} from '@angular/core';\nimport {OutlineForComponent, OutlineNode} from './outline-for.component';\n\n/**\n * OutlineState is the key gluing part for the OutlineFor and OutlineController components. It\n * holds all important information for the current outline tree and manages expansion states in form\n * of so called expansionPath and expansionStates\n *\n * We need to have a way how to work with generic data structure in order not to hold UI specific\n * information on the domain object model just like we had it before, where we had an interface\n * called OutlineNode, with fields (expanded, selected, etc.. )\n *\n *\n * `expansionPath`: Holds an array of currently selected and expanded nodes. This is filled by\n * OutlineController.\n *\n *\n * If we are dealing with Entity or anything that has identity then we have easier situation as we\n * can ask for ID and it is more efficient for serialization\n */\n@Injectable()\nexport class OutlineState\n{\n    /**\n     * Array of currently selected and expanded nodes\n     *\n     */\n    private _expansionPath: any[];\n\n    /**\n     * When `allowSelection` is enabled on OutlineControl it saved currently selected item to be\n     * able later on apply some styling and broadcast this selection outside of the component.\n     */\n    selectedItem: any;\n\n    /**\n     *\n     * Maps object reference to boolean values, where TRUE means EXPANDED, FALSE collapsed\n     *\n     */\n    expansionStates: Map<any, boolean>;\n\n\n    /**\n     *\n     * When outline is rendered for first time or re-rendered and we set default value for the\n     * expansionStates. This way we can pretty easily execute CollapseAll, ExpandAll\n     *\n     */\n    isExpandedAll: boolean = false; // collapsed\n\n    /**\n     *\n     * Holds current level during tree node rendering so we can apply correct indentation\n     *\n     */\n    currentLevel: number = -1;\n\n    /**\n     * Used during a toggle action to record current selection path.\n     *\n     */\n    currentPath: any[];\n\n\n    /**\n     * Globally shared property\n     */\n    outlineFor: OutlineForComponent;\n\n\n    constructor ()\n    {\n        this.expansionStates = new Map();\n    }\n\n    /**\n     * For the collapseAll and expandAll we are using simple mechanism where we clean up all\n     * selection and then set the global expand state, this whey isExpand method returns the same\n     * state for all items\n     */\n    collapseAll (): void\n    {\n        if (isPresent(this.outlineFor) &&\n            this.outlineFor.isTreeModelFormat()) {\n\n            // for this case we collapse all but root nodes\n            if (this.outlineFor.pushRootSectionOnNewLine) {\n\n                this.outlineFor.list.forEach((item: OutlineNode) =>\n                {\n                    this.updateNodes(item.children || [], false);\n                });\n            } else {\n                this.updateNodes(this.outlineFor.list || [], false);\n            }\n\n        } else {\n            this.expansionStates.clear();\n        }\n        this.isExpandedAll = false;\n    }\n\n    expandAll (): void\n    {\n        if (isPresent(this.outlineFor) &&\n            this.outlineFor.isTreeModelFormat()) {\n            this.updateNodes(this.outlineFor.list, true);\n\n        } else {\n            this.expansionStates.clear();\n        }\n        this.isExpandedAll = true;\n    }\n\n\n    get expansionPath (): any[]\n    {\n        if (isBlank(this._expansionPath)) {\n            this._expansionPath = [];\n        }\n        return this._expansionPath;\n    }\n\n\n    set expansionPath (value: any[])\n    {\n        this._expansionPath = value;\n\n        if (isBlank(this._expansionPath)) {\n            return;\n        }\n        this._expansionPath.forEach((item: any) =>\n        {\n            this.setExpansionState(item, true);\n        });\n    }\n\n\n    toggleExpansion (currentPath: any[], children?: any[]): void\n    {\n\n        if (isBlank(currentPath)) {\n            return;\n        }\n        let item = ListWrapper.last(currentPath);\n        let itemChildren = children || [];\n        let newState = !this.isExpanded(item);\n        this.setExpansionState(item, newState);\n\n        if (!newState) {\n            ListWrapper.removeLast(currentPath);\n            this.updateNodes(itemChildren, newState);\n        }\n\n        this.setExpansionPath(currentPath);\n    }\n\n    updateNodes (nodes: any[], newState: boolean): void\n    {\n        nodes.forEach((child: any) =>\n        {\n            let items = this.outlineFor.childrenForItem(child);\n            if (isPresent(items) && items.length > 0) {\n                this.updateNodes(items, newState);\n            }\n            this.setExpansionState(child, newState);\n        });\n    }\n\n    setExpansionState (item: any, isExpanded: boolean): void\n    {\n        // Even for tree mode format save the state so we can use it later on in case object\n        // references gets meesed up\n        if (this.outlineFor &&\n            this.outlineFor.isTreeModelFormat()) {\n            (<OutlineNode>item).isExpanded = isExpanded;\n        } else {\n            let key = this.itemToKey(item);\n            if (isExpanded === this.isExpandedAll) {\n                this.expansionStates.delete(key);\n            } else {\n                this.expansionStates.set(key, (isExpanded) ? true : false);\n            }\n        }\n    }\n\n    /**\n     * To improve state persisting lets check if we are dealing with an Object that has Identity\n     * so we can extract an ID otherwise use object to compare by reference\n     *\n     *\n     */\n    private itemToKey (item: any): string\n    {\n        return isEntity(item) ? (<Entity>item).identity() : item;\n    }\n\n\n    setExpansionPath (items: any[]): void\n    {\n        this.expansionPath = items;\n\n        items.forEach((node: any) =>\n        {\n            this.setExpansionState(node, true);\n        });\n    }\n\n    isExpanded (item: any): boolean\n    {\n        if (isPresent(this.outlineFor) &&\n            this.outlineFor.isTreeModelFormat()) {\n            return (<OutlineNode>item).isExpanded;\n        } else {\n            let key = this.itemToKey(item);\n            if (!this.expansionStates.has(key)) {\n                return this.isExpandedAll;\n            }\n            return this.expansionStates.get(key);\n        }\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    ContentChild,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {animate, AnimationBuilder, state, style, transition, trigger} from '@angular/animations';\nimport {assert, Environment, Identity, isBlank, isPresent, ListWrapper} from '@aribaui/core';\nimport {BaseComponent} from '../../core/base.component';\nimport {OutlineState} from './outline-state';\n\n\n/**\n * This interface represent concrete tree structure for the outline tree mode\n */\nexport interface OutlineNode extends Identity\n{\n    /**\n     * Reference to parent node.\n     */\n    parent: OutlineNode;\n\n    /**\n     * Node's children. Even its a field it can be implemented lazily using getter where a target\n     * object does not implement this as a public field but a getter with control over the\n     * retrieved list\n     */\n    children: OutlineNode[];\n\n    /**\n     * Different states for outline Node\n     *\n     * isExpanded: boolean;= moving out as this is managed by expansionstate.\n     */\n    isExpanded: boolean;\n    isSelected: boolean;\n    isMatch?: boolean;\n    readonly?: boolean;\n    type?: string;\n    draggable?: boolean;\n    droppable?: boolean;\n    visible?: boolean;\n\n}\n\n\n/**\n *\n * Checks type for OutlineNode\n *\n */\nexport function isOutlineNode(node: any): node is OutlineNode\n{\n    return isPresent(node) && isPresent((<OutlineNode>node))\n        && isPresent((<OutlineNode>node).parent)\n        && isPresent((<OutlineNode>node).children);\n}\n\n\n/**\n * Currently outline supports only two modes free, where application is responsible to retrieve\n * children for each node and tree with above OutlineNode structure\n */\nexport type ModelFormat = 'free' | 'tree';\n\n\n/**\n *\n * OutlineForComponent is like ngFor, but for hierarchical (outline/tree) structures -- i.e. in\n * those cases where an item may have children.\n *\n *\n * It uses outline `<aw-outline-control>` to provide expanding functionality, indentation\n * and other things.\n *\n *\n * This component has minimal styling to make sure it can be changed easily.\n *\n * ### Example rendering tree section, where based on the type we format the out plus\n * for the main root section we always render little popup menu.\n *\n * ```\n *\n *   <aw-outline-for [list]=\"list\" [hasChildren]=\"hasChildren\">\n *\n *       <ng-template #outline let-item>\n *\n *           <div class=\"my-section\">\n *               <div class=\"outline\">\n *                   <aw-outline-control>\n *                       <ng-container [ngSwitch]=\"item.type\">\n *                           <ng-template [ngSwitchCase]=\"'text'\">\n *                               <div class=\"as-paragraf\">\n *                                   {{item?.content}}\n *                               </div>\n *                           </ng-template>\n *\n *\n *                           <ng-template ngSwitchDefault>\n *                               {{item?.content}}\n *                           </ng-template>\n *\n *\n *                       </ng-container>\n *\n *\n *                   </aw-outline-control>\n *               </div>\n *\n *               <div class=\"filters\" *ngIf=\"item.type === 'section'\" >\n *\n *                   <aw-hover-card [linkTitle]=\"'Filter Items'\">\n *                       <aw-list [list]=\"filterItems\" [borderless]=\"true\"></aw-list>\n *                   </aw-hover-card>\n *\n *               </div>\n *           </div>\n *     </ng-template>`\n *   </aw-outline-for>\n *\n * ```\n *\n *\n * We can use it also in embedded mode where we use the `awOutlineFor` directive\n *\n * ## Example\n *\n *\n * ````\n *  <table  class=\"tree-table\" >\n *      <thead>\n *          <tr>\n *              <th>Name</th>\n *              <th>Type</th>\n *          </tr>\n *      </thead>\n *      <tbody #ooo2 awOutlineFor [list]=\"list\"\n *             [hasChildren]=\"hasChildren\"\n *             class=\"outline-table\"\n *      >\n *          <ng-template #outline let-item>\n *              <tr>\n *                  <td class=\"item-name outline-animation\">\n *                      <div><aw-outline-control>\n *                          {{item?.content}}\n *                      </aw-outline-control></div>\n *                  </td>\n *                  <td class=\"item-type outline-animation\">\n *                      <div>{{item.type}}</div>\n *                  </td>\n *              </tr>\n *          </ng-template>\n *      </tbody>\n *  </table>\n *\n * ```\n *\n * I was thinking maybe for first time we don't need the same animation like expanding and\n * collapsing. Maybe we need fade-in. In such case I would probably apply @section anim only\n * on items where level > 0 (in the template I keep levels) and if level == 0 then I would\n * execute the same rendering just without [@section]\n *\n *\n * Todo: Think about how to do animation for the table case. Must also write unitest - due to\n * AribaLive aggressive schedule we are skipping them for now\n *\n */\n@Component({\n    selector: 'aw-outline-for, [awOutlineFor]',\n    template: `<!--\n    Starts with the list, where nestingLevel is -1.\n    call template outlineItems to iterate and render each item\n-->\n<ng-container [ngIf]=\"list\" *ngTemplateOutlet=\"outlineItems;\n            context:{ $implicit: list, nestingLevel: 0, parentItem: null, expanded: true}\">\n</ng-container>\n\n<!--\n    Main Entry point for the recursion. this is called by the block above as well as byt the inner\n    piece that calls this template recursively again when an item has children\n-->\n<ng-template #outlineItems let-children let-nestingLevel=\"nestingLevel\"\n             let-parent=\"parentItem\" let-expanded=\"expanded\">\n\n    <ng-template ngFor let-item [ngForOf]=\"children\" let-rowIndex=\"index\">\n\n        <ng-container *ngTemplateOutlet=\"outlineItem;\n            context:{ $implicit: item, nestingLevel: nestingLevel, parentItem: parent,\n            expanded: expanded, rowIndex:rowIndex}\">\n        </ng-container>\n\n        <!--\n\n            Recursion piece:\n\n            For non embedded case when even if its not expanded we need to iterate children\n            as we want to apply animation that should go with ngIf which inside the outineItem\n            template\n\n            Dont recurse/ render items that are not visible.\n        -->\n\n        <ng-template [ngIf]=\"hasChildren(item) && (isExpanded(item, nestingLevel) || !embedded) && isVisible(item)\">\n            <ng-container *ngTemplateOutlet=\"outlineItems;\n                        context:{ $implicit: childrenForItem(item),\n                                nestingLevel: nestingLevel+1,\n                                expanded: isExpanded(item, nestingLevel),\n                                parentItem:item }\">\n            </ng-container>\n        </ng-template>\n    </ng-template>\n</ng-template>\n\n\n<!--\n    Renders actual outline node and applies animation while expanding and collapsing\n\n    [@section]=\"expanded || isExpanded(item) ? 'visible' : 'hidden'\"\n-->\n<ng-template #outlineItem let-item let-nestingLevel=\"nestingLevel\" let-parent=\"parentItem\"\n             let-rowIndex=\"rowIndex\"\n             let-expanded=\"expanded\">\n\n    <div class=\"w-outline-item\"\n         *ngIf=\"!embedded && expanded\"\n         [style.padding-left.px]=\"indentation(nestingLevel)\"\n         initNesting [setLevel]=\"nestingLevel\" [setParentItem]=\"parent\"\n         [setCurrrentItem]=\"item\"\n         [@section]\n         (@section.done)=\"onAnimationDone($event)\">\n\n        <ng-container *ngTemplateOutlet=\"controlTemplate;\n                        context:{ $implicit: item, nestingLevel: nestingLevel, rowIndex:rowIndex }\">\n        </ng-container>\n    </div>\n\n    <!--\n        When outline control is used as embedded meaning its inside e..g datatable we\n        cannot have any tags around it.\n\n        Todo: Refactor this in the way so we can do animation when table lines are\n        expanded. Since its embedded we can not have any wrapping element around, the template\n        is fully responsible\n    -->\n    <ng-template [ngIf]=\"embedded && expanded\"\n                 initNesting [setLevel]=\"nestingLevel\" [setParentItem]=\"parent\"\n                 [setCurrrentItem]=\"item\"\n    >\n        <ng-container #renderedItem *ngTemplateOutlet=\"controlTemplate;\n                        context:{ $implicit: item, nestingLevel: nestingLevel, rowIndex:rowIndex  }\">\n        </ng-container>\n    </ng-template>\n\n</ng-template>\n\n\n`,\n    styles: [`.is-outline-animation>div,::ng-deep .w-outline-item{overflow:hidden}`],\n\n    animations: [\n        trigger('section', [\n            state('*', style({\n                'overflow-y': 'hidden',\n                'height': '*',\n                'opacity': '1'\n\n            })),\n            state('void', style({\n                'height': '0',\n                'opacity': '0',\n                'overflow-y': 'hidden'\n\n            })),\n            transition('* => void', animate('200ms ease-out')),\n            transition('void => *', animate('200ms ease-in'))\n        ]),\n    ]\n})\nexport class OutlineForComponent extends BaseComponent\n{\n\n    /**\n     * List of items that needs to be rendered. It does not have to in hierarchical order or we\n     * leave it up to the application to decide about the structure.\n     */\n    @Input()\n    list?: any[];\n\n\n    /**\n     * Tells the component not to render expansion control, in such case we expandAll as a\n     * default behavior\n     *\n     */\n    @Input()\n    showExpansionControl: boolean = true;\n\n    /**\n     * Custom method provided by application to retrieve list of children for current item. If\n     * children is undefined then, default 'children' field is used <currentItem>.children\n     */\n    @Input()\n    children: (value: any) => any[];\n\n    /**\n     *\n     * Option to conditionally render only items that are satisfying filter condition\n     *\n     */\n    @Input()\n    filterOut: (value: any) => boolean;\n\n\n    /**\n     * Opens all tree nodes.\n     *\n     */\n    @Input()\n    expandAll: boolean = false;\n\n\n    /**\n     *  Manages the state for the Outline component. Later on we can provide easier we how to\n     *  initialize and set selectionPaths and selectionStates from the application\n     *\n     */\n    @Input()\n    state: OutlineState;\n\n    /**\n     *\n     * Set indentation size to be used for each level\n     *\n     */\n    @Input()\n    indentationPerLevel: number = 25;\n\n\n    /**\n     * In case template is outside of the outlineFor\n     */\n    @Input()\n    externalTemplate: TemplateRef<any>;\n\n\n    /**\n     * Reference to current object using this component\n     */\n    @Input()\n    context: any;\n\n\n    @Input()\n    pushRootSectionOnNewLine: boolean = false;\n\n    /**\n     *\n     * Identifies current model mode.\n     *\n     * We recognize two modes:\n     *\n     * Free - Application needs to implement a children method to retrieve a list of children for\n     * each node and format is pretty much upt to the application\n     *\n     * Tree - this is more restrictive where we have concrete data structure\n     * interface that needs to be folled\n     *\n     * todo: instead of passing format binding try to look into the list to see what type so\n     * we dont make it mandatory\n     *\n     */\n    @Input()\n    format: ModelFormat = 'free';\n\n    /**\n     *\n     * Used when in selection mode to push current selected Item to the application\n     *\n     */\n    @Output()\n    onItemSelected: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     *\n     * This event is triggered by OutlineControl when node is expanded or collapsed\n     *\n     */\n    @Output()\n    onExpandChange: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * A template to use on application level to render individual items\n     */\n    @ContentChild('outline')\n    controlTemplate: TemplateRef<any>;\n\n\n    @ViewChild('renderedItem')\n    outlineItem: ElementRef;\n\n\n    /**\n     * Internals\n     *\n     * currentItem and parentItem are used to capture current processed item of ngFor. This is\n     * set by directive `InitNestingDirective`\n     *\n     * animationInProgress: used by animation engine to make sure we dont do any actions while\n     * animation is in the progress\n     *\n     * embedded: Indicates that we are using directive so it will not have default component\n     * wrapper\n     *\n     */\n    currentItem: any;\n    parentItem: any;\n    animationInProgress: boolean;\n    embedded: boolean = false;\n\n    /**\n     * Flag that tells us that component is fully rendered\n     *\n     */\n    viewInitialized: boolean = false;\n\n\n    constructor(public env: Environment,\n                private _viewContainer: ViewContainerRef,\n                private builder: AnimationBuilder,\n                private element: ElementRef)\n    {\n        super(env);\n\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        if (isBlank(this.state)) {\n            this.state = new OutlineState();\n        }\n        if (isBlank(this.state.outlineFor)) {\n            this.state.outlineFor = this;\n        }\n\n        if (this.expandAll) {\n            this.showExpansionControl = false;\n        }\n\n        this.state.isExpandedAll = this.expandAll;\n\n        // in case we want to render content of tree outside of outlineFor\n        if (isPresent(this.externalTemplate)) {\n            this.controlTemplate = this.externalTemplate;\n        }\n\n        this.embedded = this.element.nativeElement.hasAttribute('awoutlinefor');\n\n        if (isBlank(this.context)) {\n            this.context = this;\n        }\n\n    }\n\n\n    ngDoCheck(): void\n    {\n        super.ngDoCheck();\n    }\n\n    isTreeModelFormat(): boolean\n    {\n        return this.format === 'tree';\n    }\n\n    /**\n     * Used by template and OutlineControl to identify which item is expanded and collapsed\n     *\n     */\n    isExpanded(item: any, currentLevel: number = -1): boolean\n    {\n        if (currentLevel === 0 && this.pushRootSectionOnNewLine) {\n            // always override/reset for root nodes\n            if (this.isTreeModelFormat()) {\n                (<OutlineNode>item).isExpanded = true;\n            }\n            return true;\n        }\n        return this.state.isExpanded(item);\n    }\n\n    /**\n     *\n     * Since we have currently two ways how to pass children items we need have this method to\n     * unify the way how we access it. If we pass `children` binding we use this instead, otherwise\n     * we expect current object to have `children` field\n     *\n     */\n    childrenForItem(item: any): any[]\n    {\n        if (this.isTreeModelFormat()) {\n            return (<OutlineNode>item).children || [];\n        } else {\n            return this.hasChildren(item) ? this.doGetChildren(item) : [];\n        }\n    }\n\n\n    /**\n     *\n     * Check if the current item has a children and needs to be rendered\n     *\n     */\n    hasChildren(item: any): boolean\n    {\n        if (this.isTreeModelFormat()) {\n            let children = (<OutlineNode>item).children;\n            return isPresent(children) && children.length > 0;\n\n        } else if (isBlank(this.children) && isBlank(item.children)) {\n            assert(false, 'Missing [children] method binding');\n        }\n\n        return this.doGetChildren(item).length > 0;\n\n    }\n\n    doGetChildren(item: any): any[]\n    {\n        return this.children.apply(this.context, [item]);\n    }\n\n\n    /**\n     *  Uses the `OutlineState` to toggle state of current selectionPath. The `selectionPath` is\n     *  put together inside `OutlineControl` where we iterate all the way to the root and add\n     *  each item to the `currentPath` array. This way we collect list of item representing current\n     *  current expansionPath.\n     *\n     *\n     */\n    toggleExpansion(): void\n    {\n        if (this.animationInProgress) {\n            // backup procedure in case onAnimationDone fails\n            setTimeout(() =>\n            {\n                if (this.animationInProgress) { // change only if its fails\n                    this.animationInProgress = false;\n                }\n            }, 200);\n            return;\n        }\n\n        if (!this.embedded) {\n            this.animationInProgress = true;\n        }\n\n        let currentItem = ListWrapper.last(this.state.currentPath);\n        this.state.toggleExpansion(this.state.currentPath, this.childrenForItem(currentItem));\n\n        if (this.embedded) {\n            // this.animateEmbeddedItem();\n        }\n    }\n\n\n    /**\n     * Angular anim. callback that sets back the flag to make sure we don't trigger animations\n     * when one is in progress.\n     *\n     */\n    onAnimationDone(event: Event)\n    {\n        this.animationInProgress = false;\n    }\n\n    /**\n     * Calculated indentation used to shift the nested section to the right or later on to the\n     * left when RTL is supported\n     *\n     *\n     */\n    indentation(currentLevel: number): number\n    {\n        if (this.pushRootSectionOnNewLine && currentLevel > 0) {\n            currentLevel -= 1;\n        }\n\n        return (currentLevel === 0 && this.pushRootSectionOnNewLine)\n            ? 0 : (this.indentationPerLevel * currentLevel);\n    }\n\n    /**\n     * Not all rows are visible by default, there can be a case where you dont want to render items\n     * using outline. e.g. Datatable with detail row.\n     */\n    isVisible(item: any): boolean\n    {\n        if (isPresent(this.filterOut)) {\n            return !this.filterOut(item);\n        }\n        return true;\n    }\n}\n\n/**\n *\n * Since we can not directly set `*ngTemplateOutlet` context variables to the typescript class we\n * use this directive to do the Job\n *\n */\n@Directive({\n    selector: '[initNesting]'\n})\nexport class InitNestingDirective implements OnInit\n{\n\n    @Input()\n    setLevel: number;\n\n\n    @Input()\n    setCurrrentItem: any;\n\n\n    @Input()\n    setParentItem: any;\n\n\n    constructor(private outline: OutlineForComponent)\n    {\n    }\n\n\n    ngOnInit(): void\n    {\n        if (isPresent(this.setLevel)) {\n            this.outline.state.currentLevel = this.setLevel;\n        }\n\n\n        if (isPresent(this.setCurrrentItem)) {\n            this.outline.currentItem = this.setCurrrentItem;\n\n            if (this.outline.isTreeModelFormat()) {\n                this.outline.currentItem['$$parentItem']\n                    = (<OutlineNode>this.setCurrrentItem).parent;\n            }\n        }\n\n        if (!this.outline.isTreeModelFormat() && isPresent(this.setParentItem)) {\n            this.outline.currentItem['$$parentItem'] = this.setParentItem;\n        }\n    }\n\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf\n} from '@angular/core';\nimport {assert, Environment, isBlank, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../../core/base.component';\nimport {OutlineForComponent} from '../outline-for.component';\nimport {OutlineState} from '../outline-state';\n\n\n/**\n * OutlineControlComponent renders the indentation, arrow, and text for a node in an outline.\n * It should be used either in the body of an OutlineFor component, or inside datatable\n *\n *\n * ##Usage inside body:\n *\n *  Here you can see that we need to wrap out content inside ng-template which will push us\n *  give us current item item and then we can place OutlineControlComponent to control\n *  the tree.\n *\n * ```\n *  <aw-outline-for2 #ooo [list]=\"list\" [hasChildren]=\"hasChildren\">\n *\n *      <ng-template #outline let-item>\n *          <div class=\"my-section\">\n *              <div class=\"outline\">\n *                  <aw-outline-control>\n *                      {{item?.content}}\n *                  </aw-outline-control>\n *              </div>*\n *          </div>\n *      </ng-template>\n *  </aw-outline-for2>\n *\n *\n * ```\n *\n * We can\n *\n *\n */\n@Component({\n    selector: 'aw-outline-control',\n    template: `<!--\n    Control is just the two flex box items for displaying expand/collapse icon and content\n\n    Since we animate only standalone/non-embedded case now then we need to also animate the icon\n    so we use only icon-slim-arrow-right and do tranformation on top of this to make it rotate.\n\n    If embedded case we use both icons icon-slim-arrow-right / icon-slim-arrow-down\n-->\n<div class=\"w-outline-control\"\n     [ngClass]=\"{'outline-u-unselectable-text': outlineFor.pushRootSectionOnNewLine && !item.$$parentItem}\">\n    <div class=\"outline-icon sap-icon\"\n         *ngIf=\"!outlineFor.pushRootSectionOnNewLine || !isRootItem\"\n         (click)=\"toggleExpansion($event)\"\n         [style.margin-left.px]=\"indentation\"\n         [ngClass]=\"calculateStyleClass()\">\n    </div>\n\n    <ng-container *ngIf=\"allowSelection; then withSelection else withoutSelection\">\n    </ng-container>\n</div>\n\n<!--\n We support two case for the content\n\n Selection: When you click on the content it will add extra class so you can style currently\n selected item as well as broadcast event outside so developer can hook in some custom logic\n\n If we dont support selection: Then clicking on the content is just like clicking on expandable\n icon, it toggles the state\n-->\n\n<ng-template #withSelection>\n     <span class=\"outline-content outline-content-selected\" *ngIf=\"!allowEdit && isSelected()\">\n        <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n    </span>\n    <span class=\"outline-content\" *ngIf=\"!allowEdit && !isSelected()\" (click)=\"select()\">\n        <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n    </span>\n\n</ng-template>\n\n\n<ng-template #withoutSelection>\n    <span *ngIf=\"!allowEdit\" class=\"outline-content\" (click)=\"toggleExpansion($event)\">\n        <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n    </span>\n    <span *ngIf=\"allowEdit\" class=\"outline-content\">\n        <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n    </span>\n</ng-template>\n\n\n<ng-template #ngContent>\n    <ng-content></ng-content>\n</ng-template>\n\n`,\n    styles: [`.w-outline-control{overflow:hidden;display:flex;flex-wrap:nowrap;cursor:pointer}.w-outline-control .outline-icon{flex:0 0 15px;color:#ababab;font-size:14px;font-weight:700;min-width:11px;align-self:center;transition:-webkit-transform 50ms ease-in;transition:transform 50ms ease-in;transition:transform 50ms ease-in,-webkit-transform 50ms ease-in;-webkit-transform-origin:25% 65%;transform-origin:25% 65%;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.w-outline-control .outline-icon.outline-icon-expanded{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.w-outline-control .outline-content{flex:1 1 auto;flex-wrap:wrap;padding:0 4px}.w-outline-control .outline-content.outline-content-selected{cursor:default;font-weight:700}.outline-u-unselectable-text{-webkit-user-select:none;-moz-user-select:none;-o-user-select:none;-ms-user-select:none;user-select:none;cursor:auto}`],\n})\nexport class OutlineControlComponent extends BaseComponent\n{\n\n    /**\n     * List of items that needs to be rendered.\n     */\n    @Input()\n    title: string;\n\n\n    /**\n     *\n     *  If TRUE it changes the behavior of the outline node text which click is triggered\n     *  it selects the item and broadcast the `onItemSelected` event\n     *\n     */\n    @Input()\n    allowSelection: boolean = false;\n\n    @Input()\n    allowEdit: boolean = false;\n\n    /**\n     *\n     * Triggers action when outline item is expanded\n     *\n     */\n    @Output()\n    action: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Current item used for this `OutlineControl`\n     *\n     */\n    item: any;\n\n    /**\n     * Calculated indentation used to shift the nested section to the left. This is used for\n     * embedded mode e.g. tree table where we cannot indent parent\n     */\n    indentation: number;\n\n\n    isRootItem: boolean = false;\n\n    constructor(public env: Environment,\n                @Optional() @Inject(forwardRef(() => OutlineState))\n                private outlineState: OutlineState,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => OutlineControlComponent))\n                private parentControl: OutlineControlComponent,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => OutlineForComponent))\n                public outlineFor: OutlineForComponent)\n    {\n        super(env);\n\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        this.prepareControl();\n    }\n\n\n    /**\n     *\n     * We dont show expansion icons when there no children\n     *\n     */\n    hasExpansionControl(): boolean\n    {\n        return this.outlineFor.hasChildren(this.item) && this.outlineFor.showExpansionControl;\n    }\n\n\n    isSelected(): boolean\n    {\n        return this.outlineFor.state.selectedItem === this.item;\n    }\n\n    calculateStyleClass(): string\n    {\n        if (!this.hasExpansionControl() ||\n            (this.outlineFor.pushRootSectionOnNewLine && isBlank(this.item.$$parentItem)))\n        {\n            return '';\n        }\n\n        if (this.outlineFor.embedded) {\n            return this.outlineFor.isExpanded(this.item) ? 'icon-slim-arrow-down'\n                : 'icon-slim-arrow-right';\n        } else {\n            return this.outlineFor.isExpanded(this.item)\n                ? 'icon-slim-arrow-right outline-icon-expanded' : 'icon-slim-arrow-right';\n        }\n    }\n\n    /**\n     * Collapses and expands current node\n     *\n     */\n    toggleExpansion(event: any): void\n    {\n        this.outlineFor.state.currentPath = [];\n        let currentPath = this.item;\n\n        while (isPresent(currentPath)) {\n            this.outlineFor.state.currentPath.unshift(currentPath);\n            currentPath = currentPath.$$parentItem;\n        }\n\n        this.outlineFor.toggleExpansion();\n        let payload = {\n            item: this.item,\n            expanded: this.outlineFor.state.isExpanded(this.item)\n        };\n        this.action.emit(payload);\n        this.outlineFor.onExpandChange.emit(payload);\n\n        event.stopPropagation();\n    }\n\n    select(): void\n    {\n        this.outlineFor.state.selectedItem = this.item;\n        this.outlineFor.onItemSelected.emit(this.item);\n    }\n\n    private prepareControl(): void\n    {\n        if (isBlank(this.outlineFor) && isPresent(this.outlineState)) {\n            this.outlineFor = this.outlineState.outlineFor;\n        }\n\n        assert(isPresent(this.outlineFor), 'Missing outlineFor component');\n        if (this.outlineFor.embedded) {\n            let level = this.outlineFor.state.currentLevel;\n            if (this.outlineFor.pushRootSectionOnNewLine && level > 0) {\n                level -= 1;\n            }\n\n            this.indentation = (this.outlineFor.indentationPerLevel * level);\n        }\n        this.item = this.outlineFor.currentItem;\n        this.isRootItem = isBlank(this.item.$$parentItem);\n    }\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {InitNestingDirective, OutlineForComponent} from './outline-for.component';\nimport {AWCoreComponentModule} from '../../core/core.module';\nimport {OutlineControlComponent} from './outline-control/outline-control.component';\n\n@NgModule({\n    declarations: [\n        OutlineForComponent,\n        OutlineControlComponent,\n        InitNestingDirective\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AWCoreComponentModule\n    ],\n    exports: [\n        OutlineForComponent,\n        OutlineControlComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWOutlineForModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, forwardRef, Inject, Input, Optional, SkipSelf} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Environment} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\n\n/**\n * Renders html text area component\n\n *\n * ### Example\n *\n * ```typescript\n *\n *      @Component({\n *          selector: 'myNote' ,\n *          template: '<aw-text-area [value]=\"inputValue\" [autoResize]=\"autoResize\" >\n *              </aw-text-area>'\n *      })\n *      export class MyNoteComponent\n *      {\n *          inputValue: string = 'Some really long text';\n *          autoResize: false;\n *      }\n *\n * ```\n *  Note: if you are using this outside of FormTable please provide your own FormGroup\n */\n\nexport const TEXTAREA_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TextAreaComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-text-area',\n    template: `<div *ngIf=\"editable\" [formGroup]=\"formGroup\">\n\n\t<textarea\n        pInputTextarea\n        [attr.name]=\"name\"\n        class=\"w-text-area\"\n        [class.u-validation-error]=\"!(formControl.valid || (formControl.pristine))\"\n        [class.disabled]=\"disabled\"\n        formControlName=\"{{name}}\"\n        [rows]=\"rows\"\n        [cols]=\"columns\"\n        [autoResize]=\"autoResize\"\n        [attr.placeholder]=\"placeHolder\"\n\n    ></textarea>\n\n</div>\n\n\n<ng-template [ngIf]=\"!editable\">\n    <aw-string [value]=\"value\"></aw-string>\n</ng-template>\n`,\n    styles: [``],\n\n    providers: [\n        TEXTAREA_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => TextAreaComponent)}\n    ]\n})\nexport class TextAreaComponent extends BaseFormComponent\n{\n    /**\n     *\n     * A value used to store and read user input\n     *\n     */\n    @Input()\n    value: any = '';\n\n\n    /**\n     * Spefifies visible number of lines\n     */\n    @Input()\n    rows: number = 2;\n\n\n    /**\n     * Specifies visible width\n     */\n    @Input()\n    columns: number = 20;\n\n\n    /**\n     * when this option is TRUE and user starts typing it will maximize textarea's width and height\n     */\n    @Input()\n    autoResize: boolean = true;\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n    ngOnInit()\n    {\n\n        super.ngOnInit();\n        super.registerFormControl(this.value);\n\n        this.formControl.valueChanges.pipe(\n            distinctUntilChanged()\n        ).subscribe(val =>\n        {\n            this.value = val;\n            this.onModelChanged(this.value);\n        });\n    }\n\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any)\n    {\n        if (value !== this.value) {\n            this.value = value;\n            this.formControl.setValue(value, {onlySelf: true});\n        }\n\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {InputTextareaModule} from 'primeng/primeng';\nimport {TextAreaComponent} from './text-area.component';\nimport {AWStringFieldModule} from '../string/string.module';\n\n@NgModule({\n    declarations: [\n        TextAreaComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        InputTextareaModule,\n        AWStringFieldModule\n    ],\n\n    entryComponents: [\n        TextAreaComponent\n    ],\n    exports: [\n        TextAreaComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWTextAreaModule\n{\n}\n\n\n","import {Component, ElementRef, Input, TemplateRef} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../core/base.component';\n\n/**\n *\n * Page-Notification component that implements a notification system for the user regarding\n * the current object he's working on. Typical notification are:\n *      Success - saved.\n *      Warning - Sourcing request requires 3 suppliers.\n *      Error   - cannot connect to server, check internet connection.\n *\n *\n *\n * Usage 1:  As part of page wrapper.\n *\n *  @Component({\n *    selector: 'MyPage' ,\n *    template: `\n *       <aw-object-page-wrapper\n *                        [title]=\"MyPage\"\n *                        [objectType]=\"MyType\"\n *                        [notification]=\"pageNotification\">\n *             page content\n *          `\n *       </aw-object-pager-wrapper>\n *    })\n *    export class MyPage\n *    {\n *\n *        pageNotification: PageNotification = new PageNotification(\"warn\",\n *                              \"Policy Warning\", \"This request requires 3 bids.\");\n *\n *        constructor ()\n *        {\n *        }\n *    }\n *\n * Usage 2: directly into the page.\n *\n *  @Component({\n *    selector: 'registration' ,\n *    template: `\n *      <aw-header></aw-header>\n *        Page Header\n *\n *        <ng-template [ngIf]=\"hasNotifications()\">\n *          <div class=\"ui-g-12 u-nopadding\">\n *            <aw-page-notification [notification]=\"notification\"></aw-page-notification>\n *          </div>\n *        </ng-template>\n *\n *      <aw-footer></aw-footer>\n *    `\n *    })\n *    export class MyPage\n *    {\n *\n *        notification: PageNotification = new PageNotification(\"warning\",\n *                              \"Policy Warning\", \"This request requires 3 bids.\");\n *\n *        constructor ()\n *        {\n *        }\n *    }\n *\n */\n@Component({\n    selector: 'aw-page-notification',\n    template: `<div class=\"page-notification\">\n    <div [class]=\"notificationClass()\">\n        <i [class]=\"notificationIcon()\"></i>\n        <span class=\"content\">\n              <span class=\"title\">{{notification.title}}</span>\n              <span class=\"description\">\n                    <ng-template *ngIf=\"notification.hasTemplate(); else description\"\n                                 [ngTemplateOutlet]=\"notification.contentTmpl\">\n                    </ng-template>\n                    <ng-template #description>{{notification.description}}</ng-template>\n              </span>\n      </span>\n    </div>\n</div>\n`,\n    styles: [`.page-notification{margin:0 0 5px}.notification-error,.notification-info,.notification-success,.notification-warning{padding:9px 8px}.notification-error i,.notification-info i,.notification-success i,.notification-warning i{font-size:24px;margin:10px}.notification-success i{color:#58b957}.notification-info i{color:#199de0}.notification-warning i{color:#f90}.notification-error i{color:#c00}.notification-success{background-color:#f1f9f1;border:1px solid rgba(88,185,87,.5)}.notification-info{background-color:#edf8fd;border:1px solid rgba(25,157,224,.5)}.notification-warning{background-color:#fff8dd;border:1px solid rgba(255,153,0,.5)}.notification-error{background-color:#ffebeb;border:1px solid rgba(204,0,0,.5)}.icon-error:before{content:\"\\\\EA9D\"}.icon-warning:before{content:\"\\\\EA9C\"}.content{vertical-align:super}.title{font-weight:700;margin-right:10px}`]\n})\nexport class PageNotificationComponent extends BaseComponent\n{\n\n    /**\n     * Any info, Error, or Warn for this page.\n     */\n    @Input()\n    notification: PageNotification;\n\n    constructor(protected element: ElementRef, public env: Environment)\n    {\n        super(env);\n    }\n\n    notificationClass(): string\n    {\n        return `notification-${this.notification.type}`;\n    }\n\n    notificationIcon(): string\n    {\n        return `ariba-icon icon-${this.notification.type}`;\n    }\n\n}\n\n/**\n * Page Notification are messages for this page only. It displays in the center of the page\n * right under page title. Typical page notifications are 'save confirmation',\n * 'error during submit', warnings of field requirements, etc.\n */\nexport class PageNotification\n{\n    constructor(public type: PageNotificationType, public title: string,\n                public description: string, public contentTmpl?: TemplateRef<any>)\n    {\n    }\n\n    hasTemplate(): boolean\n    {\n        return isPresent(this.contentTmpl);\n    }\n\n    toString(): string\n    {\n        return this.type + ', title: ' + this.title + ', description:  ' + this.description;\n    }\n}\n\nexport type PageNotificationType = 'success' | 'info' | 'warning' | 'error';\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PageNotificationComponent} from './page-notification.component';\n\n@NgModule({\n    declarations: [\n        PageNotificationComponent\n\n    ],\n    imports: [\n        CommonModule\n    ],\n    entryComponents: [\n        PageNotificationComponent\n    ],\n    exports: [\n        PageNotificationComponent\n    ],\n    providers: []\n})\nexport class AWPageNotificationModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\n/**\n * Represents an event triggered when a page has been initialized.\n *\n */\nexport class PageInitialized\n{\n    constructor(public title: string)\n    {\n    }\n\n    toString(): string\n    {\n        return `PageInitializied(title: ${this.title})`;\n    }\n}\n\n/**\n * Represents an event triggered when a page has been destroyed.\n *\n */\nexport class PageDestroyed\n{\n    constructor(public title: string)\n    {\n    }\n\n    toString(): string\n    {\n        return `PageDestroyed(title: ${this.title})`;\n    }\n}\n\nexport type PageEvent = PageInitialized | PageDestroyed;\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {PageDestroyed, PageEvent, PageInitialized} from './page-events';\n\n/**\n * Page LifeCycle Service monitors all page initialization and destructions.\n * The purpose of this service is to help the application monitor page lifecycle, subscribe\n * to lifecycle events and execute actions such as user analytics.\n *\n * Usage:\n *\n *    1.  Inject PageLifeCycleService into your constructor\n *\n *    constructor(pageLifecycle:PageLifeCycleService) {\n *        pageLifecycle.pageEvents.subscribe(event:Event => {\n *            if(event instanceof PageInitialized) {\n *            }\n *            // PageDestroyed\n *\n *        });\n *     }\n */\n@Injectable()\nexport class PageLifeCycleService\n{\n\n    /**\n     * Page event queue when all page lifecycle events: init, destroy are emitted.\n     * Listeners can subscribe to these events.\n     */\n    public pageEvents: Subject<PageEvent> = new Subject<PageEvent>();\n\n    /**\n     *\n     */\n    constructor()\n    {\n\n    }\n\n    /**\n     * Called when page is initialized.\n     * @param pageTitle\n     */\n    public onPageInit(pageTitle: string): void\n    {\n        this.pageEvents.next(new PageInitialized(pageTitle));\n    }\n\n    /**\n     * Call when page has been destroyed\n     * @param title\n     */\n    public onPageDestroy(pageTitle: string): void\n    {\n        this.pageEvents.next(new PageDestroyed(pageTitle));\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Environment} from '@aribaui/core';\nimport {ComponentRegistry} from '../../core/component-registry.service';\nimport {PageLifeCycleService} from './page-lifecycle.service';\nimport {BaseComponent} from '../../core/base.component';\n\n/**\n * Represents the different page types in an application.\n */\nexport enum PageType {\n    Init,         // Init Page type\n    Login,        // Login Page\n    Object,       // Object detail page\n    List,         // List Page\n    MasterDetail, // MasterDetail\n    Dashboard,    // Dashboard page\n    Modal         // Modal page, it can be configured to be a popup, or standalone page.\n}\n\n/** Placeholder now. The Error Manager handles all the errors on the page.\n *  It is initialized for every page. Page errors, warning, info goes through\n *  the error Manager and the result message is displayed on the page notification area.\n */\nexport class ErrorManager\n{\n\n}\n\n/**\n *  Page wrapper is the base class for all pages. The idea is that there are different page types\n *  in an Application. A List Page renders a list of objects, ex: customers, requests, PO.  And\n *  a object page will render one object in detail.\n *\n *  They share common attributes such as page type and page id.\n *\n *  Ariba Page have a life cycle. When page starts up, it's initialized. And when the page is\n *  destroyed, it'll be complete.\n */\nexport abstract class PageWrapper extends BaseComponent\n{\n    /**\n     * What type of page this is.\n     *\n     */\n    protected pageType: PageType = PageType.Init;\n\n    /**\n     * Page Id. Used when pages are stored in map.\n     */\n    id: string;\n\n    /**\n     * Handling all the error on a page.\n     */\n    public errorManager: ErrorManager;\n\n    /**\n     * Indicate that this page wrapper has been wrapped by another page wrapper.\n     * In this case, we wouldn't display header and footer and other page wrapper components\n     */\n    alreadyInPageWrapper: boolean;\n\n\n    constructor(public env: Environment, pageType: PageType,\n                protected componentRegistry: ComponentRegistry,\n                protected pageLifecycleService: PageLifeCycleService)\n    {\n        super(env);\n        this.pageType = pageType;\n    }\n\n    /**\n     * All subclass needs to generated a page identifier.\n     * It follows the following pattern:\n     *    type_title_id\n     *\n     *    RFQ_SourcingRequest_123\n     */\n    abstract generatePageId(): string;\n\n    /**\n     * Get the unique Id for this page.\n     *\n     */\n    public getId(): string\n    {\n        if (this.id) {\n            return this.id;\n        }\n\n        this.id = this.generatePageId();\n    }\n\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ElementRef, Input, ViewChild} from '@angular/core';\nimport {Environment, isPresent, RoutingService} from '@aribaui/core';\nimport {SidenavComponent} from '../sidenav/sidenav.component';\nimport {BaseComponent} from '../../../core/base.component';\n\n/**\n *\n * Header component that implements consistent styling, behavior for an Ariba page.\n * Header includes a menu, user profile, and alerts.\n *\n *  @Component({\n *    selector: 'registration' ,\n *    template: `\n *                <aw-page-header [showBackAction]=\"true\" userName=\"Chad Noll\"\n *                                 [menuItems]=\"menuItems\" [notifications]=\"userNotifications\">\n *                     <div class=\"page-header-center\">\n *                           <a class=\"navbar-brand\" tabindex=\"0\" href=\"/\">\n *                               <img class=\"navbar-logo\" src=\"./images/SAP_Ariba_DB.png\"\n *                                   alt=\"Go to homepage\" data-pin-nopin=\"true\">\n *                          </a>\n *                     </div>\n *                </aw-page-header>\n *\n *    `\n *    })\n *    export class MyPage\n *    {\n *      menuItems: PageMenuItem[] = [new PageMenuItem('icon-home', 'Home', '/play/'),\n *                                  new PageMenuItem('icon-expense-report', 'Reports',\n *                                                     '/play/pageheader'),\n *                                  new PageMenuItem('icon-sales-order', 'Purchase Order',\n *                                                       '/play/pageheader'),\n *                                  new PageMenuItem('icon-account', 'Accounts',\n *                                                     '/play/pageheader')];\n *\n *     userNotifications: UserNotification[] = [\n *       new UserNotification('icon-expense-report', 'Expense report EXP453 has been approved.',\n *                             '/play/'),\n *         new UserNotification('icon-sales-order', 'Sales Order SO1234 has been created.',\n *                             '/play/'),\n *           new UserNotification('icon-account', 'Supplier account SA1234 has been updated.',\n *                               '/play/')\n *        ];\n *\n *        constructor ()\n *        {\n *        }\n *\n *    }\n */\n@Component({\n    selector: 'aw-page-header',\n    template: `<nav class=\"navbar page-header\" role=\"navigation\">\n\n    <div class=\"ui-g\">\n        <div class=\"ui-g-12 ui-md-4 navbar-left\">\n\n        <span *ngIf=\"hasMenuItems()\">\n            <a (click)=\"showHideMenu()\">\n                <i class=\"sap-icon icon-paging\"></i>\n            </a>\n\n            <!-- Side menu -->\n            <aw-sidenav #sidemenu [items]=\"menuItems\"></aw-sidenav>\n        </span>\n            <!-- End Hamburger menu. -->\n\n            <!--  back action -->\n            <span class=\"back-action\">\n            <a (click)=\"backAction()\">\n                <i *ngIf=\"showBackAction\" class=\"sap-icon icon-arrow-left\" role=\"button\"></i>\n            </a>\n        </span>\n\n        </div>\n\n        <div class=\"ui-g-12 ui-md-4 navbar-center\">\n\n            <!-- central section.  Application can add Ariba-logo, search box, etc -->\n            <ng-content select=\".page-header-center\"></ng-content>\n        </div>\n\n        <div class=\"ui-g-12 ui-md-4 navbar-right\">\n        <span *ngIf=\"userName\">\n            <img id=\"userProfilePicture\" class=\"profile-logo\" aria-hidden=\"true\"\n                 [title]=\"userName\" src=\"{{assetFolder}}/images/default_image_small.png\">\n            <span class=\"profile-user\" title=\"{{userName}}\">{{userName}}</span>\n        </span>\n\n            <span *ngIf=\"!hideNotification\" class=\"notification-container\">\n\n            <i #notificationIcon class=\"ariba-icon icon-notification\"\n               (click)=\"toggleNotificationPanel()\"></i>\n            <span *ngIf=\"hasNotifications()\" class=\"notification-badge\" aria-hidden=\"true\">{{notifications.length}}</span>\n\n                <!-- Originally I was using p-overlay-panel, however, it doesn't position correctly under the notification icon.\n                     The positioning logic in prime ng needs some more investigation. So for now, use a div instead-->\n            <div *ngIf=\"showNotificationPanel\" class=\"notification-panel\">\n\n                <div class=\"notification-header\">\n                     Notifications\n                </div>\n\n                <ul class=\"notification-content\">\n                    <li *ngFor=\"let noti of notifications\" class=\"notification-item\">\n                        <a [routerLink]=\"noti.link\">\n                            <span class=\"notification-item-icon\"><i\n                                [ngClass]=\"'sap-icon ' + noti.icon\"></i></span>\n                            {{noti.label}}\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </span>\n        </div>\n\n\n    </div>\n</nav>\n`,\n    styles: [`.page-header i{font-size:32px}.page-header .icon-paging{font-size:30px;position:relative;top:2px}.back-action{display:inline-block;margin-left:15px}.back-action i{position:relative;top:3px}.navbar{background:#000;color:#fff}.navbar-left{padding-left:15px;height:50px}.navbar-center{text-align:center;height:50px}.navbar-right{text-align:right;height:50px}.profile-logo{width:30px;height:30px;position:relative;top:2px}.profile-user{vertical-align:super;margin-right:30px}.icon-notification:before{content:\"\\\\eA14\"}.navbar #sidebar-menu-icon{position:relative;top:.5em}.notification-container{position:relative;margin-right:20px;display:inline-block}.notification-badge{display:inline-block;padding:2px 5px;font-size:12px;font-weight:700;color:#fff;background-color:#c00;border-radius:10px;position:absolute;top:0;left:16px}.notification-panel{position:absolute;right:-27px;top:45px;width:350px;color:#767676;box-shadow:0 2px 10px 0 rgba(0,0,0,.13);background-color:#fff;overflow:hidden;transition:all .3s ease-in-out}.notification-panel .notification-header{background-color:#f3f3f3;font-size:16px;height:50px;line-height:50px;text-align:center}.notification-panel .notification-content{padding:0;margin:0}.notification-panel .notification-item{height:50px;border-top:1px solid #d7d7d7;padding:15px 10px;white-space:nowrap;text-overflow:ellipsis}.notification-panel .notification-item a{color:#767676;text-decoration:none;line-height:35px}.notification-panel .notification-item:hover{background-color:#f7f8fa}.notification-panel .notification-item-icon{margin-right:15px;color:#767676;display:inline-block;margin-top:10px;vertical-align:middle}`]\n})\nexport class PageHeaderComponent extends BaseComponent\n{\n\n    /**\n     * list of menu entries. The page menu icon will only display when this list is not empty.\n     */\n    @Input()\n    menuItems: PageMenuItem[];\n\n    /**\n     * list of user notification\n     */\n    @Input()\n    notifications: UserNotification[];\n\n    /**\n     * Should the user notification icon be hidden. Default it to show the icon even\n     * if there's no notifications.\n     *\n     */\n    @Input()\n    hideNotification: boolean = false;\n\n    /**\n     * displays the back link that navigates user to the previous page when clicked.\n     */\n    @Input()\n    showBackAction: boolean = false;\n\n    /**\n     * Current logged in user name.\n     */\n    @Input()\n    userName: string;\n\n    /**\n     * The sidemenu\n     */\n    @ViewChild('sidemenu')\n    sidenav: SidenavComponent;\n\n    showNotificationPanel: boolean = false;\n\n\n    constructor(protected element: ElementRef, public env: Environment,\n                private routing: RoutingService)\n    {\n        super(env);\n\n    }\n\n    backAction(): void\n    {\n        this.routing.goBack();\n    }\n\n    /**\n     * Do i have any menu items.\n     *\n     */\n    hasMenuItems(): boolean\n    {\n        return (this.menuItems && this.menuItems.length > 0);\n    }\n\n    /**\n     * Toggle the side navigation menu.\n     */\n    showHideMenu(): void\n    {\n        this.sidenav.toggle();\n    }\n\n    /**\n     * Do I have any notifications.\n     *\n     */\n    hasNotifications(): boolean\n    {\n        return isPresent(this.notifications) && this.notifications.length > 0;\n    }\n\n    /**\n     * toggling wheather notification panel is displayed or not.\n     */\n    toggleNotificationPanel(): void\n    {\n        this.showNotificationPanel = !this.showNotificationPanel;\n    }\n}\n\n/**\n * PageMenuItem represents an item in the page menu structure.\n */\nexport class PageMenuItem\n{\n    /**\n     * @param icon    - Icon of this menu item.\n     * @param label   - label of this item.\n     * @param link    - link to the destination when user clicks on it.\n     */\n    constructor(public icon: string, public label: string,\n                public link: string)\n    {\n    }\n\n    toString(): string\n    {\n        return `PageMenuItem: (label, ${this.label})`;\n    }\n}\n\n/**\n * notification for the current logged in user.\n * Ex:  PR2049 has been approved.\n *      Order PO518 received.\n */\nexport class UserNotification\n{\n\n    /**\n     * @param icon   - alert notification icon\n     * @param label  - alert notification label\n     * @param link   - link\n     */\n    constructor(public icon: string, public label: string,\n                public link: string)\n    {\n\n    }\n\n    toString(): string\n    {\n        return `PageUserNotification: (label, ${this.label})`;\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {AfterContentInit, Component, ContentChild, ElementRef} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../../core/base.component';\n\n/**\n * Footer component that implements consistent styling, behavior.\n * This footer component self contained.\n *\n *  @Component({\n *    selector: 'registration' ,\n *    template: `\n *\n *          <aw-page-footer>\n *               <div class=\"page-footer-logo\">\n *                   <img src=\"images/ariba_logo_white_bkgd.png\">\n *               </div>\n *               <div class=\"page-footer-user-info\">\n *                   Chad Noll (cnoll) last visit {{last_visited | date:'MM/dd/yyyy h:mma' }}\n  *                   | Buyer Organization\n *               </div>\n *               <span class=\"page-footer-copyright\" #copyright>\n *                   <p>Â© 2020â2028 The Future, Inc. All rights reserved</p>\n *               </span>\n *           </aw-page-footer>\n *    `\n *    })\n *    export class MyPage\n *    {\n *        constructor ()\n *        {\n *        }\n *\n *    }\n */\n@Component({\n    selector: 'aw-page-footer',\n    template: `<div class=\"page-footer\">\n    <div class=\"ui-g\">\n        <div class=\"ui-g-12 ui-md-8\">\n\n            <ng-content select=\".page-footer-logo\"></ng-content>\n\n            <div class=\"user-info\">\n                <ng-content select=\".page-footer-user-info\"></ng-content>\n            </div>\n\n            <ul class=\"footer-links\">\n                <li role=\"presentation\"><a href=\"http://www.ariba.com/legal/ariba_tou.cfm\">Terms of\n                    Use</a></li>\n                <li role=\"presentation\"><a\n                    href=\"http://www.ariba.com/legal/ariba_security_policy.cfm\">Security\n                    Disclosure</a></li>\n                <li role=\"presentation\"><a\n                    href=\"http://www.ariba.com/legal/ariba_privacy_statement.cfm\">Privacy\n                    Statement</a></li>\n                <li role=\"presentation\"><a\n                    href=\"http://www.ariba.com/legal/ariba-privacy-statement\">Cookie Statement</a>\n                </li>\n                <li role=\"presentation\"><a\n                    href=\"http://www.ariba.com/legal/ariba-privacy-statement\">Participant\n                    Statement</a></li>\n            </ul>\n        </div>\n\n        <div class=\"ui-g-12 ui-md-4\">\n            <div class=\"u-bottom-align\"></div>\n            <div class=\"u-hright copyright\">\n                <ng-content select=\".page-footer-copyright\"></ng-content>\n            </div>\n\n            <!-- Default Copyright -->\n            <div *ngIf=\"showDefaultCopyright\" class=\"u-hright copyright\">\n                <p>Â© 1996â2017 Ariba, Inc. All rights reserved</p>\n            </div>\n\n        </div>\n    </div>\n</div>\n`,\n    styles: [`.page-footer{background:#fff;padding:15px 0 0;font-size:11px;border-top:1px solid #d7d7d7}.page-footer .user-info{color:#ccc}.page-footer .ui-g{margin:0 auto}.page-footer .copyright{color:#ccc}.footer-links{list-style:none;margin:0 -15px;padding:0;font-size:10px}.footer-links li{float:left}.footer-links:after,.footer-links:before{content:\" \";display:table}.footer-links:after{clear:both}.footer-links>li,.footer-links>li>a{position:relative;display:block}.footer-links>li>a{padding:10px 15px;color:#199de0}`]\n})\nexport class PageFooterComponent extends BaseComponent implements AfterContentInit\n{\n\n    /**\n     * copyright content\n     */\n    @ContentChild('copyright') copyright: any;\n\n    /**\n     * show default copyright. If copyright is passed in, then show the passed in one.\n     */\n    showDefaultCopyright: boolean = true;\n\n    constructor(protected element: ElementRef, public env: Environment)\n    {\n        super(env);\n    }\n\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n    }\n\n    ngAfterContentInit()\n    {\n        this.showDefaultCopyright = !isPresent(this.copyright);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef\n} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {ComponentRegistry} from '../../../core/component-registry.service';\nimport {PageType, PageWrapper} from '../page-wrapper';\nimport {PageNotification} from '../../page-notification/page-notification.component';\nimport {PageLifeCycleService} from '../page-lifecycle.service';\nimport {PageHeaderComponent} from '../page-header/page-header.component';\nimport {PageFooterComponent} from '../page-footer/page-footer.component';\n\n/**\n *\n * Object Page Wrapper Component renders any object instance in detail. It has a uniform layout,\n * Header, Page title, Page notification, actions, content, and Footer.\n *\n *\n *  Usage:\n *\n *  @Component({\n *    selector: 'RFXPage' ,\n *    template: `\n *       <aw-object-page-wrapper\n *                        [title]=\"rfxEntity.headerInfo.title\"\n *                        [objectType]=\"rfxEntity.headerInfo.eventTypeString\"\n *                        [notification]=\"pageNotification\">\n *\n *\n *           <aw-page-actions>\n *               <aw-button [type]=\"'submit'\" [name]=\"'edit'\" [value]=\"edit\" [style]=\"'primary'\">\n *                   Edit\n *                </aw-button>\n *               <aw-button [type]=\"'button'\" [name]=\"'cancel'\" [value]=\"cancel\"\n *                                                         [style]=\"'secondary'\">\n *                  Cancel\n *               </aw-button>\n *           </aw-page-actions>\n *\n *           <aw-page-content>\n *             <aw-section title=\"Sourcing request info\" (onStateChanged)=\"onStateChange($event)\">\n *\n *                   <m-context [object]=\"rfxEntity.headerInfo\"\n *                              [operation]=\"this.editabilityState.headerInfoOp\"\n *                              layout=\"Inspect\"\n *                              uiGroup=\"HeaderGeneral\"\n *                   >\n *                       <m-include-component></m-include-component>\n *                   </m-context>\n *\n *             </aw-section>\n *           </aw-page-content>\n *       </aw-object-page-wrapper>\n *    `\n *    })\n *    export class RFXPage\n *    {\n *       // To keep track what section is editable and which read only\n *       editabilityState: EditabilityState;\n *\n *       // Current RFX event\n *       rfxEntity: RfxEventEntity;\n *\n *       // Notifications\n *       notification: PageNotification = new PageNotification(\"warn\",\n *                              \"Policy Warning\", \"This request requires 3 bids.\");\n *\n *        constructor ()\n *        {\n *        }\n *\n *    }\n */\n@Component({\n    selector: 'aw-object-page-wrapper',\n    template: `<div class=\"page-wrapper\">\n    <ng-template [ngIf]=\"!hideHeader\">\n        <aw-include-component [name]='header.name'></aw-include-component>\n    </ng-template>\n\n    <div class=\"arc-object-detail\">\n\n        <div class=\"ui-g\">\n\n            <!-- page header -->\n            <div class=\"ui-g-12 page-title\">\n\n                <!-- page title -->\n                <div class=\"ui-g-8 ui-md-8 page-title-text\">{{title}}</div>\n\n                <div class=\"ui-g-4 ui-md-4 page-status\">\n                    <span class=\"object-status-label\">{{objectStatusLabel}} &nbsp;</span>\n                    <span class=\"object-status\">{{objectStatus}}</span>\n                </div>\n            </div>\n\n            <!-- page actions -->\n            <div class=\"ui-g-12 page-actions\" *ngIf=\"hasTopPageActions\">\n                <ng-template [embeddedItem]=\"actionsTemplate\"\n                             *ngIf=\"hasTopPageActions\"></ng-template>\n            </div>\n\n            <!-- object states  displays only if state exists. -->\n            <div class=\"ui-g-12 page-state\">\n                <div class=\"ui-g-3 page-state-left\" [class.content]=\"hasObjectStates()\">\n                    <ng-content select=\".page-state-left\"></ng-content>\n                </div>\n                <div class=\"ui-g-6 page-state-center\">\n                    <ng-container *ngIf=\"hasObjectStates()\">\n                        <aw-stepper [steps]=\"objectStates\"\n                                    [currentStep]=\"objectStateIndex\"></aw-stepper>\n                    </ng-container>\n                </div>\n                <div class=\"ui-g-3 page-state-right\">\n                    <ng-content select=\".page-state-right\"></ng-content>\n                </div>\n            </div>\n\n\n            <!-- Page Notification -->\n            <ng-template [ngIf]=\"hasNotifications()\">\n                <div class=\"ui-g-12 u-nopadding\">\n\n                    <aw-page-notification *ngFor=\"let notification of notifications\"\n                                          [notification]=\"notification\"></aw-page-notification>\n                </div>\n            </ng-template>\n\n            <!-- additional content -->\n            <ng-content select=\"aw-page-content\"></ng-content>\n\n        </div>\n\n    </div>\n\n    <!-- page actions -->\n    <div class=\"ui-g-12 page-actions-bottom\" *ngIf=\"hasBottomPageActions\">\n        <ng-template [embeddedItem]=\"actionsTemplate\"\n                     *ngIf=\"hasBottomPageActions\"></ng-template>\n\n    </div>\n\n    <div class=\"page-push\"></div>\n</div>\n\n<ng-template [ngIf]=\"!hideFooter\">\n    <aw-include-component [name]='footer.name'></aw-include-component>\n</ng-template>\n`,\n    styles: [`.page-wrapper{background-color:#f2f2f2;min-height:100%;margin-bottom:-100px}.arc-object-detail{padding:20px}.page-title-text{font-size:22px;color:#000;padding:14px 0}.page-title{padding:5px 0;border-bottom:1px solid #d7d7d7}.page-actions{padding:15px 0 5px}.page-actions-bottom{padding:0 20px}.page-state,.page-state-center,.page-state-left,.page-state-right{padding:0}.content::after{content:'\\\\00a0';font-size:0}.page-title /deep/ .ui-button{min-width:100px}.page-status{text-align:right;padding:18px 0}.page-status .object-status-label{color:#767676}.page-status .object-status{font-weight:700;color:#038719}.page-push{height:100px}`]\n})\nexport class ObjectPageWrapperComponent extends PageWrapper implements OnDestroy\n{\n\n    /**\n     * The title of this page\n     */\n    @Input()\n    title: string;\n\n    /**\n     * The type of the object being rendered - Event, Workspace, contract, etc.\n     */\n    @Input()\n    objectType: string;\n\n    /**\n     * label for the object status.\n     */\n    @Input()\n    objectStatusLabel: string;\n\n    /**\n     * This object's status. For example, draft, pending selection,\n     */\n    @Input()\n    objectStatus: string;\n\n    /**\n     * Optional. Some object has states. For example: RFxObject has Resolve, Review, Get Quote.\n     * Object states will appear on the page when they are present.\n     */\n    @Input()\n    objectStates: string[];\n\n\n    /**\n     * When Stepper is used this identifies current set state\n     */\n    @Input()\n    currentState: string;\n\n\n    /**\n     * Header is a component type to be rendered as a page Header.\n     *\n     * The 'default' value is the component/widget/HeaderComponent\n     */\n    @Input()\n    header: any;\n\n    /**\n     * Set true if page should not include any header. Need to set to true even no header\n     * object is passed in. Otherwise, a default Header component will be added.\n     */\n    @Input()\n    hideHeader: boolean = false;\n\n    /**\n     * Footer Component is the page footer.\n     * can be overriden but the default value is compoenent/widget/FooterComponent.\n     */\n    @Input()\n    footer: any;\n\n    /**\n     * Set true if page should not include any footer. Need to set to true even no footer\n     * object is passed in. Otherwise, a default Footer component will be added.\n     */\n    @Input()\n    hideFooter: boolean = false;\n\n    /**\n     * The positioning of the page actions (page buttons)\n     *   'top' :    page buttons are placed at the top of the page, below the title, to the right.\n     *   'bottom' : page buttons are placed at the bottom of the page, above the footer.\n     *   'both'   : page buttons are placed at both top and bottom.\n     *\n     */\n    @Input()\n    pageActionPosition: string = 'top';\n\n\n    /**\n     * This flag is driven by pageActionPosition. The default position is top.\n     * Value is true for both 'top' and 'both' of pageActionPosition.\n     */\n    hasTopPageActions: boolean = true;\n\n    /**\n     * This flag is driven by pageAction position.\n     * Value is true for both 'bottom' and 'both' of pageActionPosition.\n     */\n    hasBottomPageActions: boolean;\n\n\n    /**\n     * Queries a p template if any\n     */\n    @ContentChild('pageActions')\n    actionsTemplate: TemplateRef<any>;\n\n    /**\n     * Any Success, Info, Error, or Warn for this page.\n     */\n    @Input()\n    notifications: PageNotification[];\n\n\n    objectStateIndex: number = 0;\n\n    constructor(protected element: ElementRef, public env: Environment,\n                componentRegistry: ComponentRegistry, pageLifecycleService: PageLifeCycleService)\n    {\n        super(env, PageType.Object, componentRegistry, pageLifecycleService);\n\n        // Setting Default header component\n        this.header = PageHeaderComponent;\n        this.footer = PageFooterComponent;\n    }\n\n    /**\n     * Generate a unique Id for this object.\n     *\n     */\n    generatePageId(): string\n    {\n        return this.objectType + '_' + this.title + (this.id) ? ('_' + this.id) : '';\n    }\n\n    /**\n     * Does my page have page notification?\n     *\n     */\n    hasNotifications(): boolean\n    {\n        return (this.notifications && this.notifications.length > 0);\n    }\n\n    hasObjectStates(): boolean\n    {\n        return isPresent(this.objectStates);\n    }\n\n    /**\n     * Initialize my local components\n     */\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        // New Component types that are used in c-include-component\n        if (this.header) {\n            this.componentRegistry.registerType(this.header.name, this.header);\n        }\n\n        // New Component types that are used in c-include-component\n        if (this.footer) {\n            this.componentRegistry.registerType(this.footer.name, this.footer);\n        }\n\n        /** notify subscribers of the page lifecycle service  */\n        this.pageLifecycleService.onPageInit(this.title);\n\n        // Setting the page action position.\n        if (this.pageActionPosition === 'bottom') {\n            this.hasTopPageActions = false;\n            this.hasBottomPageActions = true;\n\n        } else if (this.pageActionPosition === 'both') {\n\n            this.hasTopPageActions = true;\n            this.hasBottomPageActions = true;\n        }\n\n        if (isPresent(this.objectStates) && this.objectStates.length > 1\n            && isPresent(this.currentState)) {\n\n            this.objectStateIndex = this.objectStates.indexOf(this.currentState);\n        }\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        super.ngOnChanges(changes);\n\n        if (isPresent(changes['currentState']) &&\n            changes['currentState'].currentValue !== changes['currentState'].previousValue) {\n            // we dont need to check if objectStates exists\n            this.objectStateIndex = this.objectStates.indexOf(this.currentState);\n        }\n\n    }\n\n    ngOnDestroy()\n    {\n        this.pageLifecycleService.onPageDestroy(this.title);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ElementRef} from '@angular/core';\nimport {Environment} from '@aribaui/core';\nimport {BaseComponent} from '../../../core/base.component';\n\n/**\n * Page actions is a wrapper for all page actions, buttons, links, menus that interacts it with the\n * page. The wrapper use the ability to position it as needed.\n */\n@Component({\n    selector: 'aw-page-actions',\n    template: `<div class=\"page-actions\">\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`.page-actions{text-align:right;padding-top:0;padding-right:0}`]\n})\nexport class PageActionsComponent extends BaseComponent\n{\n\n    constructor(protected element: ElementRef, public env: Environment)\n    {\n        super(env);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ElementRef} from '@angular/core';\nimport {Environment} from '@aribaui/core';\nimport {BaseComponent} from '../../../core/base.component';\n\n/**\n * Page content is a wrapper for page content.\n * Currently, it's pretty bare, but as we add more interactions on the page, like a side bar,\n * the page content area will likely get affected.\n */\n@Component({\n    selector: 'aw-page-content',\n    template: '<ng-content></ng-content>',\n    styles: [':host {width: 100%; padding: 0 .5em;}']\n})\nexport class PageContentComponent extends BaseComponent\n{\n\n    constructor(protected element: ElementRef, public env: Environment)\n    {\n        super(env);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, Input} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../core/base.component';\n\n\nconst STEPPER_COMPLETED_STEP_COLOR = '#58b957';\nconst STEPPER_CURRENT_STEP_COLOR = '#0076CB';\nconst STEPPER_REMAINING_STEP_COLOR = '#D7D7D7';\n\n/**\n * Stepper component displays a list of steps for user to follow. It can be used as a checklist\n * to indicate completed, current and remaining items. It could be also be used to indicate\n * the state of an document, created, submitted, approved, etc...\n *\n *\n * Usage:\n *   1.   Use the component inside your template. provide a list of steps and the current step.\n *\n *          @Component({\n *                selector: 'aw-page' ,\n *                           template: `\n *                <aw-stepper [steps]=\"steps\" [currentStep]=\"currentStep\"></aw-stepper>\n *\n *                  `\n *         export class MyPageComponent implements OnInit {\n *\n *                     steps: string[] = ['Monitor', 'Add Supplier', 'Get Quote'];\n *                     currentStep: number = 1;\n *\n *                     constructor(private modalService: ModalService) {\n *                          super();\n *                       }\n *                     ngOnInit() { }\n *       }\n *\n *   2.  Override the default colors.\n *\n *         @Component({\n *                selector: 'aw-page' ,\n *                           template: `\n *                            <aw-stepper [steps]=\"steps\" [stepColorCurrent]=\"'#ff9900'\"\n *                                        [stepColorRemaining]=\"'#CC0000'\"\n *                                        [stepColorCompleted]=\"'#97a822'\"\n *                                        [currentStep]=\"currentStep\">\n *                            </aw-stepper>\n *                  `\n */\n@Component({\n    selector: 'aw-stepper',\n    template: `<div class=\"stepper-container\">\n    <div class=\"steps\">\n        <div class=\"step-spacing\"></div>\n\n        <ng-container *ngFor=\"let step of steps; let i=index; let last=last;\">\n            <div class=\"step\">\n                <aw-step [title]=\"step\" [color]=\"getStepColor(i)\"></aw-step>\n            </div>\n            <div *ngIf=\"!last\" class=\"step-connector\" [style.width]=\"connectorWidth\">\n                <div class=\"connector\" [style.borderBottomColor]=\"getConnectorColor(i)\"></div>\n            </div>\n        </ng-container>\n\n        <div class=\"step-spacing\"></div>\n    </div>\n\n    <div class=\"step-labels\"></div>\n</div>\n\n\n`,\n    styles: [`.stepper-container{display:table;table-layout:fixed;width:100%}.steps{display:table-row}.step-spacing{display:table-cell;width:10%}.step{display:table-cell;width:32px}.step-connector{display:table-cell;vertical-align:middle}.connector{height:1px;border-bottom:3px solid #58b957}.step-labels{display:table-row;height:50px}`]\n})\nexport class StepperComponent extends BaseComponent\n{\n    /**\n     * Required\n     * Array of steps. Order of the steps should be in array order.\n     */\n    @Input()\n    steps: string[];\n\n\n    /**\n     * specify the colors associated with steps above. The number of colors\n     * and number of steps must match.\n     * Optional:, if empty, default colors or colors from stepColor inputs will be used.\n     */\n    @Input()\n    colors: string[];\n\n    /**\n     * Local variable to indicate whether to use the colors array or not.\n     */\n    bUseColorArray: boolean = false;\n\n    /**\n     * Optional Input for caller to override the color of completed step.\n     */\n    @Input()\n    stepColorCompleted: string;\n\n    /**\n     * Optional Input for caller to override the color of current step.\n     */\n    @Input()\n    stepColorCurrent: string;\n\n    /**\n     * Optional Input for caller to override the color of remaining step.\n     */\n    @Input()\n    stepColorRemaining: string;\n\n    /**\n     * The current step that's on. If not provided default to the first step.\n     */\n    @Input()\n    currentStep: number = 0;\n\n    /**\n     * calculated the width of connectors between steps. The calculations is so\n     * that the steps are spread out evenly.\n     */\n    connectorWidth: any;\n\n    constructor(public env: Environment)\n    {\n        super(env);\n        // Initial color for the different stages of steps.\n        this.stepColorCompleted = STEPPER_COMPLETED_STEP_COLOR;\n        this.stepColorCurrent = STEPPER_CURRENT_STEP_COLOR;\n        this.stepColorRemaining = STEPPER_REMAINING_STEP_COLOR;\n    }\n\n    ngOnInit()\n    {\n        // Calculate the connector width based on how many steps\n        if (isPresent(this.steps) && this.steps.length > 1) {\n\n            // (100% - 20% (side margins)) / (NumOfSteps -1)\n            this.connectorWidth = Math.ceil(80 / (this.steps.length - 1)) + '%';\n        }\n\n        /**\n         * Use the color array if it's defined.\n         */\n        if (isPresent(this.colors)) {\n\n            this.bUseColorArray = true;\n\n            if (this.colors.length !== this.steps.length) {\n                throw new Error(`The size of the steps and colors don't match:\n                  (steps.length = ${this.steps.length}), (colors.length = ${this.colors.length}`);\n            }\n        }\n    }\n\n    /**\n     * Getting the color of the step for the current index\n     *\n     * @param index\n     */\n    getStepColor(index: number)\n    {\n        // Color Array overrides everything else.\n        if (this.bUseColorArray) {\n            return this.colors[index];\n        }\n\n        if (index < this.currentStep) {\n\n            return this.stepColorCompleted;\n\n        } else if (index === this.currentStep) {\n\n            return this.stepColorCurrent;\n\n        } else {\n\n            return this.stepColorRemaining;\n        }\n    }\n\n    /**\n     * The connector colors are driven by the step colors.\n     *\n     */\n    getConnectorColor(index: number)\n    {\n        // Color Array overrides everything else.\n        if (this.bUseColorArray) {\n            return this.colors[index];\n        }\n\n        if (index < this.currentStep) {\n\n            return this.stepColorCompleted;\n\n        } else {\n\n            return this.stepColorRemaining;\n        }\n    }\n\n    /**\n     * Next step.\n     */\n    nextStep()\n    {\n        this.currentStep++;\n    }\n\n    /**\n     * previous step.\n     */\n    prevStep()\n    {\n        this.currentStep--;\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, Input, OnInit} from '@angular/core';\nimport {Environment, isBlank} from '@aribaui/core';\n\n/**\n * Renders html step component\n *\n *  * Usage:\n *       Straight forward to use. But mostly it would be used as part of the stepper component.\n *\n *          @Component({\n *                selector: 'aw-page' ,\n *                           template: `\n *                           <aw-step [title]=\"step\" [color]=\"color\"></aw-step>\n *                           `\n */\n\n    // Default color for this step.\nconst DEFAULT_COLOR = '#58b957';\n\n@Component({\n    selector: 'aw-step',\n    template: `<div class=\"step-container\">\n    <div class=\"outer-circle\" [style.borderColor]=\"color\">\n        <div class=\"inner-circle\" [style.borderColor]=\"color\" [style.backgroundColor]=\"color\"></div>\n    </div>\n\n    <div class=\"step-title\">{{title}}</div>\n</div>\n\n`,\n    styles: [`.step-container{position:relative;width:32px}.outer-circle{width:26px;height:26px;border-radius:50%;background-color:#fff;border:3px solid #58b957;position:relative}.inner-circle{width:8px;height:8px;border-radius:50%;border:2px solid #58b957;background-color:#58b957;margin:0 auto;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.step-title{position:absolute;width:150px;top:40px;left:-60px;text-align:center}`]\n})\nexport class StepComponent implements OnInit\n{\n    /**\n     * The color of step icon.\n     */\n    @Input()\n    color: string;\n\n    /**\n     * title appears under the step graphics.\n     */\n    @Input()\n    title: string;\n\n    constructor(public env: Environment)\n    {\n    }\n\n    ngOnInit()\n    {\n        if (isBlank(this.color)) {\n            this.color = DEFAULT_COLOR;\n        }\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StepperComponent} from './stepper.component';\nimport {StepComponent} from './step/step.component';\nimport {AWCoreComponentModule} from '../../core/core.module';\n\n@NgModule({\n    declarations: [\n        StepComponent,\n        StepperComponent\n\n    ],\n    imports: [\n        CommonModule,\n        AWCoreComponentModule,\n    ],\n    entryComponents: [\n        StepComponent,\n        StepperComponent\n    ],\n    exports: [\n        StepComponent,\n        StepperComponent\n    ],\n    providers: []\n})\nexport class AWStepperModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ElementRef, Input} from '@angular/core';\nimport {Environment} from '@aribaui/core';\nimport {PageMenuItem} from '../page-header/page-header.component';\nimport {BaseComponent} from '../../../core/base.component';\n\n/**\n *  This is a temporary implementation for the page header component.\n *  When the real implementation of side menu is done, PageHeaderComponent will\n *  be swaped to use it.\n *\n */\n@Component({\n    selector: 'aw-sidenav',\n    template: `<div [ngClass]=\"getSidenavClass()\">\n    <div class=\"sidenav-content\">\n        <a *ngFor=\"let item of items\" [routerLink]=\"item.link\">\n            <span class=\"sidenav-icon\"><i [ngClass]=\"'sap-icon ' + item.icon\"></i></span>\n            {{item.label}}\n        </a>\n    </div>\n</div>\n`,\n    styles: [`.sidenav{height:100%;width:0;position:fixed;z-index:1;top:50px;left:0;background-color:#363636;overflow-x:hidden;padding-top:20px;transition:.5s}.sidenav-active{width:250px}.sidenav a{padding:8px 8px 8px 32px;text-decoration:none;font-size:16px;color:#fff;display:block;transition:.3s}.sidenav a:hover{background-color:#111}.sidenav-icon{font-size:30px;color:#ccc;margin-right:10px}`]\n})\nexport class SidenavComponent extends BaseComponent\n{\n    /**\n     * list of menu items\n     */\n    @Input()\n    items: PageMenuItem[];\n\n    /**\n     * displays the back link that navigates user to the previous page when clicked.\n     */\n    @Input()\n    show: boolean;\n\n    constructor(protected element: ElementRef, public env: Environment)\n    {\n        super(env);\n    }\n\n    getSidenavClass(): string\n    {\n        // Only show if I have items\n        return (this.show && this.items) ? 'sidenav sidenav-active' : 'sidenav';\n    }\n\n    open(): void\n    {\n        this.show = true;\n    }\n\n    close(): void\n    {\n        this.show = false;\n    }\n\n    toggle(): void\n    {\n        this.show = !this.show;\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PageLifeCycleService} from './page-lifecycle.service';\nimport {ObjectPageWrapperComponent} from './object-page-wrapper/object-page-wrapper.component';\nimport {PageActionsComponent} from './page-actions/page-actions.component';\nimport {PageContentComponent} from './page-content/page-content.component';\nimport {PageFooterComponent} from './page-footer/page-footer.component';\nimport {PageHeaderComponent} from './page-header/page-header.component';\nimport {AWStepperModule} from '../stepper/stepper.module';\nimport {SidenavComponent} from './sidenav/sidenav.component';\nimport {AWCoreComponentModule} from '../../core/core.module';\nimport {AWPageNotificationModule} from '../page-notification/page-notification.module';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n    declarations: [\n        ObjectPageWrapperComponent,\n        PageActionsComponent,\n        PageContentComponent,\n        PageFooterComponent,\n        PageHeaderComponent,\n        SidenavComponent\n\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        AWCoreComponentModule,\n        AWStepperModule,\n        AWPageNotificationModule\n    ],\n    entryComponents: [\n        PageFooterComponent,\n        PageActionsComponent,\n        PageContentComponent,\n        PageHeaderComponent\n    ],\n    exports: [\n        ObjectPageWrapperComponent,\n        PageActionsComponent,\n        PageContentComponent,\n        PageFooterComponent,\n        PageHeaderComponent,\n        SidenavComponent\n    ],\n    providers: [PageLifeCycleService]\n})\nexport class AWPageWrapperModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, forwardRef, Inject, Input, Optional, SkipSelf} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Environment} from '@aribaui/core';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {FormRowComponent} from '../../layouts/form-table/form-row/form-row.component';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * RichTextArea component represents a text editor which allows users to format text input.\n * The editor's toolbar is pre-configured to contain functionalities that are in our design.\n * @see {@link editor/editor.component.html}\n *\n *  ### Example\n *  ```\n *\n *  @Component({\n *    selector: 'rfx-event' ,\n *    template: `\n *\n *        <!-- Basic Usage. -->\n *        <aw-richtextarea [name]=\"'description'\" [value]=\"description\" placeHolder=\"put\n *        description\">\n *        </aw-richtextarea>\n *\n *        <!-- Editor with Full functionality -->\n *      <aw-richtextarea [name]=\"'comment'\" [type]=\"editorType\" [value]=\"value\"\n *      placeHolder=\"hold this\">\n *      </aw-richtextarea>\n *    })\n *    export class MyComponent\n *    {\n *        description: string;\n *\n *        editorType:EditorType = EditorType.Full;\n *        value:String;\n *\n *        constructor ()\n *        {\n *        }\n *    }\n */\n\n/**\n * Represents the different types of text editor. They are preconfigured with\n * functionality based on type. Use custom to add your own toolbar menu.\n */\nexport enum EditorType {\n    Default,    // Default Editor supports Minimal set of functionality\n    // [ bold | italic | underline | ordered | bullet | alignment]\n    Full,       // The full list of functionality,\n    TextFormat, // Functionalities that affects text formatting.\n    Custom     // Custom toolbar.\n}\n\n\nexport const EDITOR_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RichTextAreaComponent),\n    multi: true\n};\n\n\n@Component({\n    selector: 'aw-richtextarea',\n    template: `<ng-template [ngIf]=\"editable\">\n\n    <!-- Basic editor, also the default, which the most used features enabled. -->\n    <div *ngIf=\"type === EditorType.Default\">\n        <p-editor [(ngModel)]=\"value\" [styleClass]=\"styleClass\" [style]=\"{'height':'180px'}\"\n                  [placeholder]=\"placeHolder\">\n            <p-header>\n                    <span class=\"ql-formats\">\n                        <button class=\"ql-bold\" aria-label=\"Bold\"></button>\n                        <button class=\"ql-italic\" aria-label=\"Italic\"></button>\n                        <button class=\"ql-underline\" aria-label=\"Underline\"></button>\n                    </span>\n                <span class=\"ql-formats\">\n                        <button class=\"ql-list\" value=\"ordered\"></button>\n                        <button class=\"ql-list\" value=\"bullet\"></button>\n                    </span>\n                <span class=\"ql-formats\">\n                            <button value=\"left\" selected></button>\n                            <button value=\"center\"></button>\n                            <button value=\"right\"></button>\n                            <button value=\"justify\"></button>\n                    </span>\n            </p-header>\n        </p-editor>\n    </div>\n\n    <!-- Editor with all the features enabled -->\n    <div *ngIf=\"type === EditorType.Full\">\n        <p-editor [(ngModel)]=\"value\" [styleClass]=\"styleClass\" [style]=\"{'height':'180px'}\"\n                  [placeholder]=\"placeHolder\"></p-editor>\n    </div>\n\n    <!-- Editor with all Text formatting  -->\n    <div *ngIf=\"type === EditorType.TextFormat\">\n        <p-editor [(ngModel)]=\"value\" [styleClass]=\"styleClass\" [style]=\"{'height':'180px'}\"\n                  [placeholder]=\"placeHolder\">\n            <p-header>\n            <span class=\"ql-format-group\">\n              <select title=\"Font\" class=\"ql-font\">\n                <option value=\"sans-serif\" selected=\"\">Sans Serif</option>\n                <option value=\"serif\">Serif</option>\n                <option value=\"monospace\">Monospace</option>\n              </select>\n              <select title=\"Size\" class=\"ql-size\">\n                <option value=\"10px\">Small</option>\n                <option value=\"13px\" selected=\"\">Normal</option>\n                <option value=\"18px\">Large</option>\n                <option value=\"32px\">Huge</option>\n              </select>\n            </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\"></button>\n                </span>\n                <span class=\"ql-format-group\">\n              <select title=\"Text Color\" class=\"ql-color\">\n                <option value=\"rgb(0, 0, 0)\" label=\"rgb(0, 0, 0)\" selected=\"\"></option>\n                <option value=\"rgb(230, 0, 0)\" label=\"rgb(230, 0, 0)\"></option>\n                <option value=\"rgb(255, 153, 0)\" label=\"rgb(255, 153, 0)\"></option>\n                <option value=\"rgb(255, 255, 0)\" label=\"rgb(255, 255, 0)\"></option>\n                <option value=\"rgb(0, 138, 0)\" label=\"rgb(0, 138, 0)\"></option>\n                <option value=\"rgb(0, 102, 204)\" label=\"rgb(0, 102, 204)\"></option>\n                <option value=\"rgb(153, 51, 255)\" label=\"rgb(153, 51, 255)\"></option>\n                <option value=\"rgb(255, 255, 255)\" label=\"rgb(255, 255, 255)\"></option>\n                <option value=\"rgb(250, 204, 204)\" label=\"rgb(250, 204, 204)\"></option>\n                <option value=\"rgb(255, 235, 204)\" label=\"rgb(255, 235, 204)\"></option>\n                <option value=\"rgb(255, 255, 204)\" label=\"rgb(255, 255, 204)\"></option>\n                <option value=\"rgb(204, 232, 204)\" label=\"rgb(204, 232, 204)\"></option>\n                <option value=\"rgb(204, 224, 245)\" label=\"rgb(204, 224, 245)\"></option>\n                <option value=\"rgb(235, 214, 255)\" label=\"rgb(235, 214, 255)\"></option>\n                <option value=\"rgb(187, 187, 187)\" label=\"rgb(187, 187, 187)\"></option>\n                <option value=\"rgb(240, 102, 102)\" label=\"rgb(240, 102, 102)\"></option>\n                <option value=\"rgb(255, 194, 102)\" label=\"rgb(255, 194, 102)\"></option>\n                <option value=\"rgb(255, 255, 102)\" label=\"rgb(255, 255, 102)\"></option>\n                <option value=\"rgb(102, 185, 102)\" label=\"rgb(102, 185, 102)\"></option>\n                <option value=\"rgb(102, 163, 224)\" label=\"rgb(102, 163, 224)\"></option>\n                <option value=\"rgb(194, 133, 255)\" label=\"rgb(194, 133, 255)\"></option>\n                <option value=\"rgb(136, 136, 136)\" label=\"rgb(136, 136, 136)\"></option>\n                <option value=\"rgb(161, 0, 0)\" label=\"rgb(161, 0, 0)\"></option>\n                <option value=\"rgb(178, 107, 0)\" label=\"rgb(178, 107, 0)\"></option>\n                <option value=\"rgb(178, 178, 0)\" label=\"rgb(178, 178, 0)\"></option>\n                <option value=\"rgb(0, 97, 0)\" label=\"rgb(0, 97, 0)\"></option>\n                <option value=\"rgb(0, 71, 178)\" label=\"rgb(0, 71, 178)\"></option>\n                <option value=\"rgb(107, 36, 178)\" label=\"rgb(107, 36, 178)\"></option>\n                <option value=\"rgb(68, 68, 68)\" label=\"rgb(68, 68, 68)\"></option>\n                <option value=\"rgb(92, 0, 0)\" label=\"rgb(92, 0, 0)\"></option>\n                <option value=\"rgb(102, 61, 0)\" label=\"rgb(102, 61, 0)\"></option>\n                <option value=\"rgb(102, 102, 0)\" label=\"rgb(102, 102, 0)\"></option>\n                <option value=\"rgb(0, 55, 0)\" label=\"rgb(0, 55, 0)\"></option>\n                <option value=\"rgb(0, 41, 102)\" label=\"rgb(0, 41, 102)\"></option>\n                <option value=\"rgb(61, 20, 102)\" label=\"rgb(61, 20, 102)\"></option>\n              </select>\n              <span class=\"ql-format-separator\"></span>\n              <select title=\"Background Color\" class=\"ql-background\">\n                <option value=\"rgb(0, 0, 0)\" label=\"rgb(0, 0, 0)\"></option>\n                <option value=\"rgb(230, 0, 0)\" label=\"rgb(230, 0, 0)\"></option>\n                <option value=\"rgb(255, 153, 0)\" label=\"rgb(255, 153, 0)\"></option>\n                <option value=\"rgb(255, 255, 0)\" label=\"rgb(255, 255, 0)\"></option>\n                <option value=\"rgb(0, 138, 0)\" label=\"rgb(0, 138, 0)\"></option>\n                <option value=\"rgb(0, 102, 204)\" label=\"rgb(0, 102, 204)\"></option>\n                <option value=\"rgb(153, 51, 255)\" label=\"rgb(153, 51, 255)\"></option>\n                <option value=\"rgb(255, 255, 255)\" label=\"rgb(255, 255, 255)\" selected=\"\"></option>\n                <option value=\"rgb(250, 204, 204)\" label=\"rgb(250, 204, 204)\"></option>\n                <option value=\"rgb(255, 235, 204)\" label=\"rgb(255, 235, 204)\"></option>\n                <option value=\"rgb(255, 255, 204)\" label=\"rgb(255, 255, 204)\"></option>\n                <option value=\"rgb(204, 232, 204)\" label=\"rgb(204, 232, 204)\"></option>\n                <option value=\"rgb(204, 224, 245)\" label=\"rgb(204, 224, 245)\"></option>\n                <option value=\"rgb(235, 214, 255)\" label=\"rgb(235, 214, 255)\"></option>\n                <option value=\"rgb(187, 187, 187)\" label=\"rgb(187, 187, 187)\"></option>\n                <option value=\"rgb(240, 102, 102)\" label=\"rgb(240, 102, 102)\"></option>\n                <option value=\"rgb(255, 194, 102)\" label=\"rgb(255, 194, 102)\"></option>\n                <option value=\"rgb(255, 255, 102)\" label=\"rgb(255, 255, 102)\"></option>\n                <option value=\"rgb(102, 185, 102)\" label=\"rgb(102, 185, 102)\"></option>\n                <option value=\"rgb(102, 163, 224)\" label=\"rgb(102, 163, 224)\"></option>\n                <option value=\"rgb(194, 133, 255)\" label=\"rgb(194, 133, 255)\"></option>\n                <option value=\"rgb(136, 136, 136)\" label=\"rgb(136, 136, 136)\"></option>\n                <option value=\"rgb(161, 0, 0)\" label=\"rgb(161, 0, 0)\"></option>\n                <option value=\"rgb(178, 107, 0)\" label=\"rgb(178, 107, 0)\"></option>\n                <option value=\"rgb(178, 178, 0)\" label=\"rgb(178, 178, 0)\"></option>\n                <option value=\"rgb(0, 97, 0)\" label=\"rgb(0, 97, 0)\"></option>\n                <option value=\"rgb(0, 71, 178)\" label=\"rgb(0, 71, 178)\"></option>\n                <option value=\"rgb(107, 36, 178)\" label=\"rgb(107, 36, 178)\"></option>\n                <option value=\"rgb(68, 68, 68)\" label=\"rgb(68, 68, 68)\"></option>\n                <option value=\"rgb(92, 0, 0)\" label=\"rgb(92, 0, 0)\"></option>\n                <option value=\"rgb(102, 61, 0)\" label=\"rgb(102, 61, 0)\"></option>\n                <option value=\"rgb(102, 102, 0)\" label=\"rgb(102, 102, 0)\"></option>\n                <option value=\"rgb(0, 55, 0)\" label=\"rgb(0, 55, 0)\"></option>\n                <option value=\"rgb(0, 41, 102)\" label=\"rgb(0, 41, 102)\"></option>\n                <option value=\"rgb(61, 20, 102)\" label=\"rgb(61, 20, 102)\"></option>\n              </select>\n            </span>\n                <span class=\"ql-formats\">\n                <button class=\"ql-list\" value=\"ordered\"></button>\n                <button class=\"ql-list\" value=\"bullet\"></button>\n            </span>\n                <span class=\"ql-formats\">\n                    <button value=\"left\" selected></button>\n                    <button value=\"center\"></button>\n                    <button value=\"right\"></button>\n                    <button value=\"justify\"></button>\n            </span>\n            </p-header>\n        </p-editor>\n    </div>\n\n    <!-- Custom header Text Editor -->\n    <div *ngIf=\"type === EditorType.Custom\">\n        <p-editor [(ngModel)]=\"value\" [styleClass]=\"styleClass\" [style]=\"{'height':'180px'}\"\n                  [placeholder]=\"placeHolder\">\n            <p-header>\n                <ng-content select=\"custom-header\"></ng-content>\n            </p-header>\n        </p-editor>\n    </div>\n\n</ng-template>\n\n\n<ng-template [ngIf]=\"!editable\">\n    <aw-string [value]=\"value\"></aw-string>\n</ng-template>\n`,\n    styles: [`/deep/ .ui-editor-toolbar{background-color:#f5f5f5;border:1px solid #d7d7d7}/deep/ p-editor:active /deep/ .ui-editor-toolbar.ql-toolbar.ql-snow,/deep/ p-editor:focus /deep/ .ui-editor-toolbar.ql-toolbar.ql-snow,/deep/ p-editor:hover /deep/ .ui-editor-toolbar.ql-toolbar.ql-snow{border-color:#199de0}/deep/ p-editor:active /deep/ .ui-editor-content.ql-container.ql-snow,/deep/ p-editor:focus /deep/ .ui-editor-content.ql-container.ql-snow,/deep/ p-editor:hover /deep/ .ui-editor-content.ql-container.ql-snow{border-color:#199de0}`],\n    providers: [\n        EDITOR_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => RichTextAreaComponent)}\n    ]\n\n})\nexport class RichTextAreaComponent extends BaseFormComponent {\n    /**\n     * The type of the editor.  See EditorType for description.\n     */\n    @Input()\n    type: EditorType;\n\n    /**\n     * A value used to save and read when rendering and updating this component\n     */\n    @Input()\n    value: any = '';\n\n    /**\n     * Expose editorType so that it can be used in this components template.\n     */\n    EditorType: any = EditorType;\n\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => FormRowComponent))\n                protected parentContainer: BaseFormComponent) {\n        super(env, parentContainer);\n\n        this.type = EditorType.Default;\n        this.styleClass = 'default-editor';\n    }\n\n\n    ngOnInit() {\n        super.ngOnInit();\n        super.registerFormControl(this.value);\n\n        this.formControl.valueChanges.pipe(\n            distinctUntilChanged()\n        ).subscribe(val => {\n            this.value = val;\n            this.onModelChanged(this.value);\n        });\n    }\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     */\n    writeValue(value: any) {\n        if (value !== this.value) {\n            this.value = value;\n            this.formControl.setValue(value);\n        }\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {EditorModule} from 'primeng/primeng';\nimport {AWStringFieldModule} from '../string/string.module';\nimport {RichTextAreaComponent} from '../rich-text-area/rich-text-area.component';\n\n\n@NgModule({\n    declarations: [\n        RichTextAreaComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        EditorModule,\n        AWStringFieldModule\n    ],\n    entryComponents: [\n        RichTextAreaComponent\n    ],\n    exports: [\n        RichTextAreaComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWRichTextAreaModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {AccordionTab} from 'primeng/primeng';\nimport {BaseComponent} from '../../core/base.component';\n\n\n/**\n * Allow developer to override default actions. Must have this declared before class when we\n * want to have this declaration inside the same file.\n */\n@Component({\n    selector: 'aw-section-actions',\n    template: `<ng-content></ng-content> `,\n})\nexport class SectionActionsComponent\n{\n\n}\n\n\n/**\n *\n * Section component that implements a section of the page. It's an outline box that\n * has the ability to expand and hide its content.\n *\n * ```ts\n *  @Component({\n *    selector: 'rfx-details' ,\n *    template: `\n *         <aw-section title=\"Sourcing request info\" (onEdit)=\"onStateChange($event)\"\n  *                          [editable]=\"true\">\n *\n *                <m-context [object]=\"rfxEntity.headerInfo\"\n *                          [operation]=\"this.editabilityState.headerInfoOp\"\n *                          layout=\"Inspect\"\n *                          uiGroup=\"HeaderGeneral\">\n *                   <m-include-component></m-include-component>\n *               </m-context>\n *           </aw-section>\n *\n *\n *           <aw-section #supplierSection title=\"Selected suppliers\" (onOpen)=\"onOpen()\"\n   *                [opened]=\"false\">\n *               <supplier-profile-card></supplier-profile-card>\n *           </aw-section>\n *\n *           <aw-section title=\"RFQ Details\"\n *                       description=\"Review and update information for suppliers to respond.\"\n *                       [disableClose]=\"true\">\n *\n *               <aw-subsection title=\"Event timeline\">\n *                   <aw-form-table [useFiveZone]=\"false\" [editable]=\"true\">\n *\n *                       <aw-form-row [label]=\"'Start Date'\" [name]=\"'startDate'\" [size]=\"'small'\"\n *                                   [highlightRow]=\"true\">\n *                           <aw-date-time\n *                               formatName=\"dateTime\"\n *                               name=\"startDate\" [value]=\"rfxEntity.created\"\n *                               [showTime]=\"true\"></aw-date-time>\n *                       </aw-form-row>\n *                   </aw-form-table>\n *               </aw-subsection>\n *          </aw-section>\n *    `\n *    })\n *    export class MyPage\n *    {\n *\n *        constructor ()\n *        {\n *        }\n *\n *    }\n *\n * ```\n *\n * Section component also supports editability modes and if enabled it will render action buttons\n * in the footer. Developer can also override default behavior and provide custom actions.\n *\n *\n * e.g:\n *\n * ```\n *      <aw-section [title]=\"title\" [editable]=\"true\"\n *                          (onCancelAction)=\"someHandler1($event)\"\n *                          (onSaveAction)=\"someHandler2($event)\" >\n *              section content\n *\n *\n *   </aw-section>\n *\n * ```\n *\n * or custom action buttons:\n *\n *\n * ```html\n *\n *       <aw-section-actions>\n *                      <aw-button >\n *                            ButtonTest1\n *                      </aw-button>\n *                      <aw-button>\n *                            ButtonTest2\n *                      </aw-button>\n *     </aw-section-actions>\n *\n * ```\n *\n *\n * There are two edit modes\n *  # Default\n *      Renders action buttons in the footers and emit actions to the application\n *\n *  # External\n *     No action buttons are shown in the footer and behavior is handled by application. Only event\n *     is emited.\n *\n *\n *  e.g:\n *\n *  ```ts\n *\n *      <aw-section title=\"User Information\" (onEdit)=\"onAddSomething($event)\"\n *                  [editable]=\"true\" [editMode]=\"'external'\" >\n *                  <div>\n *                      Content\n *                  </div>\n *      </aw-section>\n *\n *  ```\n *\n * Note: When using editing mode you have to call at the end of the editing cycle method\n * `completeEditing()` to commit editing which changes internal state of the Section.\n *\n *\n *\n */\n@Component({\n    selector: 'aw-section',\n    template: `<div class=\"ui-g-12 section-container\"\n     [class.editing]=\"editable && editState && editMode === 'default'\">\n\n    <p-accordion (onOpen)=\"onSectionOpen($event)\" (onClose)=\"onSectionClose($event)\"\n                 [styleClass]=\"aClass()\">\n        <p-accordionTab #accordionTab [selected]=\"opened\" [disabled]=\"disableClose\">\n            <p-header>\n                <!-- title and description -->\n                <div class=\"section-header-container\">\n                    <div class=\"section-title\">{{title}}</div>\n                    <div *ngIf=\"hasDescription()\" class=\"section-description\">{{description}}</div>\n\n                    <!-- actions: Hide when in editing and editMode is default -->\n                    <div *ngIf=\"(editable && !editState && editMode === 'default') ||\n                        (editable && editMode === 'external')\"\n                         class=\"section-actions\">\n                        <aw-hyperlink (action)=\"onEditAction($event)\">\n                            <i class=\"sap-icon section-edit-action\" [ngClass]=\"actionIcon\"></i>\n                        </aw-hyperlink>\n                    </div>\n                </div>\n            </p-header>\n\n            <ng-content></ng-content>\n        </p-accordionTab>\n    </p-accordion>\n    <!--\n        need to put it outside of p-accordion otherwise button will inherit different\n        color scheme\n    -->\n    <div class=\"section-footer-container\" *ngIf=\"editable && editState &&\n            editMode === 'default'\">\n        <div class=\"footer-actions\">\n\n            <ng-template [ngIf]=\"!hasCustomActions()\">\n                <aw-button [style]=\"'secondary'\" size=\"small\"\n                           (action)=\"onCancelAction.emit($event)\">\n                    Cancel\n                </aw-button>\n                <aw-button size=\"small\" (action)=\"onSaveAction.emit($event)\">\n                    Save\n                </aw-button>\n            </ng-template>\n\n            <ng-content select=\"aw-section-actions\"></ng-content>\n        </div>\n    </div>\n</div>\n`,\n    styles: [`.section-header-container{position:relative}.section-container{margin:10px 0;background-color:#fff;padding:.2em .5em;border:2px dashed transparent}.section-container.editing{border-color:#199de0}.section-container ::ng-deep .ui-accordion-header>a{display:flex}.section-container ::ng-deep .ui-accordion-header>a .ui-accordion-toggle-icon{flex:0 0 30px;padding-top:2px}.section-container ::ng-deep .ui-accordion-header>a p-header{flex:1 0}.section-container /deep/ .ui-accordion-header.ui-state-disabled{opacity:1}.section-title{font-size:1.1em}.section-description{font-size:.9em;padding:.6em 0 .2em}.section-footer-container{margin:1em 2em 0;padding:.8em 0 1.5em .8em;border-top:1px solid #d7d7d7}.section-footer-container .footer-actions{display:inline-block;text-align:right;width:100%}.section-actions{position:absolute;top:0;right:0;z-index:1}.section-actions /deep/ a.link,.section-actions /deep/ a.link:hover{padding:0;text-decoration:none}.section-edit-action{font-size:1.5em;position:relative;padding:.1em 0 .1em .5em;cursor:pointer}.section-edit-action.icon-edit{font-size:1.4em}.section-container /deep/ .ui-accordion-header{color:#363636;border:none;background:#fff!important;padding:0 1em}.section-container /deep/ .ui-accordion-content{border:none;padding:1em 2em}.section-container /deep/ .ui-accordion-header /deep/ a[role=tab]{padding:.75em 0;text-decoration:none}.section-container /deep/ .ui-accordion-header.ui-state-active /deep/ a[role=tab]{border-bottom:1px solid #d7d7d7;color:#363636}.section-container /deep/ .section-no-header /deep/ .ui-accordion-header{height:1px}.section-container /deep/ .section-no-header /deep/ .ui-accordion-header.ui-state-active /deep/ a[role=tab]{border-bottom:none}.section-container /deep/ .section-no-header /deep/ .ui-accordion-header .section-edit-action{cursor:pointer!important}:host /deep/ .ui-accordion-header /deep/ .pi.pi-caret-down,:host /deep/ .ui-accordion-header /deep/ .pi.pi-caret-right{font-family:\"SAP icon fonts\";font-size:1.1em;top:.8em;left:.1em;color:#767676;margin-top:0}:host /deep/ .ui-accordion-header.ui-state-disabled /deep/ .fa,:host /deep/ .ui-accordion-header.ui-state-disabled /deep/ .pi{display:none}:host /deep/ .ui-accordion-header /deep/ .pi.pi-caret-right:before{content:\"\\\\e1ed\"}:host /deep/ .ui-accordion-header /deep/ .pi.pi-caret-down:before{content:\"\\\\e1ef\"}`]\n})\nexport class SectionComponent extends BaseComponent\n{\n\n    /**\n     * The title of this section\n     */\n    @Input()\n    title: string;\n\n    /**\n     * The description of this section.\n     */\n    @Input()\n    description: string;\n\n    /**\n     * Should this section be opened at the start. Default is opened.\n     */\n    @Input()\n    opened: boolean = true;\n\n    /**\n     * Whether this section can be closed or not.\n     **/\n    @Input()\n    disableClose: boolean = false;\n\n    /**\n     * Whether this section is in EditState or not.\n     *\n     * When in editing state and we show \"Cancel / Save\" button developer needs use this binding\n     * to control the state.\n     */\n    @Input()\n    editState: boolean = false;\n\n\n    /**\n     * Current Editing mode. Tells the components if its its default behavior or driven by\n     * application using this component.\n     *\n     * {@see EditMode}\n     *\n     */\n    @Input()\n    editMode: EditMode = 'default';\n\n\n    /**\n     * Developer can provide custom Edit action icon that will appear in the right top corner\n     */\n    @Input()\n    actionIcon: string = 'icon-edit';\n\n    /**\n     * Event emitted when the section is fully opened.\n     */\n    @Output()\n    onOpen: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Event emitted when the section is fully closed.\n     */\n    @Output()\n    onClose: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Edit state to broadcast state of current section\n     */\n    @Output()\n    onEdit: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * When in editing state and default buttons are rendered on click broadcast Cancel action\n     */\n    @Output()\n    onCancelAction: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * When in editing state and default buttons are rendered on click broadcast Save action\n     */\n    @Output()\n    onSaveAction: EventEmitter<any> = new EventEmitter();\n\n\n    @Output()\n    onEditingComplete: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Local variable on whether this section is expanded or not.\n     * Differs from 'opened'. opened is an input parameter and it doesn't track\n     * current section expanded state.\n     */\n    expanded: boolean;\n\n    /**\n     * internal accordionTab\n     */\n    @ViewChild('accordionTab')\n    private accordionTab: AccordionTab;\n\n\n    /**\n     * Save reference to developer's defined actions so if we can hide default ones\n     */\n    @ContentChild(SectionActionsComponent)\n    customActions: SectionActionsComponent;\n\n    constructor(protected element: ElementRef, public env: Environment)\n    {\n        super(env);\n        this.editable = false;\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n        // If I have not header, then I can't close the section.\n        if (!this.isHeaderDisplayed()) {\n            this.disableClose = true;\n        }\n\n        // If I can't close the section, then it should default open.\n        if (this.disableClose) {\n            this.opened = true;\n        }\n\n\n        // initialize the expanded state.\n        this.expanded = this.opened;\n    }\n\n    /**\n     * Don't display header area if I don't have title and description.\n     *\n     */\n    private isHeaderDisplayed(): boolean\n    {\n        return (isPresent(this.title) || isPresent(this.description));\n    }\n\n    /**\n     * Css Class that control the look and feel for section component.\n     */\n    aClass(): string\n    {\n        if (!this.isHeaderDisplayed()) {\n            return 'section-no-header';\n        }\n\n        return '';\n    }\n\n    /**\n     * Since we introduced buttons and editState the decision on when to exit editing mode\n     * should be on the developer using this component therefore only startEditing\n     *\n     */\n    onEditAction($event: any): void\n    {\n\n        // when in editing make sure we dont switch state as there can be some Form errors\n        // which needs to be handled by developer and only then change the editState\n        if (!this.editState) {\n            this.editState = !this.editState;\n            let state: string = (this.editState) ? 'inEdit' : 'notInEdit';\n\n            this.onEdit.emit(state);\n            this.open();\n        }\n\n        // prevent the original event from bubbling up. Because the edit icon is inside\n        // the header. If the click even is bubbled up, this event will cause the section to\n        // expand or collapse.\n        if (isPresent($event.event)) {\n            $event.event.stopPropagation();\n            $event.event.preventDefault();\n        }\n    }\n\n    hasDescription(): boolean\n    {\n        return isPresent(this.description);\n    }\n\n    /**\n     * Open this section, if it's already open, will do nothing.\n     */\n    open(event?: any): void\n    {\n\n        if (!this.expanded) {\n            this.accordionTab.toggle(event);\n        }\n    }\n\n    /**\n     * Close this section, if it's already close, will do nothing.\n     */\n    close(event: any): void\n    {\n        if (this.expanded) {\n            this.accordionTab.toggle(event);\n        }\n    }\n\n    /**\n     * Callback to be invoked when accordion is opened\n     *\n     */\n    onSectionOpen(event: any): void\n    {\n        this.expanded = true;\n        this.onOpen.emit('open');\n    }\n\n    /**\n     * Callback to be invoked when accordion is closed\n     *\n     */\n    onSectionClose(event: any): void\n    {\n        this.expanded = false;\n        this.onClose.emit('close');\n    }\n\n\n    /**\n     *\n     * Tells us if we need to render application defined custom actions\n     *\n     */\n    hasCustomActions(): boolean\n    {\n        return isPresent(this.customActions);\n    }\n\n    /**\n     * Emit the editing state back to non-editable\n     */\n    completeEditing(): void\n    {\n        this.editState = false;\n        this.onEditingComplete.emit(this.editState);\n    }\n}\n\n@Component({\n    selector: 'aw-subsection',\n    template: `\n                    <h4 class=\"subsection-title\">{{title}}</h4>\n                    <ng-content></ng-content>\n                 `,\n    styles: ['.subsection-title {color: #363636; }']\n})\nexport class SubSectionComponent\n{\n\n    /**\n     * The title of this sub section\n     */\n    @Input()\n    title: string;\n}\n\n\n/**\n * Defines editing modes for the Sections. Default means we show cancel / save buttons and hide\n * edit icons when in editing. external is driven by application\n */\nexport type EditMode = 'default' | 'external';\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AribaCoreModule} from '@aribaui/core';\nimport {AWStringFieldModule} from '../string/string.module';\nimport {AccordionModule, SharedModule} from 'primeng/primeng';\nimport {SectionActionsComponent, SectionComponent, SubSectionComponent} from './section.component';\nimport {AWHyperlinkModule} from '../hyperlink/hyperlink.module';\nimport {AWButtonModule} from '../button/button.module';\n\n\n@NgModule({\n    declarations: [\n        SectionComponent,\n        SubSectionComponent,\n        SectionActionsComponent\n    ],\n    imports: [\n        CommonModule,\n        AccordionModule,\n        AribaCoreModule,\n        AWStringFieldModule,\n        AWHyperlinkModule,\n        AWButtonModule,\n        SharedModule\n    ],\n\n    entryComponents: [\n        SectionComponent,\n        SubSectionComponent,\n        SectionActionsComponent\n    ],\n    exports: [\n        SectionComponent,\n        SectionActionsComponent,\n        SubSectionComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWSectionModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    Input,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {AWDataTable} from '../aw-datatable';\nimport {Datatable2Component} from '../datatable2.component';\nimport {BooleanWrapper, Environment, isBlank, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../../core/base.component';\nimport {DomHandler} from 'primeng/primeng';\n\n\nexport type DTHAlignment = 'left' | 'center' | 'right';\n\n\n/**\n * DTColumn represent single column including header and its body. Each column has its own\n * rendererTemplate which a entry to this component.\n *\n * Keeping this separate from the datatable where DT is not really aware what it is rendering,\n * it allows us more flexibility in terms of different type of column inheriting from this\n * one.. Such as:\n *  DTRowDetail  column\n *  DTSingleSelection column\n *  DTMultiSelection column\n *\n * This way we don't do IF/THEN/ELSE inside the datatable and trying to create different cases.\n *\n *  Then later on this will let us create additional logic for the pivotal layout. Because DT\n *  does know anything about the type of the column so whatever is added to the DT.columns it\n *  will be rendered.\n *\n *\n *  Columns can be also frozen meaning if the content overflows they dont scroll. To make the\n *  column frozen we need to use [frozen] binding and se it to TRUE plus it requires a [width]\n *  binding to be set (in px).\n *  We need this to be able to properly position the second table which is changed to absolute\n *  positioning.\n *\n *\n *\n */\n@Component({\n    selector: 'aw-dt-column2',\n    template: `<!--\n    To make it more readable Each Column type has its own rendering template instead of putting\n    all this into datatable as this is more responsibility of the column. And the main goal\n    was try to be modular as possible. When There will be different types of columns\n\n    - Regular DTColumn (current implementation),\n    - SelectionColumn (Single/Multi select) - todo,\n    - DetailRow column, then pivotal collumn to render row/column/detail attributes - todo.\n\n    When implementing new column type you just inherit this DTColumnComponent and provide your\n    own rendering template and DT take care of the rest.\n\n    todo: We have SingleSelect, Multiselect rendering template that is Added programatically\n    todo: We have pivotal rendering template\n\n\n-->\n<ng-template #renderingTemplate let-isHeader let-isSubHeader=\"isSubHeader\" let-column=\"column\"\n             let-dataToRender=\"data\"\n             let-columnIndex=\"columnIndex\"\n             let-rowIndex=\"rowIndex\">\n\n    <ng-template *ngIf=\"isHeader\" [ngTemplateOutlet]=\"colHeader\"\n                 [ngTemplateOutletContext]=\"{$implicit: isSubHeader, columnIndex:columnIndex, data: dataToRender,\n                 rowIndex:rowIndex}\">\n    </ng-template>\n\n    <ng-template *ngIf=\"!isHeader\" [ngTemplateOutlet]=\"colBody\"\n                 [ngTemplateOutletContext]=\"{$implicit: column, data:dataToRender,rowIndex:rowIndex}\">\n    </ng-template>\n</ng-template>\n\n\n<!--\n    Templates for header columns. Here we are rendering two types. Header and Subheader that we\n    usually use here as some kind of summary columns. Not really having summary at the bottom like other\n    DT.\n\n    TH column and their text are usually unselectable and most of these were inherited from\n    original PrimeNg DT even not many things got left after we refactor this but the idea is the\n    same.\n\n    Each cell has its dt-cell-def class that sets default styling like font, background, alignment\n    padding, etcs..\n\n\n-->\n<ng-template #colHeader let-isSubHeader let-columnIndex=\"columnIndex\" let-data=\"data\" let-rowIndex=\"rowIndex\">\n\n    <th #headerCell1 [class]=\"headerStyleClass||styleClass\" *ngIf=\"!isSubHeader\"\n        (click)=\"handleHeaderClick($event, headerCell1)\"\n        [ngClass]=\"{'dt-is-default dt-u-unselectable-text' :true,\n                    'dt-cell-def': dt.selectionMode !== 'cell' || (!dt.isOutline() || !dt.pivotalLayout),\n                    'dt-u-sortable': sortable,\n                    'dt-is-active': isSorted(),\n                    'dt-is-hidden': !isVisible}\"\n        [attr.width]=\"width\"\n        [attr.align]=\"align\"\n        [attr.tabindex]=\"sortable ? 1 : null\"\n        [dtMaxWidth]=\"maxWidthPx\"\n    >\n\n        <ng-template [ngIf]=\"dt.headerFilterTemplate && columnIndex === 0 \">\n            <ng-container *ngTemplateOutlet=\"dt.headerFilterTemplate\">\n            </ng-container>\n        </ng-template>\n        <!--\n            when cell are selectable we need two version where one wrap the cell content in div\n        -->\n        <ng-template [ngIf]=\"isHeaderSelectable()\">\n            <ng-container *ngTemplateOutlet=\"selectableHeaderCell; context: {$implicit: this}\">\n            </ng-container>\n        </ng-template>\n\n\n        <ng-template [ngIf]=\"!isHeaderSelectable()\">\n            <ng-container *ngTemplateOutlet=\"nonSelectableHeaderCell; context: {$implicit: this}\">\n            </ng-container>\n        </ng-template>\n    </th>\n\n    <th #headerCell2 [class]=\"headerStyleClass||styleClass\" *ngIf=\"isSubHeader\"\n        [attr.width]=\"width\"\n        [attr.align]=\"align\"\n        [ngClass]=\"{'dt-is-default dt-cell-def dt-sub-header dt-u-unselectable-text':true}\"\n        [dtMaxWidth]=\"maxWidthPx\">\n\n        <span class=\"dt-col-title\" *ngIf=\"dt.showSubHeader && subHeaderTemplate\">\n            <ng-container *ngTemplateOutlet=\"subHeaderTemplate;\n                    context: {$implicit: this, rowData: data, rowIndex: rowIndex}\">\n            </ng-container>\n        </span>\n    </th>\n</ng-template>\n\n\n<!--\n    Template for the body = the TD. For the body and we might want to do the same for header we\n    allow to have calculated body class that comes from the application. So based on the data types\n    you might want to apply different class in order to apply custom styling.\n-->\n<ng-template #colBody let-data=\"data\" let-rowIndex=\"rowIndex\">\n\n    <td #cell [class]=\"dynamicBodyClass(data)\"\n        (click)=\"dt.onCellSelectionChange(cell, this, data)\"\n        [attr.width]=\"width\"\n        [attr.align]=\"align\"\n        [ngClass]=\"{ 'dt-is-default': true,\n        'dt-cell-def': !isCellSelectable(data),\n        'dt-is-hidden': !isVisible}\"\n        [dtMaxWidth]=\"maxWidthPx\"\n        >\n\n        <!--\n            Since we need to support cell selection when we need to draw border around it\n            We are wrapping such sells with div which gives us better flexibility\n        -->\n        <ng-template [ngIf]=\"isCellSelectable(data)\">\n            <ng-container *ngTemplateOutlet=\"selectableBodyCell;\n                        context: {$implicit: this, data: data, rowIndex: rowIndex }\">\n            </ng-container>\n\n        </ng-template>\n\n\n        <ng-template [ngIf]=\"!isCellSelectable(data)\">\n            <ng-container *ngTemplateOutlet=\"nonSelectableBodyCell;\n                        context: {$implicit: this, data: data, rowIndex: rowIndex}\">\n            </ng-container>\n        </ng-template>\n\n    </td>\n</ng-template>\n\n<!--\n    Todo: create better solution instead of using different template create directive that wraps\n    it with the div conditionally\n-->\n<ng-template #selectableHeaderCell let-data=\"data\" let-rowIndex=\"rowIndex\">\n\n    <div class=\"dt-cell-def-selectable\"\n         [ngClass]=\"{'dt-cell-selected': dt.isHeaderSelected(this)}\">\n        <ng-container *ngTemplateOutlet=\"headerCellContent;\n                        context: {$implicit: this, data: data, rowIndex: rowIndex}\">\n        </ng-container>\n    </div>\n</ng-template>\n\n\n<ng-template #nonSelectableHeaderCell let-data=\"data\" let-rowIndex=\"rowIndex\">\n    <ng-container *ngTemplateOutlet=\"headerCellContent;\n                        context: {$implicit: this, data: data, rowIndex: rowIndex}\">\n    </ng-container>\n</ng-template>\n\n\n<ng-template #headerCellContent let-data=\"data\" let-rowIndex=\"rowIndex\">\n    <span class=\"dt-col-title\" *ngIf=\"showColumnLabel && !headerTemplate\">\n                {{label}}\n    </span>\n\n    <span class=\"dt-col-title\" *ngIf=\"showColumnLabel && headerTemplate\">\n                    <ng-container *ngTemplateOutlet=\"headerTemplate;\n                        context: {$implicit: this, rowData: data, rowIndex: rowIndex }\">\n                    </ng-container>\n    </span>\n\n    <span class=\"dt-col-sortable-icon sap-icon icon-sort\" *ngIf=\"sortable\"\n          [ngClass]=\"{'icon-sort-descending': (getSortOrder() == -1),\n                           'icon-sort-ascending': (getSortOrder() == 1)}\">\n    </span>\n</ng-template>\n\n\n<ng-template #selectableBodyCell let-data=\"data\" let-rowIndex=\"rowIndex\">\n    <div class=\"dt-cell-def-selectable\"\n         [ngClass]=\"{'dt-cell-selected': dt.isBodyCellSelected(this, data)}\">\n        <ng-container *ngTemplateOutlet=\"bodyCellContent;\n                        context: {$implicit: this, data: data, rowIndex: rowIndex}\">\n        </ng-container>\n    </div>\n</ng-template>\n\n\n<ng-template #nonSelectableBodyCell let-data=\"data\" let-rowIndex=\"rowIndex\">\n    <ng-container *ngTemplateOutlet=\"bodyCellContent;\n                        context: {$implicit: this, data: data, rowIndex: rowIndex}\">\n    </ng-container>\n</ng-template>\n\n\n<ng-template #bodyCellContent let-data=\"data\" let-rowIndex=\"rowIndex\">\n    <!--\n           when no template is used use our FieldPath to access the object value based on the\n           key binding\n        -->\n    <span class=\"dt-col-cell-data\" *ngIf=\"!bodyTemplate\">\n            {{dt.getValue(data, key)}}\n        </span>\n\n\n    <!--\n        In case application wants to provide their own cell component they use\n        #body ng-template to do so.\n    -->\n    <span class=\"dt-col-cell-data\" *ngIf=\"bodyTemplate\">\n            <ng-container *ngTemplateOutlet=\"bodyTemplate;\n            context: {$implicit: this, rowData: data, rowIndex: rowIndex}\"></ng-container>\n        </span>\n</ng-template>\n`,\n    styles: [`.dt-sortable-col{cursor:pointer}.dt-col-sortable-icon{display:inline-block;margin-left:.125em}th.dt-cell-def{font-weight:400;color:#4a4a4a}th.dt-is-default{background-color:#f2f2f2;white-space:nowrap}th.dt-is-default.dt-cell-def:not(.dt-sub-header){border-bottom-color:#f2f2f2}th.dt-sub-header{background-color:#fff}th .dt-cell-selected{border-color:#58b957}td .dt-cell-selected{border-left-color:#4f9fcf}.dt-root-section .dt-selection-column,.dt-selection-column{width:46px;padding:0 12px}.dt-pivot-layout td.dt-selection-column,th.dt-selection-column{border-right-color:transparent}thead tr:first-child th{border-top-color:transparent}tbody tr:last-child:not(.dt-drag-row-bottom) td{border-bottom-color:transparent}td:first-child,th:first-child{border-left-color:transparent}td:last-child,th:last-child{border-right-color:transparent}tbody .dt-drag-row-top>td{background:linear-gradient(0deg,#fff 0,#fff 97%,#0271d2 100%)}tbody .dt-drag-row-bottom>td{background:linear-gradient(180deg,#fff 0,#fff 97%,#0271d2 100%)}tbody .dt-drag-row-both>td{background:linear-gradient(0deg,#0271d2 0,#fff 3%,#fff 97%,#0271d2 100%)}tbody .dt-row-dragging>td{background-color:#ececec;color:#b9b9b9}tbody .dt-row-dragging .ui-state-active{opacity:.5;cursor:not-allowed}`],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DomHandler]\n\n})\nexport class DTColumn2Component extends BaseComponent implements AfterContentInit\n{\n    /**\n     * Column header label.\n     *\n     * Or you can use headerTemplate to define your own template\n     */\n    @Input()\n    label: string;\n\n    /**\n     * What field name to read from the given object\n     */\n    @Input()\n    key: string;\n\n    /**\n     *\n     * Cell alignment. It inserts regular align attribute to the table cell\n     *\n     */\n    @Input()\n    align: DTHAlignment = 'left';\n\n\n    /**\n     * Retrieves dynamic class based on data and then its added to the table cell TD\n     */\n    @Input()\n    bodyClassFn: (column: DTColumn2Component, item: any) => string;\n\n    /**\n     *\n     * If false applies dt-is-hidden style that hides the column\n     *\n     */\n    @Input()\n    isVisible: boolean = true;\n\n    /**\n     * Marks column as sortable which means sorting icon is added to the header with special\n     * sorting handling\n     */\n    @Input()\n    sortable: any;\n\n    /**\n     * Sorting direction\n     *\n     */\n    @Input()\n    sortOrdering: string = 'descending';\n\n    /**\n     * Tells the template if whether to render a label\n     *\n     */\n    @Input()\n    showColumnLabel: boolean = true;\n\n    /**\n     *\n     * See AWDataTable\n     *\n     */\n    @Input()\n    showSubHeader: boolean = false;\n\n\n    /**\n     * Default static class that is added to the TH into the header. It does not rely on data\n     *\n     */\n    @Input()\n    headerStyleClass: string;\n\n    /**\n     * Default static class that is added to the td into the body. It does not rely on data\n     *\n     */\n    @Input()\n    bodyStyleClass: string;\n\n    /**\n     *\n     * Used together with cell selectionMode to tell which column is selectable\n     *\n     */\n    @Input()\n    selectable: boolean = false;\n\n    /**\n     * Use globally defined HEADER template for current column\n     *\n     */\n    @Input()\n    useGlobalHeader: boolean = true;\n\n    /**\n     * Use globally defined SubHeader template for current column\n     *\n     */\n    @Input()\n    useGlobalSubHeader: boolean = true;\n\n    /**\n     * Use globally defined body template\n     *\n     */\n    @Input()\n    useGlobalBody: boolean = true;\n\n\n    /**\n     * Tells if the column is data column  - if it is rendering data or just a label or some\n     * control\n     *\n     * This is important when calculating a column span and we need to know which columns are or\n     * will be just for selection controls and which holds data\n     */\n    @Input()\n    isDataColumn: boolean = true;\n\n    /**\n     * Identifies column that will not scroll horizontally with other columns. Column is\n     * frozen.\n     *\n     * For such columns that are marked as frozen binding [width] is required.\n     *\n     */\n    @Input()\n    frozen: boolean = false;\n\n    /**\n     * Sets the Max Width for the TD. Even TD does not support we calculate the content width\n     * for each cell and then decide if we need to enlarge the column.\n     *\n     * @Experimantal binding that is currently working if the content of the cell is inline\n     * element where we can control whitespace wrapping in order to find out the real width\n     */\n    @Input()\n    maxWidth: string;\n\n\n    /**\n     * Sets the minWidth on the cell. Again just like maxWidth css properly is not supported on\n     * the table so there is a workaround where we create additional row that sets padding right\n     * and this will prevent the column to collapse under specified width\n     *\n     * todo: still TBD\n     */\n    @Input()\n    minWidth: string;\n\n    /**\n     * Main rendering template used by datatable to render each column.\n     */\n    @ViewChild('renderingTemplate')\n    rendererTemplate: TemplateRef<any>;\n\n    /**\n     * Custom header template. It will override provided label\n     */\n    @ContentChild('header')\n    headerTemplate: TemplateRef<any>;\n\n    /**\n     * Custom subHeader template.\n     */\n    @ContentChild('subHeader')\n    subHeaderTemplate: TemplateRef<any>;\n\n    /**\n     * Custom body template that will override read value from the [key] binding\n     */\n    @ContentChild('body')\n    bodyTemplate: TemplateRef<any>;\n\n\n    /**\n     * Internal...\n     */\n    sortOrder: number;\n    maxWidthPx: number = 0;\n    minWidthPx: number = 0;\n    widthPx: number = 0;\n    widestCell: number = 0;\n\n    /**\n     * Reference to Datatable Implementations\n     */\n    dt: AWDataTable;\n\n\n    constructor(public env: Environment,\n                public domHandler: DomHandler)\n    {\n        super(env);\n    }\n\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n\n        if (isBlank(this.key) && isBlank(this.label)) {\n            throw new Error('Missing required binding: ' +\n                '[key] or [label] bindings must be used at minimum');\n        }\n\n        // To be able to position second DT we require [width] to be set as well\n        if (this.frozen && isBlank(this.width)) {\n            throw new Error('Missing required binding [width]: ' +\n                'when [frozen]=true then [width] binding needs to be specified.');\n        }\n    }\n\n\n    ngAfterContentInit(): void\n    {\n\n    }\n\n    ngAfterViewInit(): void\n    {\n        // need to deffer this and trigger change detection otherwise I get\n        // value was changed after it was checked error\n        // setTimeout(() =>\n        // {\n\n        // });\n    }\n\n    /**\n     *\n     * When cell selectionMode is enabled this method is triggered when we click on header.\n     * It delegates the call to the DT where it toggles currently selected value\n     *\n     */\n    handleHeaderClick(event: any, element: any): void\n    {\n        if (this.isHeaderSelectable()) {\n            this.dt.onHeaderSelectionChange(element, this);\n\n        } else if (this.sortable) {\n            this.sort(event);\n        }\n        event.preventDefault();\n    }\n\n    /**\n     *\n     * Todo: Implement our own sorting mechanism once we extract the sorting logic to its component\n     *\n     */\n    sort(event: any)\n    {\n        if (!this.sortable) {\n            return;\n        }\n        let targetNode = event.target;\n        if (this.domHandler.hasClass(targetNode, 'dt-u-sortable') ||\n            this.domHandler.hasClass(targetNode, 'dt-col-title') ||\n            this.domHandler.hasClass(targetNode, 'dt-col-sortable-icon'))\n        {\n\n            if (isPresent(this.dt.sortColumn) && this.dt.sortColumn.key === this.key) {\n                this.sortOrder = this.sortOrder * -1;\n                this.sortOrdering = this.dt.sortOrderingForNumber(this.sortOrder);\n\n            } else {\n                this.dt.sortColumn = this;\n\n            }\n            this.dt.dataSource.state.sortKey = this.key;\n            this.dt.dataSource.state.sortOrder = this.dt.sortOrderingForString(this.sortOrdering);\n\n            this.dt.sortSingle();\n        }\n        this.dt.updateDataToRender();\n    }\n\n    /**\n     * Calculated style class based on data\n     *\n     *\n     */\n    dynamicBodyClass(item: any): boolean\n    {\n        let dynClass = isPresent(this.bodyClassFn)\n            ? this.bodyClassFn.apply(this.dt.context, [this, item]) : '';\n\n        if (isPresent(this.bodyStyleClass)) {\n            dynClass += ' ' + this.bodyStyleClass;\n\n        } else if (isPresent(this.styleClass)) {\n            dynClass += ' ' + this.styleClass;\n        }\n\n        return dynClass;\n    }\n\n\n    isRowSelectable(item: any): boolean\n    {\n        if (isPresent(this.dt.isRowSelectable)) {\n            return this.dt.isRowSelectable(item);\n        }\n\n        return false;\n    }\n\n    isCellSelectable(item: any): boolean\n    {\n        return this.dt.selectionMode === 'cell' && this.isRowSelectable(item) && this.selectable;\n\n    }\n\n\n    isHeaderSelectable(): boolean\n    {\n        return this.dt.selectionMode === 'cell' && this.selectable;\n\n    }\n\n\n    getSortOrder()\n    {\n        let order = 0;\n\n        if (isPresent(this.dt.sortColumn) && this.key === this.dt.sortColumn.key) {\n            order = this.dt.sortColumn.sortOrder;\n        }\n        return order;\n    }\n\n    isSorted()\n    {\n        if (!this.sortable) {\n            return false;\n        }\n        return isPresent(this.dt.sortColumn) && this.key === this.dt.sortColumn.key;\n    }\n\n    initialize(table: AWDataTable): void\n    {\n        this.dt = table;\n\n        if (isPresent(this.dt.initialSortKey) && this.dt.initialSortKey === this.key) {\n            this.sortable = true;\n            this.sortOrder = this.dt.sortOrderingForString(this.dt.initialSortOrder);\n            this.dt.sortColumn = this;\n        }\n\n        if (isBlank(this.bodyTemplate) && this.useGlobalBody) {\n            this.bodyTemplate = this.dt.bodyTemplate;\n        }\n\n        if (isBlank(this.headerTemplate) && this.useGlobalHeader) {\n            this.headerTemplate = this.dt.headerTemplate;\n        }\n\n        if (isBlank(this.subHeaderTemplate) && this.useGlobalSubHeader) {\n            this.subHeaderTemplate = this.dt.subHeaderTemplate;\n        }\n\n        if (isBlank(this.bodyClassFn)) {\n            this.bodyClassFn = this.dt.bodyClassFn;\n        }\n\n        this.maxWidthPx = this.widthToPx(this.maxWidth);\n        this.minWidthPx = this.widthToPx(this.minWidth);\n        this.widthPx = this.widthToPx(this.width);\n    }\n\n    /**\n     * This method is called at the end of the view init cycle from the dt.ngAfterViewChecked.\n     *\n     * In case we use MaxWidth directive we set new width once for all columsn\n     */\n    postInitialize(myIndex: number): void\n    {\n        const colIndex = myIndex + 1;\n        let table;\n\n        if (this.dt.hasFrozenColumns()) {\n            table = (<Datatable2Component>this.dt).el\n                .nativeElement.querySelector('.dt-body-frozen table');\n        } else {\n            table = (<Datatable2Component>this.dt).el.nativeElement.querySelector('table');\n        }\n\n\n        if (this.widestCell > 0) {\n            let all = table.querySelectorAll('tr th:nth-child(' + colIndex + '), ' +\n                'tr td:nth-child(' + colIndex + ')').forEach((node: any) =>\n            {\n                node.style.width = this.widestCell + 'px';\n            });\n        }\n    }\n\n\n    /**\n     * You either use this binding directly and say its datacolumn or when there is a [key]\n     * biding we know it refers to some field.\n     *\n     */\n    isValueColumn(): boolean\n    {\n        return (isPresent(this.isDataColumn) && BooleanWrapper.isTrue(this.isDataColumn)) ||\n            isPresent(this.key);\n    }\n\n    /**\n     * When we are in outline mode  we need to also indend each selection control accordingly.\n     *\n     * indent - 1 > only offset with\n     * indent\n     */\n    indentForControl(cell: any, level: number): any\n    {\n        if (this.dt.isOutline() && level > 0 && cell.offsetWidth > 0\n            && isPresent(cell.nextElementSibling))\n        {\n\n            let outlineNodePadding =\n                parseInt(getComputedStyle(cell.nextElementSibling).paddingLeft) || 0;\n\n            // 1st level is pushed as root\n            if (this.dt.pushRootSectionOnNewLine) {\n                return (level === 1) ? null : (this.dt.indentationPerLevel * level)\n                    - outlineNodePadding;\n            } else {\n                return (this.dt.indentationPerLevel * level) + outlineNodePadding;\n            }\n        }\n        return null;\n    }\n\n\n    /**\n     *\n     * Internal\n     */\n    private widthToPx(width: string): number\n    {\n        let px;\n        if (isPresent(width)) {\n            if (width.indexOf('%') > 0) {\n                const nonPc = parseFloat(width) / 100;\n                px = nonPc * (<Datatable2Component>this.dt).el.nativeElement.offsetWidth;\n            } else {\n                px = parseFloat(width);\n            }\n        }\n\n        return px;\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component} from '@angular/core';\n\n/**\n * An datatable header area.\n *\n * See {@link DataTableComponent} for more explanation.\n */\n@Component({\n    selector: 'aw-dt-header2',\n    template: '<ng-content></ng-content>'\n})\nexport class DTHeaderComponent2\n{\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {DomHandler} from 'primeng/primeng';\nimport {DTColumn2Component} from '../dt-column.component';\nimport {AWDataTable} from '../../aw-datatable';\n\n\n/**\n *\n * Custom column implementation to render detail row spaning its column across whole table width.\n *\n *\n */\n@Component({\n    selector: 'aw-dt-detail-column',\n    template: `<!--\n    Renders application defined detail column. This template just renders a detail row and\n    not expansion control. This is implemented by different DtColumn implementation and its added\n    (will be) added programmatically during column initialization\n-->\n<ng-template #renderingTemplate let-column=\"column\" let-rowData=\"data\">\n\n    <tr #detailRowElement class=\"dt-body-row dt-detail-row\">\n\n        <td *ngIf=\"dt.hasInvisibleSelectionColumn()\" width=\"1px\"></td>\n        <td *ngIf=\"visibleLeadingCols() > 0\" colspan=\"visibleLeadingCols()\" width=\"1px\">\n            &nbsp;&nbsp;\n        </td>\n        <td [attr.colspan]=\"dt.startOfFirstDataColumn\" [class]=\"dynamicBodyClass(rowData)\"\n            [ngClass]=\"{ 'dt-is-default dt-cell-def': true}\">\n\n            <ng-container\n                *ngTemplateOutlet=\"bodyTemplate; context:{$implicit: this, rowData:rowData}\">\n            </ng-container>\n        </td>\n    </tr>\n</ng-template>\n\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DomHandler]\n\n})\nexport class DTDetailRowComponent extends DTColumn2Component\n{\n\n    /**\n     * Defines current visibility for current data row using method reference\n     *\n     */\n    @Input()\n    isVisibleFn: (column: DTColumn2Component, item: any) => boolean;\n\n\n    /**\n     *\n     * tells if we need to render a line between item row and its detail\n     *\n     */\n    @Input()\n    showRowLine: boolean = true;\n\n\n    constructor(public env: Environment, public domHandler: DomHandler)\n    {\n        super(env, domHandler);\n    }\n\n\n    ngOnInit(): void\n    {\n        // just to get around the check in parent class\n        this.key = '';\n        super.ngOnInit();\n    }\n\n\n    /**\n     * Check if we need to keep some leading TDs\n     *\n     */\n    visibleLeadingCols(): number\n    {\n        return this.dt.numberOfColsBeforeData - (this.dt.hasInvisibleSelectionColumn() ? 1 : 0);\n    }\n\n\n    /**\n     *\n     * Check if we can show detail row/column using either [isVisible] or [isVisibleFn] bindings.\n     * Here can hook on application level custom method to decide if current item has detail row\n     * or not\n     *\n     * Or we can use isVisible=true to tell all row have detail row\n     *\n     */\n    showDetailRow(item: any): boolean\n    {\n        let isVisible = this.isVisible;\n        if (isPresent(this.isVisibleFn)) {\n            isVisible = this.isVisibleFn.apply(this.dt.context, [this, item]);\n        }\n        return isVisible;\n    }\n\n\n    initialize(table: AWDataTable): void\n    {\n        super.initialize(table);\n\n        this.isVisible = !this.dt.isOutline() || !this.dt.pivotalLayout;\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, forwardRef, Inject, ViewEncapsulation} from '@angular/core';\nimport {Datatable2Component} from '../../datatable2.component';\nimport {Environment} from '@aribaui/core';\nimport {DomHandler} from 'primeng/primeng';\nimport {DTColumn2Component} from '../dt-column.component';\n\n\n/**\n *\n *\n *\n *\n */\n@Component({\n    selector: 'aw-dt-detail-column-expand',\n    template: `<!--\n   Special column that renders expand/collapse control for detail row when detail row is enabled.\n\n   Just like for the other column it renders header section as well as body section with\n   expand control to toggle the expansion\n\n-->\n<ng-template #renderingTemplate let-isHeader let-isSubHeader=\"isSubHeader\" let-column=\"column\"\n             let-dataToRender=\"data\" let-columnIndex=\"columnIndex\" let-rowIndex=\"rowIndex\">\n\n\n    <ng-template [ngIf]=\"isHeader && !isSubHeader\">\n        <th #headerCell1 [class]=\"headerStyleClass||styleClass\"\n            class=\"dt-row-cell-expando\"\n            [ngClass]=\"{'dt-is-default dt-u-unselectable-text dt-cell-def' :true,\n                        'dt-det-row-expanded': dt.detailRowExpansionState.isExpanded(dataToRender)}\">\n        </th>\n\n    </ng-template>\n\n    <ng-template [ngIf]=\"!isHeader && !isSubHeader\">\n        <td #cell\n            class=\"dt-row-cell-expando\"\n            [ngClass]=\"{ 'dt-is-default': true,\n                    'dt-cell-def': !isCellSelectable(dataToRender),\n                    'dt-det-row-expanded': dt.detailRowExpansionState.isExpanded(dataToRender),\n                    'dt-det-row-with-ln' : dt.rowDetailColumn.showRowLine}\">\n\n            <span (click)=\"toggleExpansion($event, dataToRender)\"\n                  class=\"dt-det-row-expand sap-icon\"\n                  [ngClass]=\"calculateStyleClass(dataToRender)\">\n\n            </span>\n\n        </td>\n\n    </ng-template>\n\n\n</ng-template>\n\n`,\n    styles: [`.dt-row-cell-expando{width:14px;text-align:right;padding:17px 5px 17px 17px;border-right-color:transparent}.dt-row-cell-expando .dt-det-row-expand{cursor:pointer;line-height:21px}td.dt-det-row-expanded:not(.dt-det-row-with-ln),td.dt-det-row-expanded:not(.dt-det-row-with-ln)~td{border-bottom-color:transparent}`],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DomHandler]\n\n})\nexport class DTDetailRowExpanderComponent extends DTColumn2Component\n{\n\n    constructor(public env: Environment, public domHandler: DomHandler)\n    {\n        super(env, domHandler);\n\n        // we dont want to show the row/column unless application says so\n        this.isVisible = false;\n\n        // default width of the selection control\n        this.width = '45px';\n    }\n\n\n    ngOnInit(): void\n    {\n        // just to get around the check in parent class\n        this.key = '';\n\n        super.ngOnInit();\n    }\n\n    toggleExpansion(event: any, item: any): void\n    {\n        this.dt.detailRowExpansionState.toggle(item);\n        event.stopPropagation();\n    }\n\n    calculateStyleClass(item: any): string\n    {\n        return this.dt.detailRowExpansionState.isExpanded(item) ?\n            'icon-slim-arrow-down' : 'icon-slim-arrow-right';\n    }\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\n\n\nimport {TemplateRef} from '@angular/core';\nimport {SelectionMode} from './datatable2.component';\nimport {DTColumn2Component} from './column/dt-column.component';\n\nimport {DetailRowExpansionState, DT2DataSource} from './datatable2-data-source';\nimport {OutlineState} from '../outline';\nimport {DTDetailRowComponent} from './column/detail-row/dt-detail-row.component';\n\n\nexport const DragEvents: string[] = ['mousedown', 'dragstart', 'dragover', 'dragenter', 'dragleave',\n    'drop', 'dragend'];\n\nexport enum DragDirection\n{\n    None = 'none',\n    Up = 'dt-drag-row-top',\n    Down = 'dt-drag-row-bottom',\n    Middle = 'dt-drag-row-both'\n}\n\n\nexport enum DropPosition\n{\n    Before = 'before',\n    After = 'after',\n    Into = 'into'\n}\n\n\n/**\n * Abstract type that is sharable among dependant DT object such as Columns, DataSources,\n * Directives to be able to communicate back to the datatable mainly to avoid circular dependency\n */\nexport interface AWDataTable\n{\n\n    /**\n     * Allows you to pass your own datasource to override default one. Also when dataSource is\n     * used the destinationClass or list are ignored\n     */\n    dataSource: DT2DataSource;\n\n    /**\n     * Manages outline states for Datatables using outline control\n     */\n    outlineState: OutlineState;\n\n\n    /**\n     * In case we have detail row remember its expansion state\n     */\n    detailRowExpansionState: DetailRowExpansionState;\n\n    /**\n     * What column is used as first for sorting\n     */\n    initialSortKey: string;\n\n    /**\n     * Allow to change sorting direction\n     */\n    initialSortOrder: string;\n\n    /**\n     *\n     * Tells DT if we support cell selection or row based selection which is regular DT.\n     *\n     */\n    selectionMode: SelectionMode;\n\n    /**\n     * In case of single or multiselection show controls\n     *\n     */\n    showSelectionColumn: boolean;\n\n    /**\n     * Tells if we want to render one selection control in the header to select all the\n     * rows. Applicable for multiselection\n     *\n     */\n    showSelectAll: boolean;\n\n    /**\n     * Identify if row or cell is selectable based on data\n     */\n    isRowSelectable: (item: any) => boolean;\n\n\n    /**\n     * Each DTColumn have have its own template to provide content for header, subheader and\n     * body but if those template are identical there would be too much duplicate code to replicate\n     * for each column the same. Therefore we have these global templates that you can declare\n     * on DT level (not under columns) and content of these template will be used for each column\n     *\n     * You can mix them as well. You can have global templates as well as template on the Column\n     * level which would override the global one\n     *\n     */\n    headerTemplate: TemplateRef<any>;\n\n    /**\n     * See headerTemplate for more details\n     */\n    subHeaderTemplate: TemplateRef<any>;\n\n    /**\n     * See headerTemplate for more details\n     */\n    bodyTemplate: TemplateRef<any>;\n    /**\n     * See headerTemplate for more details\n     */\n    headerFilterTemplate: TemplateRef<any>;\n\n    /**\n     *\n     * Render a subHeader template if present\n     *\n     */\n    showSubHeader: boolean;\n\n    /**\n     * This is global style function that can be bound to table and read by each column.\n     * The same you can see on the DTColumn\n     */\n    bodyClassFn: (column: DTColumn2Component, item: any) => string;\n\n\n    /**\n     * Context is important when we execute any function that is passed in as input. We need to\n     * give option to be executed within the context (this) of the code using this component.\n     *\n     */\n    context: any;\n\n    // Outline needed properties\n\n    /**\n     * Pushes outlineFor section on the new line and 2nd level child make it root for this\n     * section\n     */\n    pushRootSectionOnNewLine: boolean;\n\n    /**\n     * You can change default indentation for the outline nodes\n     *\n     */\n    indentationPerLevel: number;\n\n    /**\n     * When active applies special styles to the DT. Later on once pivot is implemented this will\n     * also add additional behavior to the DT\n     *\n     */\n    pivotalLayout: boolean;\n\n\n    /**\n     * When sorting is enabled this is current active column being sorted.\n     *\n     *  - we dont support multiple column sorting\n     */\n    sortColumn: DTColumn2Component;\n\n    /**\n     * Reference to aw-dt-detail-column if present detail row is rendered for specified\n     * items\n     */\n    rowDetailColumn: DTDetailRowComponent;\n\n    /**\n     * Used for spaning calculation or for the detail row to identify correct number of columns\n     * to span, when they are some non-data column (expansion control, single/multi selection)\n     */\n    numberOfColsBeforeData: number;\n\n\n    /**\n     *  what is the index of first data columns\n     */\n    startOfFirstDataColumn: number;\n\n\n    /**\n     * Triggered when in cell selection mode\n     *\n     */\n    onCellSelectionChange(cell: any, column: DTColumn2Component, item: any): void;\n\n\n    /**\n     * Triggered by column whe header is selected. Current we assume the only one header can be\n     * selected at the time.\n     *\n     */\n    onHeaderSelectionChange(cell: any, column: DTColumn2Component): void;\n\n\n    onHandleRowClicked(event: any, item: any): void;\n\n    /**\n     *\n     * Handles row selection logic where if the item is found inside the selected items, then\n     * its removed otherwise its added.\n     *\n     * Todo: Sync & refactor this with dt.onCellSelectionChange - pretty similar code\n     *\n     * We want to have rowToggle as well as we will have rowSelect or somethign similar to\n     * identify we are dealing with multiselect and single selection\n     */\n    onRowToggle(event: any, item: any): void;\n\n\n    /**\n     *\n     * Handles row single selection\n     *\n     */\n    onRowSelect(event: any, item: any): void;\n\n    /**\n     * When dealing with outline (tree) we need to make sure when we select some root item it\n     * will automatically also select all its children\n     *\n     */\n    onHandleOutlineRowToggleToChildren(currentItem: any, isSelected: boolean): void;\n\n\n    /**\n     *\n     * Just like for onHandleOutlineRowToggleToChildren the same behavior needs to be applied for\n     * towards up.\n     *\n     *\n     */\n    oHandleOutlineRowToggleToParent(currentItem: any, isSelected: boolean): void;\n\n\n    /**\n     *\n     * Called by D&D row directive to update this TD that row reordering needs to happen. We\n     * receive an INDEX of row we are dragging and new drop position, plus information if it\n     * needs to be dropped before new row position or after.\n     *\n     */\n    onDnDRowDrop(origPos: number, newPos: number, dropPos: DropPosition): void;\n\n\n    /**\n     *\n     * When detail row is combined with outline control we need make sure that we maintain the\n     * correct state for items that are eligible for detail row\n     *\n     * In this specific case the detail row does not have its own expander but utilizing the\n     * outlineControl\n     */\n    onOutlineExpandChange(event: any): void;\n\n\n    /**\n     * Support for single column sorting\n     *\n     *\n     */\n    sortSingle(): void;\n\n    /**\n     * When data changes, either they are lazily fetched or @Input LIST is updated we need\n     * resort out data based on current state and update internal list dataToRender so new\n     * data can re-rendered + triggers event valueChange\n     *\n     */\n    handleDataChange(): void;\n\n    updateDataToRender(datasource?: any): void;\n\n\n    /**\n     * Select or unselect all rows. Used by header checkbox\n     *\n     */\n    toggleAllColumns(event: any): void;\n\n    /**\n     * More like utility methods to translate string<-->number value for sorting\n     *\n     * Currently used only by DTColumn. We might want to move this its own component for\n     * headerSort and ordering\n     *\n     */\n    sortOrderingForString(direction: string): number;\n\n    sortOrderingForNumber(direction: number): string;\n\n    visibleColumns(): DTColumn2Component[];\n\n    hasFrozenColumns(): boolean;\n\n    /**\n     * Placeholder functionality for the single/multiselect functionality where we need to track if\n     * we support selection plus how many column it occupies and if the selection controls are\n     * visible or hidden.\n     */\n    hasInvisibleSelectionColumn(): boolean;\n\n\n    /**\n     *\n     * Placeholder to identify if they are non-value column\n     *\n     */\n    hasLeadingSelectColumn(): boolean;\n\n\n    /**\n     * To compare the data if we use deep object equality and this is used within this class as\n     * well as from the DTColumn to conditionally add class which select the cell\n     *\n     * We might want to change to check only a key of the object some unique identifier.\n     */\n    isHeaderSelected(item: DTColumn2Component): boolean;\n\n    /**\n     *\n     * Check if the specific cell is selected. We need two points to identify if cell is selected\n     * the actual Item that could represent whole row and Column\n     *\n     */\n    isBodyCellSelected(column: DTColumn2Component, item: any): boolean;\n\n    /**\n     *  Check if the given item is among the selected ones\n     *\n     */\n    isRowSelected(item: any): boolean;\n\n    /**\n     *\n     * When [children] binding is present then it means we need to render it as a tree\n     *\n     */\n    isOutline(): boolean;\n\n\n    /**\n     *\n     * Defaults the checkbox to either selected and not selected depended on internal state\n     *\n     */\n    isToggleAllColumnSelected(): boolean;\n\n    isToggleAllColumnDisabled(): boolean;\n\n\n    /**\n     *\n     * Uses are field path utility class to retrieve data from object\n     *\n     */\n    getValue(data: any, field: string): any;\n\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    assert,\n    Entity,\n    isBlank,\n    isEntity,\n    isPresent,\n    isString,\n    ListWrapper,\n    MapWrapper\n} from '@aribaui/core';\nimport {Observable} from 'rxjs';\nimport {DataSource, DSInitParams} from '../../core/data/data-source';\nimport {DataProvider} from '../../core/data/datatype-registry.service';\nimport {DataFinder, DataFinders, QueryType} from '../../core/data/data-finders';\nimport {DataProviders} from '../../core/data/data-providers';\nimport {DTColumn2Component} from './column/dt-column.component';\nimport {AWDataTable, DropPosition} from './aw-datatable';\n\n\n/**\n * Concrete DataSource implementation for Datatable which defines state and column definition that\n * can programmatically modify rendered columns (if provided) and method for inserting and\n * and deleting records;\n *\n * All operations dealing with data use Observable<T> and instant() method to retrieve current\n * state is not implemented.\n *\n *\n */\nexport class DT2DataSource extends DataSource\n{\n    static readonly MaxLimit = 100;\n\n    /**\n     * Matching dataProviders and finders\n     */\n    dataProvider: DataProvider<any>;\n    dataFinder: DataFinder;\n\n    /**\n     * Keep track of current datatable state\n     */\n    state: Datatable2State;\n    initialized = false;\n    debugTime: number;\n    /**\n     * Defines object being rendered\n     */\n    private entity: EntityDef2;\n\n    constructor(public dataProviders?: DataProviders, public finders?: DataFinders)\n    {\n        super(dataProviders, finders);\n\n        this.state = Datatable2State.create();\n\n        this.debugTime = new Date().getTime();\n    }\n\n\n    init(...args: any[]): void\n    {\n        if (isBlank(args) || args.length !== 1 && !isDTInitParams(args[0])) {\n            throw new Error('You need to initialize DS with (DSChooserInitParams)');\n        }\n        let init: DTDSInitParams = args[0];\n\n        // use existing or find best match for dataProvider\n        this.dataProvider = isPresent(init.dataProvider) ? init.dataProvider\n            : this.dataProviders.find(init.obj);\n\n        // use existing or find best match for dataFinder\n        this.dataFinder = isPresent(init.dataFinder) ? init.dataFinder\n            : this.finders.find(this.dataProvider, init.queryType);\n\n        assert(isPresent(this.dataProvider) && isPresent(this.dataFinder),\n            'DataSource incorrectly initialized. (DataProvider, DataFinder) missing. ');\n\n        this.dataFinder.lookupKey = init.lookupKey;\n        if (isBlank(init.state)) {\n            this.state = new Datatable2State();\n        } else {\n            this.state = init.state;\n        }\n\n        this.initialized = true;\n    }\n\n\n    /**\n     * Triggers async fetch data request and result is given back using dataProvider.dataChanges\n     *\n     */\n    fetch(withParams?: Datatable2State): void\n    {\n        let params = null;\n        if (isPresent(withParams)) {\n            params = new Map().set('offset', withParams.offset)\n                .set('limit', withParams.limit)\n                .set('orderby', withParams.sortKey)\n                .set('selector', withParams.sortOrder);\n        }\n\n        this.dataProvider.fetch(params).subscribe((result: any[]) =>\n        {\n            if (withParams.offset > 0) {\n                let incrData = [...this.dataProvider.dataChanges.getValue(), ...result];\n                this.dataProvider.dataChanges.next(incrData);\n            } else {\n                this.dataProvider.dataChanges.next(result);\n            }\n        });\n    }\n\n\n    /**\n     * Component uses this method to open up continuous stream to listen for any changes which\n     * need to be reflected on the UI.\n     *\n     * Dont forget to unsubscribe when component is destroyed.\n     */\n    open<T>(): Observable<T[]>\n    {\n        return this.dataProvider.dataChanges.asObservable();\n    }\n\n    close(): void\n    {\n        this.dataProvider = null;\n        this.dataFinder = null;\n    }\n\n\n    /**\n     * If CRUD is enabled we delegate calls to DataProvider that is responsible to tell the\n     * dataProvider.dataChanges that are new data. If not enabled we have default implementation\n     * which works with local array\n     *\n     */\n    insert(object: any): void\n    {\n        if (this.dataProvider.canCRUD()) {\n            this.dataProvider.insert(object);\n\n        } else {\n            this.dataProvider.offScreenData.push(object);\n            this.dataProvider.dataChanges.next(this.dataProvider.offScreenData);\n        }\n    }\n\n\n    /**\n     * Please see {@link insert} method\n     *\n     */\n    remove(object: any): void\n    {\n        if (this.dataProvider.canCRUD()) {\n            this.dataProvider.remove(object);\n\n        } else {\n            ListWrapper.removeIfExist(this.dataProvider.offScreenData, object);\n            this.dataProvider.dataChanges.next(this.dataProvider.offScreenData);\n        }\n    }\n\n    /**\n     *\n     * Provides access to DataFinder which can accept either plain string or Map.\n     *\n     * To be able to provide correct input we need to ask DataFinder if it supports FullText like\n     * type query or Predicate. In case of Predicate we build the Map with different key/value\n     * pairs\n     *\n     *\n     */\n    find(pattern?: any): void\n    {\n        if (isBlank(pattern) || pattern.length === 0) {\n            // if we received empty string return orginal list\n            this.fetch(this.state);\n            return;\n        }\n\n        let searchParam: any = pattern;\n        if (this.dataFinder.accepts(this.dataProvider, QueryType.Predicate)) {\n            searchParam = new Map().set('query', pattern).set('limit', DT2DataSource.MaxLimit);\n\n            if (isPresent(this.state.sortKey)) {\n                searchParam.set('orderby', this.state.sortKey);\n            }\n\n            if (isPresent(this.state.sortKey)) {\n                searchParam.set('selector', this.state.sortOrder);\n            }\n        } else {\n            assert(isString(pattern), 'Cannot pass non-string value to FullText Finder');\n        }\n\n        this.dataFinder.match<any>(searchParam).subscribe((result: any[]) =>\n        {\n            this.dataProvider.dataChanges.next(result);\n        });\n    }\n\n\n    /**\n     *\n     * Data source delegates the responsibility to the given data provider which needs to implement\n     * specific sorting mechanism\n     *\n     * Todo: Extend to sort by multiple columns\n     *\n     */\n    sort(key: string, sortOrder: number): void\n    {\n        if (isBlank(this.dataProvider.data()) || this.dataProvider.data().length === 0) {\n            return;\n        }\n        this.state.sortKey = key;\n        this.state.sortOrder = sortOrder;\n        this.fetch(this.state);\n    }\n\n    /**\n     *\n     * Persist db state\n     *\n     */\n    updateState(offset: number, sortField: string, sOrder: number): void\n    {\n        this.state.offset = offset;\n        this.state.sortKey = sortField;\n        this.state.sortOrder = sOrder;\n    }\n\n\n    /**\n     *\n     * reshuffles current array based on new row D&D result.\n     *\n     * Since there is a difference if we move item from bottom or from the top and then accordingly\n     * highlighting a space between rows. We need to reflect this in here as well.\n     *\n     * UseCase 1:\n     *\n     * 1. You can grab item with index 0 and move it down so that you can see a dropping line\n     * between row with index 2 - 3\n     *\n     * 2. In this case splice() starts from position 2 and insert all elements after 2\n     *      splice(start: number, deleteCount: number, ...items: T[]): T[];\n     *\n     * 3. no need to update newPos\n     *\n     * UseCase 2:\n     *\n     * 1. You can grab item with index 0 and move all the way down of the DT and now move the\n     * row toward TOP and space between rows with index 2 - 3 is highlighted again.\n     *\n     * 2. Here is the difference, before we highlighted row #2 with line at the bottom, now\n     * it seems the same but its highlighted row #3 with line at the TOP.\n     *\n     * * This is the reason whey we need to do newPos -= 1 or newPos += 1; depending our direction\n     * where where the line between rows is created.\n     *\n     *\n     * We don't need any complicated calculation trying to find out if we are on one half of the row\n     * or second half and based on this try to apply certain style. This would not give so much\n     * space if we want drop row into the row. And the calculation with coordinates woudl be too\n     * complicated.\n     *\n     * We simply remember the direction we are moving and based on this we apply style to\n     * to create a line at the TOP if we are going upwards or bottom otherwise.\n     *\n     *\n     */\n    reorderRows(origPos: number, newPos: number, dropPos: DropPosition): void\n    {\n        let array = this.dataProvider.data().slice();\n\n        // take something from top and drag&drop under\n        if (newPos > origPos && dropPos === DropPosition.Before && newPos < array.length) {\n            newPos -= 1;\n\n            // take something from bottom and drag&drop above\n        } else if (newPos < origPos && dropPos === DropPosition.After && newPos >= 0) {\n            newPos += 1;\n        }\n\n        array.splice(newPos, 0, ...array.splice(origPos, 1)[0]);\n        this.dataProvider.dataChanges.next(array);\n    }\n\n}\n\n/**\n * Entity definition to be used to initialize programmatically columns\n */\nexport interface EntityDef2\n{\n    propertyKeys: string[];\n\n    defaultFormatter: (key: any) => string;\n\n    displayStringForKey: (key: string) => string;\n\n    defaultAlignmentForKey: (key: string) => string;\n}\n\n/**\n * Keeps current datatable state the state which drivers the way while fetching the data as well\n * encapsulate set of properties that needs to be persistet in order to recover a state after e.g.\n * browser refresh\n *\n *\n * todo: Create methods to convert this state from and to JSON for easier serialization\n */\nexport class Datatable2State\n{\n    public static readonly Ascending = 1;\n    public static readonly Descending = -1;\n\n    /**\n     * Properties for paging and fetching\n     */\n    offset: number = 0;\n    limit: number = 0;\n\n    /**\n     * Identifies default value that is used to render N number of rows in non-fullscreen\n     * mode\n     *\n     */\n    displayLimit: number = 0;\n\n    /**\n     * Current sorting field\n     */\n    sortKey: string;\n\n    /**\n     * Sorting order of the sort field. DataTable support sorting for multiple column but we\n     * dont persist it now. Maybe in the future\n     */\n    sortOrder: number = Datatable2State.Ascending;\n\n    /**\n     * If we are using global filter for current datatable then save it here\n     */\n    currentSearchQuery: string = '';\n\n    /**\n     * Current if any preselected filter\n     */\n    currentFilter: any;\n\n    /**\n     * Represent current selection depending on selection mode.\n     *\n     * Current selection used both for row selection and cell selection. Row selection is used when\n     * SingleSelect and MultiSelect once we implement this.\n     *\n     */\n    selection: any;\n\n\n    /**\n     * When header selection is enabled it captures currently selected column\n     */\n    headerSelection: DTColumn2Component;\n\n\n    /**\n     *\n     *  Holds current state of the outline tree if used\n     *\n     */\n    outlineState?: Map<any, boolean>;\n\n    /**\n     *\n     *  Holds current state of the detail rows if used\n     *\n     */\n    detailRowExpandState?: Map<any, boolean>;\n\n\n    constructor()\n    {\n        this.outlineState = new Map<any, boolean>();\n        this.detailRowExpandState = new Map<any, boolean>();\n    }\n\n    static create(offset: number = 0, limit: number = 15, displayLimit: number = 5,\n                  sortField: string = '', sOrder: number = 0, searchQuery?: string, filter?: any,\n                  outlineState: Map<any, boolean> = new Map<any, boolean>(),\n                  detailRowState: Map<any, boolean> = new Map<any, boolean>()): Datatable2State\n    {\n        let s = new Datatable2State();\n        s.offset = offset;\n        s.limit = limit;\n        s.displayLimit = displayLimit;\n        s.sortKey = sortField;\n        s.sortOrder = sOrder;\n        s.currentSearchQuery = searchQuery;\n        s.currentFilter = filter;\n        s.outlineState = outlineState;\n        s.detailRowExpandState = detailRowState;\n\n        return s;\n    }\n\n    static fromJSON(data: string): Datatable2State\n    {\n        let state: DTStateSerializableHelper = JSON.parse(data);\n        let ds = new Datatable2State();\n        ds.offset = state.offset;\n        ds.limit = state.limit;\n        ds.displayLimit = state.displayLimit;\n        ds.sortKey = state.sortKey;\n        ds.sortOrder = state.sortOrder;\n        ds.currentSearchQuery = state.currentSearchQuery;\n        ds.outlineState = MapWrapper.createFromAnyMap<boolean>(state.outlineState);\n        ds.detailRowExpandState = MapWrapper.createFromAnyMap<boolean>(state.detailRowExpandState);\n\n        return ds;\n    }\n\n\n    static toJSON(data: Datatable2State): string\n    {\n        let toConvert: DTStateSerializableHelper = {\n            offset: data.offset,\n            limit: data.limit,\n            displayLimit: data.displayLimit,\n            sortKey: data.sortKey,\n            sortOrder: data.sortOrder,\n            currentSearchQuery: data.currentSearchQuery,\n            outlineState: MapWrapper.toAnyMap(data.outlineState),\n            detailRowExpandState: MapWrapper.toAnyMap(data.detailRowExpandState)\n\n        };\n        return JSON.stringify(toConvert);\n    }\n\n}\n\n\n/**\n * This needs to go to DTDataSource to keep and manage the state of the detail row. The idea is\n * simple we have a map holding item reference as a key and boolean value indicating if the\n * detail row is visible\n *\n * Todo: move this out to DS\n */\nexport class DetailRowExpansionState\n{\n\n    expansionStates: Map<any, boolean>;\n\n\n    constructor(private dt: AWDataTable)\n    {\n    }\n\n    get detailExpansionEnabled(): boolean\n    {\n        return isPresent(this.expansionStates);\n    }\n\n    set detailExpansionEnabled(value: boolean)\n    {\n\n        if (value) {\n            this.expansionStates = new Map<any, boolean>();\n        } else {\n            this.expansionStates = null;\n        }\n    }\n\n    toggle(item: any): void\n    {\n        let key = this.itemToKey(item);\n        if (!this.isExpanded(item)) {\n            this.expansionStates.set(key, true);\n        } else {\n            this.expansionStates.delete(key);\n        }\n\n        this.dt.dataSource.state.detailRowExpandState = this.expansionStates;\n    }\n\n    isExpanded(item: any): boolean\n    {\n        let key = this.itemToKey(item);\n        // handle special case where we collapse parent of parent while detail row is expanded\n        if (this.dt.isOutline() && !this.dt.outlineState.isExpanded(key)) {\n            this.expansionStates.delete(key);\n            return false;\n        }\n\n        let isOutlineExpanded = this.dt.isOutline() ? this.dt.outlineState.isExpanded(key) : true;\n        return isPresent(key) && this.expansionStates.has(key);\n    }\n\n    private itemToKey(item: any): string\n    {\n        return isEntity(item) ? (<Entity>item).identity() : item;\n    }\n}\n\nexport interface DTStateSerializableHelper\n{\n    offset: number;\n    limit: number;\n    displayLimit: number;\n    sortKey: string;\n    sortOrder: number;\n    currentSearchQuery: string;\n    currentFilter?: any;\n    outlineState: any;\n    detailRowExpandState: any;\n\n}\n\nexport function isDTInitParams(init: DTDSInitParams): init is DTDSInitParams\n{\n    return isPresent(init.obj) || isPresent(init.queryType) || isPresent(init.entity);\n}\n\n/**\n * To make initialization easier we have this common format.\n */\nexport interface DTDSInitParams extends DSInitParams\n{\n\n    /**\n     * Object definition for the data\n     */\n    entity?: EntityDef2;\n\n    state?: Datatable2State;\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ElementRef, forwardRef, Inject, ViewEncapsulation} from '@angular/core';\nimport {Datatable2Component} from '../../datatable2.component';\nimport {Environment} from '@aribaui/core';\nimport {DomHandler} from 'primeng/primeng';\nimport {DTColumn2Component} from '../dt-column.component';\n\n\n/**\n *\n * Column implementation for the Multiselection where we show checkbox control\n *\n *\n */\n@Component({\n    selector: 'aw-dt-multi-select-column',\n    template: `<!--\n    Manages multi selection and renders checkboxes both for header in case [showSelectAll] is\n    enabled as well as each checkbox per row\n-->\n<ng-template #renderingTemplate let-isHeader let-isSubHeader=\"isSubHeader\" let-column=\"column\"\n             let-dataToRender=\"data\"\n             let-level=\"nestingLevel\"\n             let-columnIndex=\"columnIndex\"\n             let-rowIndex=\"rowIndex\">\n\n    <ng-template *ngIf=\"isHeader\" [ngTemplateOutlet]=\"colHeader\"\n                 [ngTemplateOutletContext]=\"{$implicit: isSubHeader, columnIndex:columnIndex,\n                 level:level}\">\n    </ng-template>\n\n    <ng-template *ngIf=\"!isHeader\" [ngTemplateOutlet]=\"colBody\"\n                 [ngTemplateOutletContext]=\"{$implicit: column, level:level,\n                    data:dataToRender,rowIndex:rowIndex}\">\n    </ng-template>\n</ng-template>\n\n\n<ng-template #colHeader let-isSubHeader let-columnIndex=\"columnIndex\">\n    <th [ngClass]=\"{'dt-is-default dt-u-unselectable-text dt-selection-column' :true,\n                    'dt-cell-def': true,\n                    'dt-sub-header': isSubHeader,\n                    'dt-is-hidden': !dt.showSelectionColumn}\" align=\"center\">\n\n        <ng-template [ngIf]=\"dt.showSelectAll\">\n            <aw-checkbox [type]=\"'action'\" (action)=\"dt.toggleAllColumns($event)\"\n                         [value]=\"dt.isToggleAllColumnSelected()\"\n                         [disabled]=\"dt.isToggleAllColumnDisabled()\">\n            </aw-checkbox>\n        </ng-template>\n\n        <ng-template [ngIf]=\"!dt.showSelectAll\">&nbsp;\n        </ng-template>\n    </th>\n\n</ng-template>\n\n\n<ng-template #colBody let-data=\"data\" let-rowIndex=\"rowIndex\" , let-level=\"level\">\n\n    <td #cell [class]=\"dynamicBodyClass(data)\"\n        [style.padding-left.px]=\"indentForControl(cell, level)\"\n        align=\"center\"\n        [ngClass]=\"{ 'dt-is-default dt-selection-column': true,\n        'dt-cell-def': true,\n        'dt-is-hidden': !dt.showSelectionColumn}\">\n\n        <aw-checkbox [type]=\"'action'\" [value]=\"dt.isRowSelected(data)\">\n        </aw-checkbox>\n\n    </td>\n</ng-template>\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DomHandler]\n\n})\nexport class DTMultiSelectColumnComponent extends DTColumn2Component\n{\n\n    constructor(public env: Environment, public domHandler: DomHandler)\n    {\n        super(env, domHandler);\n\n        // default width of the selection control\n        this.width = '45px';\n    }\n\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ElementRef, forwardRef, Inject, ViewEncapsulation} from '@angular/core';\nimport {Datatable2Component} from '../../datatable2.component';\nimport {Environment} from '@aribaui/core';\nimport {DomHandler} from 'primeng/primeng';\nimport {DTColumn2Component} from '../dt-column.component';\n\n\n/**\n *\n * Column implementation for the SingleSelect where we show checkbox control\n *\n *\n */\n@Component({\n    selector: 'aw-dt-single-select-column',\n    template: `<!--\n    Manages multi selection and renders checkboxes both for header in case [showSelectAll] is\n    enabled as well as each checkbox per row\n-->\n<ng-template #renderingTemplate let-isHeader let-isSubHeader=\"isSubHeader\" let-column=\"column\"\n             let-dataToRender=\"data\"\n             let-level=\"nestingLevel\"\n             let-columnIndex=\"columnIndex\"\n             let-rowIndex=\"rowIndex\">\n\n    <ng-template *ngIf=\"isHeader\" [ngTemplateOutlet]=\"colHeader\"\n                 [ngTemplateOutletContext]=\"{$implicit: isSubHeader, columnIndex:columnIndex,\n                 level:level}\">\n    </ng-template>\n\n    <ng-template *ngIf=\"!isHeader\" [ngTemplateOutlet]=\"colBody\"\n                 [ngTemplateOutletContext]=\"{$implicit: column, level:level,\n                    data:dataToRender,rowIndex:rowIndex}\">\n    </ng-template>\n</ng-template>\n\n\n<ng-template #colHeader let-isSubHeader let-columnIndex=\"columnIndex\">\n    <th [ngClass]=\"{'dt-is-default dt-u-unselectable-text dt-selection-column' :true,\n                    'dt-cell-def': true,\n                    'dt-sub-header': isSubHeader,\n                    'dt-is-hidden': !dt.showSelectionColumn}\" align=\"center\">\n        &nbsp;\n    </th>\n\n</ng-template>\n\n\n<ng-template #colBody let-data=\"data\" let-rowIndex=\"rowIndex\" , let-level=\"level\">\n\n    <td #cell [class]=\"dynamicBodyClass(data)\"\n        [style.padding-left.px]=\"indentForControl(cell, level)\"\n        align=\"center\"\n        [ngClass]=\"{ 'dt-is-default dt-selection-column': true,\n        'dt-cell-def': true,\n        'dt-is-hidden': !dt.showSelectionColumn}\">\n\n        <aw-radiobutton [name]=\"'DTRadio'\" [value]=\"data\" [(ngModel)]=\"dt.dataSource.state.selection\">\n        </aw-radiobutton>\n    </td>\n</ng-template>\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    providers: [DomHandler]\n\n})\nexport class DTSingleSelectColumnComponent extends DTColumn2Component\n{\n\n    constructor(public env: Environment, public domHandler: DomHandler)\n    {\n        super(env, domHandler);\n\n        // default width of the selection control\n        this.width = '45px';\n    }\n\n\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n *  @original-license\n *  The MIT License (MIT)\n *  Copyright (c) 2016-2017 PrimeTek\n *\n *  Credit: Derived and extended from Prime-ng datable where we needed more modular solution.\n *  We reused the core structure and layout but had to refactor both code and template to match our\n *  needs. More in the description\n *\n *\n */\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Injector,\n    Input,\n    NgZone,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport {ObjectUtils} from 'primeng/components/utils/objectutils';\nimport {Subscription} from 'rxjs';\nimport {isOutlineNode, OutlineState} from '../outline/index';\nimport {BaseComponent} from '../../core/base.component';\nimport {\n    assert,\n    BooleanWrapper,\n    Environment,\n    equals,\n    FieldPath,\n    isBlank,\n    isPresent,\n    ListWrapper\n} from '@aribaui/core';\nimport {AWDataTable, DropPosition} from './aw-datatable';\nimport {DTColumn2Component} from './column/dt-column.component';\nimport {DTHeaderComponent2} from './header/header.component';\nimport {DTDetailRowComponent} from './column/detail-row/dt-detail-row.component';\nimport {\n    DTDetailRowExpanderComponent\n} from './column/detail-row-expander/dt-detail-row-expander.component';\nimport {DATA_SOURCE} from '../../core/data/data-source';\nimport {DataProviders} from '../../core/data/data-providers';\nimport {DataFinders, QueryType} from '../../core/data/data-finders';\nimport {Datatable2State, DetailRowExpansionState, DT2DataSource} from './datatable2-data-source';\nimport {\n    DTMultiSelectColumnComponent\n} from './column/multi-select/dt-multi-select-column.component';\nimport {\n    DTSingleSelectColumnComponent\n} from './column/single-select/dt-single-select-column.component';\nimport {ModelFormat} from '../outline/outline-for.component';\n\n\nexport type SelectionMode = 'multi' | 'single' | 'cell' | 'none';\n\n/**\n * DT component that implements the data grid that shows tabular data. Even the basic\n * structure is based on PrimeNG datatable its completely refactored into smaller pieces that\n * allows more extensibility and trying to stay as close as possible to existing AWL implementation\n *\n * There are 3 main pieces:\n *\n *  Table Wrapper - focuses on the outer structure. Container with basic datable layout plus\n *  contains any additional panels that datatable needs such as our new concept how editing will\n *  work - sliding panel from the bottom\n *\n *  Datatable Column - Instead of rendering everything inside DT I split the part that renders\n *  column into separate component. This way component column has its own renderer template which\n *  can render both header and data cells.\n *  Later on DTColumn is then extended to support other additional column types\n *  SingleSelectionColumn, MultiSelectionColumn, both responsible for rendering selection controls.\n *\n * To support pivotal layout this can be extended for other additional columns that implements their\n * own rendering templates\n *\n * Datatable - The main component that is only focus on header and body rendering and basaed on the\n * column type it will render the correct template\n * column type it will render the correct template\n *\n *\n *\n *\n *\n */\n@Component({\n    selector: 'aw-datatable2',\n    template: `<!--\n    This template focus only on header and body rendering.\n\n    This datatable also supports frozen column and for this rendering it is pretty much transparent\n    as it received sets of column that it needs to render from the TableWrapper.\n\n    TableWrapper in case of frozen columns calls #headerRows and #bodyRows templates twice to\n    render to separate tables where one has frozen columns and another one has the rest and its\n    scrollable\n-->\n\n<aw-dt-wrapper #dtWrapper>\n    <ng-template #headingArea>\n        <ng-content select=\"aw-dt-header2\"></ng-content>\n    </ng-template>\n\n    <ng-template #headerRows let-colsToRender let-frozenView=\"frozenColumns\">\n        <ng-container\n            *ngTemplateOutlet=\"header; context:{$implicit: colsToRender, frozen:frozenView }\">\n        </ng-container>\n    </ng-template>\n\n    <ng-template #bodyRows let-colsToRender>\n        <ng-template [ngIf]=\"isOutline()\">\n            <ng-container\n                *ngTemplateOutlet=\"bodyOutline; context:{$implicit: colsToRender}\"></ng-container>\n        </ng-template>\n        <ng-template [ngIf]=\"!isOutline()\">\n            <ng-container\n                *ngTemplateOutlet=\"bodyPlain; context:{$implicit: colsToRender}\"></ng-container>\n        </ng-template>\n    </ng-template>\n</aw-dt-wrapper>\n\n\n<!--\n    Each rendering column has its own renderTemplate which define how things should be render.\n    Based on different column types this code should be transparent as we dont care on this\n    level what kind of column we are rendering.\n\n    Later on when we will support single/multi selection, this will be just another column extending\n    DTColumn and providing its own template\n\n    We pass into this template if we are rendering header, subHeader, or data\n-->\n<ng-template #header let-colsToRender let-frozen=\"frozen\">\n    <tr>\n        <ng-template ngFor let-col [ngForOf]=\"colsToRender\" let-lastCol=\"last\"\n                     let-columnIndex=\"index\">\n\n            <ng-container *ngTemplateOutlet=\"col.rendererTemplate;\n                context:{$implicit: true, isSubHeader:false,\n                columnIndex:(frozen ? columnIndex: (columns.length + columnIndex))}\">\n            </ng-container>\n        </ng-template>\n    </tr>\n\n    <tr *ngIf=\"showSubHeader\">\n        <ng-template ngFor let-col [ngForOf]=\"colsToRender\" let-lastCol=\"last\">\n            <ng-container *ngTemplateOutlet=\"col.rendererTemplate;\n                context:{$implicit: true, isSubHeader:true}\">\n            </ng-container>\n        </ng-template>\n    </tr>\n</ng-template>\n\n\n<ng-template #bodyPlain let-colsToRender>\n\n    <tbody [ngClass]=\"{'dt-content dt-data-cells ': true, 'dt-is-hoverable-row': rowHover}\">\n\n    <ng-template ngFor let-rowData [ngForOf]=\"dataToRender\" let-even=\"even\" let-odd=\"odd\"\n                 let-rowIndex=\"index\" [ngForTrackBy]=\"rowTrackBy\">\n\n        <ng-container *ngTemplateOutlet=\"rowTemplate; context:{$implicit: rowData, even:even,\n                                          odd:odd, rowIndex:rowIndex, colsToRender:colsToRender}\">\n        </ng-container>\n\n        <ng-template [ngIf]=\"showDetailColumn(rowData)\">\n            <ng-container *ngTemplateOutlet=\"rowDetailColumn.rendererTemplate;\n                    context:{$implicit: false, data:rowData, rowIndex:(rowIndex)}\">\n            </ng-container>\n        </ng-template>\n\n    </ng-template>\n    <ng-container *ngTemplateOutlet=\"noData\"></ng-container>\n    </tbody>\n</ng-template>\n\n\n<ng-template #bodyOutline let-colsToRender>\n    <tbody #outlineFor awOutlineFor [list]=\"dataToRender\"\n           [format]=\"outlineFormat\"\n           [context]=\"context\"\n           [indentationPerLevel]=\"indentationPerLevel\"\n           [pushRootSectionOnNewLine]=\"pushRootSectionOnNewLine\"\n           [children]=\"children\" [expandAll]=\"expandAll\"\n           [state]=\"outlineState\"\n           [ngClass]=\"{'dt-content dt-data-cells ': true,\n                           'dt-is-hoverable-row': rowHover}\"\n           (onExpandChange)=\"onOutlineExpandChange($event)\">\n\n    <ng-template #outline let-rowData let-nestingLevel=\"nestingLevel\" let-rowIndex=\"rowIndex\">\n        <ng-container *ngTemplateOutlet=\"rowTemplate;\n                                context:{$implicit: rowData, nestingLevel:nestingLevel, colsToRender:colsToRender}\">\n        </ng-container>\n\n        <ng-template [ngIf]=\"showDetailColumn(rowData)\">\n            <ng-container *ngTemplateOutlet=\"rowDetailColumn.rendererTemplate;\n                    context:{$implicit: false, data:rowData, rowIndex:(rowIndex)}\">\n            </ng-container>\n        </ng-template>\n\n    </ng-template>\n    <ng-container *ngTemplateOutlet=\"noData\"></ng-container>\n    </tbody>\n</ng-template>\n\n<!--\n    Default template that is display when there are no data\n-->\n<ng-template #noData>\n    <tr *ngIf=\"isEmpty()\" class=\" dt-emptymessage-row\"\n        [style.visibility]=\"loading ? 'hidden' : 'visible'\">\n\n        <td [attr.colspan]=\"visibleColumns().length\" class=\"dt-emptymessage\">\n            <span *ngIf=\"!emptyMessageTemplate\">{{emptyMessage}}</span>\n            <ng-container *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\n        </td>\n    </tr>\n</ng-template>\n\n<!--\n    Template that renders actual row. Renders both header and body column. Each rendered\n    column has its own template called rendererTemplate that has all things that needs to be\n    rendered and we just tell the template if we are rendering header, subheader or body\n-->\n<ng-template #rowTemplate let-rowData let-even=\"event\" let-odd=\"odd\" let-rowIndex=\"rowIndex\"\n             let-nestingLevel=\"nestingLevel\" let-colsToRender=\"colsToRender\">\n\n\n    <tr #rowElement dtDraggableRow [dndRowIndex]=\"rowIndex\"\n        class=\"dt-body-row\"\n        (click)=\"onHandleRowClicked($event, rowData)\"\n        [attr.nestingLevel]=\"nestingLevel\"\n        [ngClass]=\"{'dt-even-row': even, 'dt-odd-row': odd,\n            'dt-row-selected': isRowSelected(rowData),\n            'dt-row-draggable': dndRowEnabled,\n            'dt-root-section': nestingLevel === 0 }\">\n\n        <ng-template ngFor let-col [ngForOf]=\"colsToRender\" let-colIndex=\"index\">\n            <ng-container *ngTemplateOutlet=\"col.rendererTemplate;\n                    context:{$implicit: false, data:rowData, rowIndex:rowIndex,\n                    nestingLevel:nestingLevel}\">\n            </ng-container>\n        </ng-template>\n    </tr>\n</ng-template>\n\n\n`,\n    styles: [`.w-datatable{position:relative;display:block;box-sizing:border-box}.w-datatable table{border-collapse:collapse;width:100%;table-layout:fixed}.w-datatable tbody,.w-datatable td,.w-datatable th{outline:0}.dt-cell-def,.dt-cell-def-selectable{border:1px solid transparent;padding:17px 16px;box-sizing:border-box}.dt-cell-def-selectable{cursor:pointer;width:100%;height:100%}th .dt-cell-def-selectable{border-width:4px 1px 1px;padding:14px 16px 17px}td .dt-cell-def-selectable{border-width:0 1px 0 5px;padding:17px 16px 17px 13px}.dt-data-cells tr.dt-is-highlight,.dt-data-cells tr.dt-is-hover{border-color:inherit;font-weight:inherit;cursor:pointer}.w-datatable-rtl{direction:rtl}.w-datatable-rtl.w-datatable-rtl.w-datatable thead th{text-align:right}.dt-root-section .dt-cell-def,.dt-root-section .dt-cell-def-selectable{background-color:#f3f6f8;padding:10px 16px;border-bottom-color:transparent;border-right-color:transparent}.dt-plain-layout .dt-is-active,.dt-plain-layout .dt-is-default,.dt-plain-layout .dt-is-highlight,.dt-plain-layout .dt-is-hover,.dt-plain-layout .dt-is-hoverable-row{border-right-color:transparent}.dt-is-active,.dt-is-default,.dt-is-highlight,.dt-is-hover,.dt-is-hoverable-row{border:1px solid #d7d7d7;background-color:#fff;color:#363636}.dt-row-selected td{background-color:rgba(238,255,238,.71)}.dt-is-active{border-color:#065d9c;color:#199de0}.dt-is-highlight{background-color:rgba(65,117,5,.18)}.dt-is-hidden{display:none}.dt-u-unselectable-text{-webkit-user-select:none;-moz-user-select:none;-o-user-select:none;-ms-user-select:none;user-select:none}.dt-u-sortable{cursor:pointer}`],\n    providers: [\n        ObjectUtils,\n        OutlineState,\n        {provide: DATA_SOURCE, useClass: DT2DataSource, deps: [DataProviders, DataFinders]},\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class Datatable2Component extends BaseComponent implements AWDataTable, AfterViewChecked,\n    AfterViewInit, AfterContentInit\n{\n\n    /**\n     *  List of items to show in the datatable.\n     *\n     *  todo: implement the same Datasource and lazy loading just like I did it for datatable\n     */\n    @Input()\n    list: any[];\n\n    /**\n     * Name of the entity for which DataProvider will be loaded. You can either pass list of items\n     * or use this destinationClass. Not both\n     */\n    @Input()\n    destinationClass: string;\n\n\n    /**\n     * Used by TableWrapper to add user defined clas into the table tag\n     *\n     */\n    @Input()\n    tableStyleClass: string;\n\n    /**\n     * See headerTemplate for more details\n     */\n    @Input()\n    bodyClassFn: (column: DTColumn2Component, item: any) => string;\n\n\n    /**\n     * See AWDataTable\n     */\n    @Input()\n    isRowSelectable: (item: any) => boolean;\n\n\n    /**\n     *  Hides or shows table heading where we have filters and tools menus\n     */\n    @Input()\n    showTableHeader: boolean = true;\n\n\n    /**\n     * See AWDataTable\n     *\n     */\n    @Input()\n    pivotalLayout: boolean = false;\n\n    /**\n     * See AWDataTable\n     *\n     */\n    @Input()\n    context: any;\n\n    /**\n     * See AWDataTable\n     */\n    @Input()\n    initialSortOrder: string = 'descending';\n\n    /**\n     * See AWDataTable\n     */\n    @Input()\n    initialSortKey: string;\n\n\n    /**\n     * When DT is loaded in the page and we are not in the full screen (full page mode), this\n     * is hte number of lines that DT will show\n     *\n     * todo: come up with better name\n     */\n    @Input()\n    displayRowSize: number = 10;\n\n\n    /**\n     * Used for paging on lazy loading using infinite scroller to set initial fetch limit size\n     *\n     * todo: come up with better name !!!\n     *\n     */\n    @Input()\n    pageSize: number = 15;\n\n\n    /**\n     * See AWDataTable\n     */\n    @Input()\n    dataSource: DT2DataSource;\n\n    /**\n     * Default message when there are no data .\n     *\n     * todo: Use i18n value and create resource file\n     */\n    @Input()\n    emptyMessage: string = 'No records found';\n\n\n    /**\n     * Developer can provide custom trackBy function that will be used to iterate over the\n     * records\n     */\n    @Input()\n    rowTrackBy: (index: number, item: any) => any;\n\n    /**\n     * When true adds custom hovering class to the tbody\n     */\n    @Input()\n    rowHover: boolean;\n\n    /**\n     * Do we show loading indicator\n     *\n     * Todo: rename to showLoading\n     */\n    @Input()\n    loading: boolean;\n\n\n    /**\n     *\n     * See AWDataTable\n     *\n     */\n    @Input()\n    selectionMode: SelectionMode = 'none';\n\n    /**\n     *\n     * Can provide custom icon. These icons are not animated divs, we used css\n     * transformation to rotate them.\n     *\n     */\n    @Input()\n    loadingIcon: string = 'icon-synchronize';\n\n\n    /**\n     * Additional indent can be added when rendering detail row\n     */\n    @Input()\n    indentDetailRow: boolean = false;\n\n    /**\n     * See AWDataTable\n     *\n     */\n    @Input()\n    indentationPerLevel: number = 25;\n\n    /**\n     *\n     *  SubHeader is used to show summary columns, which in our UX is shown at the top just under\n     *  the regular table header\n     *\n     */\n    @Input()\n    showSubHeader: boolean = false;\n\n    /**\n     * See OutlineFor - only used in the tree mode\n     *\n     * Not used when [outlineFormat]=\"'truee'\"\n     */\n    @Input()\n    children: (value: any) => any[];\n\n\n    /**\n     * We might have this conditional as this can be dynamic based on value, so the same\n     * as children\n     *\n     * See OutlineFor - only used in the tree mode\n     */\n    @Input()\n    showExpansionControl: boolean;\n\n    /**\n     * See OutlineFor - only used in the tree mode\n     */\n    @Input()\n    expandAll: boolean = false;\n\n\n    /**\n     *\n     * See OutlineFor  - format - only used in the tree mode\n     */\n    @Input()\n    outlineFormat: ModelFormat = 'free';\n\n    /**\n     * See AWDataTable\n     */\n    @Input()\n    pushRootSectionOnNewLine: boolean = true;\n\n\n    /**\n     * Render or hide expansion control for row detail columns. Expansion control makes sense for\n     * simple table, when using this inside outline (tree table), its driven by outline control\n     */\n    @Input()\n    showRowDetailExpansionControl: boolean = true;\n\n    /**\n     * See AWDataTable\n     *\n     */\n    @Input()\n    showSelectionColumn: boolean = true;\n\n\n    /**\n     * See AWDataTable\n     *\n     */\n    @Input()\n    showSelectAll: boolean = true;\n\n\n    /**\n     * Show or hide global search term input field in the header\n     */\n    @Input()\n    showGlobalSearch: boolean = true;\n\n\n    /**\n     * In case frozen column are using we can specify on global level total width of the table the\n     * overflowing content or width for each column.\n     */\n    @Input()\n    scrollWidth: any;\n\n\n    /**\n     * Enables or disables row reordering\n     *\n     */\n    @Input()\n    dndRowEnabled: boolean = false;\n\n    /**\n     *\n     * Fires event that sorting is enabled for column and we trigger sorting\n     *\n     */\n    @Output()\n    onSort: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * Based on selection mode it triggers even\n     *\n     */\n    @Output()\n    onRowClick: EventEmitter<any> = new EventEmitter();\n\n    /**\n     *\n     * When multi or single selection mode is enabled it will trigger event when checkbox or\n     * radio buttons is selected\n     *\n     * todo: implement SingleSelectionDTColumn, MultiSelectionDTColumn with their renderers\n     */\n    @Output()\n    onRowSelectionChange: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * When cell body selection changes we fire event\n     *\n     */\n    @Output()\n    onCellChange: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * When cell header selection changes we fire event\n     *\n     */\n    @Output()\n    onHeaderSelection: EventEmitter<any> = new EventEmitter();\n\n\n    @ContentChild(DTHeaderComponent2)\n    header: DTHeaderComponent2;\n\n\n    /**\n     * Defines custom template that can be implemented by application to show when there are\n     * no data in the datable\n     */\n    @ContentChild('noDataTempl')\n    emptyMessageTemplate: TemplateRef<any>;\n\n    /**\n     * See AWDataTable\n     *\n     */\n    @ContentChild('dtHeader')\n    headerTemplate: TemplateRef<any>;\n\n    /**\n     * See AWDataTable\n     */\n    @ContentChild('dtSubHeader')\n    subHeaderTemplate: TemplateRef<any>;\n\n    /**\n     * See AWDataTable\n     */\n    @ContentChild('dtBody')\n    bodyTemplate: TemplateRef<any>;\n\n\n    /**\n     * See AWDataTable\n     */\n    @ContentChild('headerFilter')\n    headerFilterTemplate: TemplateRef<any>;\n\n\n    /**\n     * Collects used DTColumn inside datatable and then they are used inside the template to\n     * iterate over and use its rendererTemplate.\n     *\n     * When we will be defining new columns its important that it can also match all the\n     * inherited ones. so we need to make sure we define a provider those those columns to point\n     * to the DTColumnComponent\n     *\n     * e.g.:\n     *\n     * {provide: DTColumnComponent, useExisting: forwardRef(() => DetailRowColumn)}\n     *\n     */\n    @ContentChildren(DTColumn2Component)\n    colsQuery: QueryList<DTColumn2Component>;\n\n\n    /**\n     * See AWDataTable\n     */\n    @ContentChild(DTDetailRowComponent)\n    rowDetailColumn: DTDetailRowComponent;\n\n\n    /**\n     *\n     * Triggers when items in the list are updated\n     *\n     */\n    @Output()\n    valueChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n\n    @HostBinding('class')\n    classList: string = 'w-datatable ';\n\n\n    /**\n     * For internal use\n     */\n\n    /**\n     * Current dataset that is being rendered. Set from the [list] binding or by lazy load from\n     * datasource\n     */\n    public dataToRender: any[];\n\n    /**\n     * We convert QueryList<DTColumn2Component> to this array for easier manipulation\n     */\n    public columns: DTColumn2Component[];\n\n\n    /**\n     * This is secondary list of columns which is used in case we have have enabled\n     * frozen columns. Columns that are marked as frozen needs to be placed into separate array\n     * to be rendered way than regular columns which are stored in the columns array.\n     */\n    public frozenColumns: DTColumn2Component[];\n\n\n    /**\n     *  Indicates that columns were initialed Also used when we hide and show column to trigger\n     *  change.\n     *\n     */\n    public columnsChanged: boolean = false;\n\n    /**\n     *\n     * See AWDataTable\n     */\n    public sortColumn: DTColumn2Component;\n\n\n    /**\n     * Reference to colsQuery and its changes so we can later on release the subscription\n     */\n    columnsSubscription: Subscription;\n    initialized: boolean;\n\n\n    /**\n     * See AWDataTable\n     */\n    detailRowExpansionState: DetailRowExpansionState;\n\n\n    /**\n     * See AWDataTable\n     */\n    numberOfColsBeforeData: number = 0;\n\n\n    /**\n     * See AWDataTable\n     */\n    startOfFirstDataColumn: number = 0;\n\n\n    /**\n     * Section for programmatically instantiated columns that are added to the list if additional\n     * span or logic is needed.\n     *\n     * To programmatically insert a new column into columns array like expando column for detail\n     * row, or SingleSelect, MultiSelect column when selection is enabled we need to use\n     * ComponentFactoryResolver to instantiate a new component.\n     *\n     */\n    private rowDetailExpandColumn: DTDetailRowExpanderComponent;\n    private multiSelectColumn: DTMultiSelectColumnComponent;\n    private singleSelectColumn: DTSingleSelectColumnComponent;\n\n\n    /**\n     *\n     * In case of outline table we are inject OutlineState which is provided in the DT component\n     * definition. This is used by nested outlineFor component it set itself as reference and\n     * initialize the state so it can be used later on inside OutlineControl\n     *\n     *\n     * Each Datatable is pre-defaulted with its own version of DataSource so all the observers\n     * inside are unique for this component\n     *\n     */\n    constructor(public env: Environment, public el: ElementRef,\n                @Inject(DATA_SOURCE) private _defaultDS: DT2DataSource,\n                public changeDetector: ChangeDetectorRef,\n                public factoryResolver: ComponentFactoryResolver,\n                public outlineState: OutlineState,\n                public zone: NgZone,\n                private injector: Injector)\n    {\n        super(env);\n\n        this.dataSource = this._defaultDS;\n    }\n\n    /**\n     * Pushes a state out to application. Can be use as two way bindings\n     *\n     * [(state)]=dtState(s)\n     *\n     */\n    @Input()\n    get state(): any\n    {\n        return this.dataSource.state;\n    }\n\n    set state(val: any)\n    {\n        this.dataSource.state = val;\n    }\n\n    ngOnInit()\n    {\n\n        super.ngOnInit();\n        if (isPresent(this.list) && isPresent(this.destinationClass)) {\n            throw new Error('You cannot use both bindings [list] and [destinationClass]!');\n        }\n        this.detailRowExpansionState = new DetailRowExpansionState(this);\n\n        // init default columns\n        this.rowDetailExpandColumn = this.factoryResolver\n            .resolveComponentFactory(DTDetailRowExpanderComponent).create(this.injector).instance;\n\n\n        this.multiSelectColumn = this.factoryResolver\n            .resolveComponentFactory(DTMultiSelectColumnComponent).create(this.injector).instance;\n\n        this.singleSelectColumn = this.factoryResolver\n            .resolveComponentFactory(DTSingleSelectColumnComponent).create(this.injector).instance;\n\n        /**\n         * If the data are not deferred and we get list directly then it creates DS. If\n         * ngOnChanges is called first we properly init DS and clean this.list\n         *\n         */\n        if (isPresent(this.destinationClass) || isPresent(this.list)) {\n            this.initDatasource();\n\n        } else if (this.dataSource.initialized) {\n            this.initDatasource(false);\n        }\n\n        // since we work with references let's pass created map inside our state\n        this.outlineState.expansionStates = this.state.outlineState;\n    }\n\n    /**\n     * When data arrives later maybe due to REST API latency, initialize DS only when we have a\n     * data, otherwise if data changed thru the bindings just trigger dataChange event\n     *\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        super.ngOnChanges(changes);\n\n        if (changes['list'] && isPresent(changes['list'].currentValue)\n            && !this.dataSource.initialized)\n        {\n\n            this.initDatasource();\n\n        } else if (this.dataSource.initialized) {\n            this.dataSource.dataProvider.dataChanges.next(this.list);\n        }\n\n    }\n\n    ngAfterContentInit()\n    {\n\n        // make sure we init a state when detail column is present\n        // todo: move this initialization to datasource\n        this.detailRowExpansionState.detailExpansionEnabled = isPresent(this.rowDetailColumn);\n\n        this.initColumns();\n        this.columnsSubscription = this.colsQuery.changes.subscribe(_ =>\n        {\n            this.initColumns();\n            this.changeDetector.markForCheck();\n        });\n    }\n\n    ngAfterViewInit()\n    {\n        // assign it programatically as we want to have a context for the filter\n        if (isPresent(this.rowDetailColumn) && isPresent(this.outlineState.outlineFor)) {\n            this.outlineState.outlineFor.filterOut = this.skipOutlineItem.bind(this);\n        }\n\n        if (isPresent(this.outlineState.outlineFor)) {\n            // this.outlineState.outlineFor.changeDetector.detach();\n            // this.outlineState.outlineFor.changeDetector.detectChanges();\n        }\n\n        this.initialized = true;\n    }\n\n    ngAfterViewChecked()\n    {\n        if (this.columnsChanged && this.el.nativeElement.offsetParent) {\n            this.columnsChanged = false;\n        }\n\n        if (this.hasFrozenColumns()) {\n            this.frozenColumns.forEach((col: DTColumn2Component, index: number) =>\n                col.postInitialize(index));\n        } else {\n            this.columns.forEach((col: DTColumn2Component, index: number) =>\n                col.postInitialize(index));\n        }\n    }\n\n    /**\n     * Key entry method that initialized our columns. Later on when we will support selection and\n     * multiselection we will programmatically instantiate SingleSelection, MultiSelection column\n     * components and add them to the list so they can be rendered.\n     *\n     * so the idea here is:\n     *\n     * When DT component initialize and we are in editing mode and we support Single/Multi selection\n     * we will use ComponentFactoryResolver to create component and add it as first item to the list\n     * and then it will be rendered just like anythign else.\n     *\n     */\n    initColumns(): void\n    {\n        this.columns = [];\n        this.frozenColumns = [];\n\n        if (this.detailRowExpansionState.detailExpansionEnabled) {\n            this.initDetailColumnExpansion();\n        }\n        if (this.hasLeadingSelectColumn() && this.selectionMode === 'multi') {\n            this.multiSelectColumn.initialize(this);\n            this.columns.push(this.multiSelectColumn);\n        } else if (this.hasLeadingSelectColumn() && this.selectionMode === 'single') {\n            this.singleSelectColumn.initialize(this);\n            this.columns.push(this.singleSelectColumn);\n        }\n\n        /**\n         * Add expansion column when detail row is enabled\n         */\n        if (this.detailRowExpansionState.detailExpansionEnabled && !this.isOutline()) {\n            this.rowDetailExpandColumn.initialize(this);\n            this.columns.push(this.rowDetailExpandColumn);\n        }\n\n        this.colsQuery\n            .filter((col1: DTColumn2Component) => !col1.frozen)\n            .forEach((col: DTColumn2Component) =>\n            {\n                col.initialize(this);\n                this.columns.push(col);\n            });\n\n        this.initFrozenColumns();\n        this.initColumnInfo();\n        this.columnsChanged = true;\n    }\n\n    /**\n     * Check if current column is programmatically created\n     *\n     */\n    isInternalColumn(col: DTColumn2Component): boolean\n    {\n        return col instanceof DTSingleSelectColumnComponent ||\n            col instanceof DTMultiSelectColumnComponent ||\n            col instanceof DTDetailRowExpanderComponent;\n\n    }\n\n    /**\n     * Create new Datasource based on passed values. It tries to initialize DS for first time\n     * inside the ngInit but in case Data arrives later maybe due to some REST API calls this\n     * can be triggered also from ngOnChanges.\n     *\n     */\n    initDatasource(initialize: boolean = true): void\n    {\n        if (isBlank(this.state)) {\n            this.state = Datatable2State.create(0, this.pageSize, this.displayRowSize,\n                this.initialSortKey, this.sortOrderingForString(this.initialSortOrder));\n        } else {\n            this.state.limit = this.state.displayLimit = this.displayRowSize;\n            if (isPresent(this.initialSortKey)) {\n                this.state.sortKey = this.initialSortKey;\n                this.state.sortOrder = this.sortOrderingForString(this.initialSortOrder);\n            }\n        }\n\n        if (initialize) {\n\n            let qType = (this.isOutline() && this.outlineFormat === 'tree') ?\n                QueryType.FullTextOutline : QueryType.FullText;\n\n            this.dataSource.init({\n                obj: isPresent(this.destinationClass) ? this.destinationClass : this.list,\n                queryType: qType,\n                state: this.state,\n                multiselect: false\n            });\n        }\n        this.dataSource.fetch(this.state);\n\n        // reset list to make sure it comes from DataProvider, we use list  to initialize\n        this.list = null;\n\n        // This is the ENTRY point for the DATA CHANGES. All addition, edits, deletion ends up\n        // here. We dont work directly with LIST. Any change is reactive and here is listener\n        this.dataSource.open().subscribe((data: any[]) =>\n        {\n            this.updateList(data);\n        });\n    }\n\n    /**\n     * When detailRow column is present we initialize a state holding information which item is\n     * expanded.\n     *\n     * todo: This is temporary here and once we suport lazy loading move this to datasource.\n     *\n     * For example for outline tree table we need to connect a state from outline with a state in\n     * here as we are using outline control to expand and collapse items\n     */\n    initDetailColumnExpansion(): void\n    {\n        if (isPresent(this.rowDetailColumn)) {\n            this.rowDetailColumn.initialize(this);\n        }\n        this.detailRowExpansionState.detailExpansionEnabled = isPresent(this.rowDetailColumn) &&\n            BooleanWrapper.isTrue(this.showRowDetailExpansionControl);\n    }\n\n    /**\n     * This method is executed after we initialize all the columns in order to calculate correct\n     * numbers used for indentation while rendering selection columns as well as detail row columns.\n     *\n     * Here we need to be aware how many columns to span\n     *\n     */\n    initColumnInfo(): void\n    {\n        this.numberOfColsBeforeData = 0;\n\n        this.columns.forEach((col: DTColumn2Component) =>\n        {\n            if (!col.isValueColumn()) {\n                this.numberOfColsBeforeData++;\n            }\n        });\n\n        if (this.indentDetailRow) {\n            this.numberOfColsBeforeData++;\n        }\n\n        this.startOfFirstDataColumn = this.columns.length - this.numberOfColsBeforeData;\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    onCellSelectionChange(cell: any, column: DTColumn2Component, item: any): void\n    {\n        if (this.selectionMode !== 'cell') {\n            return;\n        }\n        let lookupKey = {\n            col: column.key || column.label,\n            item: item\n        };\n        if (isPresent(this.state.selection) && this.state.selection.length > 0) {\n\n            let foundIndex = ListWrapper.findIndexComplex(this.state.selection, lookupKey);\n            let isSelected = foundIndex !== -1;\n\n            if (isSelected) {\n                this.state.selection = this.state.selection\n                    .filter((val: any, index: number) => index !== foundIndex);\n            } else {\n                this.state.selection = [...this.state.selection, lookupKey];\n            }\n        } else {\n            this.state.selection = [lookupKey];\n        }\n        this.onCellChange.emit(this.state.selection);\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    onHeaderSelectionChange(cell: any, column: DTColumn2Component): void\n    {\n        if (isPresent(this.state.headerSelection)) {\n            if (this.isHeaderSelected(column)) {\n                this.state.headerSelection = null;\n            } else {\n                this.state.headerSelection = column;\n            }\n        } else {\n            this.state.headerSelection = column;\n        }\n        this.onHeaderSelection.emit(this.state.headerSelection);\n    }\n\n    onHandleRowClicked(event: any, item: any): void\n    {\n        // special alt key modifier. When used with rows it indicates there is a D&D enabled\n        if (event.altKey) {\n            return;\n        }\n\n        if (this.selectionMode === 'multi') {\n            this.onRowToggle(event, item);\n\n        } else if (this.selectionMode === 'single') {\n            this.onRowSelect(event, item);\n        }\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    onRowToggle(event: any, item: any): void\n    {\n        let rowSelected = true;\n        if (isPresent(this.state.selection) && this.state.selection.length > 0) {\n            let foundIndex = ListWrapper.findIndexComplex(this.state.selection, item);\n            let isSelected = foundIndex !== -1;\n\n            if (isSelected) {\n                this.state.selection = this.state.selection\n                    .filter((val: any, index: number) => index !== foundIndex);\n\n                rowSelected = false;\n            } else {\n                this.state.selection = [...this.state.selection, item];\n            }\n\n            // for the outline go up and down the sync with treeitems\n            if (this.isOutline()) {\n                this.onHandleOutlineRowToggleToChildren(item, isSelected);\n                this.oHandleOutlineRowToggleToParent(item, isSelected);\n            }\n        } else {\n            this.state.selection = [item];\n\n            if (this.isOutline()) {\n                this.onHandleOutlineRowToggleToChildren(item, false);\n                this.oHandleOutlineRowToggleToParent(item, false);\n            }\n        }\n\n        this.onRowSelectionChange.emit({\n            isSelected: rowSelected,\n            item: this.state.selection\n        });\n\n        event.stopPropagation();\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    onRowSelect(event: any, item: any): void\n    {\n        this.state.selection = item;\n        event.stopPropagation();\n\n        this.onRowSelectionChange.emit(item);\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    onHandleOutlineRowToggleToChildren(currentItem: any, isSelected: boolean): void\n    {\n        let childrenForNode = this.children.apply(this.context, [currentItem]) || [];\n\n        if (childrenForNode.length > 0) {\n            // If is selected currently then toggle to other state\n            if (!isSelected) {\n                // when checking all from root, deselect children and add all\n                this.onHandleOutlineRowToggleToChildren(currentItem, true);\n                this.state.selection = [...this.state.selection, ...childrenForNode];\n\n            } else {\n                // remove each child\n                for (let child of childrenForNode) {\n                    let foundIndex = ListWrapper.findIndexComplex(this.state.selection, child);\n                    this.state.selection = this.state.selection\n                        .filter((val: any, index: number) => index !== foundIndex);\n                }\n            }\n\n            // apply the same for children of children\n            for (let child of childrenForNode) {\n                this.onHandleOutlineRowToggleToChildren(child, isSelected);\n            }\n        }\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    oHandleOutlineRowToggleToParent(currentItem: any, isSelected: boolean): void\n    {\n        let parent = currentItem.$$parentItem;\n        if (isPresent(parent)) {\n            let childrenForNode = this.children.apply(this.context, [parent]) || [];\n\n            let allSelected = true;\n            for (let child of childrenForNode) {\n                allSelected = ListWrapper.findIndexComplex(this.state.selection, child) !== -1\n                    && allSelected;\n            }\n\n            if (!isSelected) {\n                if (allSelected) {\n                    this.state.selection.push(parent);\n                }\n\n            } else {\n                if (!allSelected) {\n                    let parentIndex = ListWrapper.findIndexComplex(this.state.selection,\n                        parent);\n                    this.state.selection = this.state.selection\n                        .filter((val: any, index: number) => index !== parentIndex);\n                }\n            }\n            this.oHandleOutlineRowToggleToParent(currentItem.$$parentItem, isSelected);\n        }\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    onDnDRowDrop(origPos: number, newPos: number, dropPos: DropPosition): void\n    {\n        if (isPresent(this.dataSource)) {\n            // console.log('Dropping row #: ', origPos + ' ' + dropPos + ' row #: ' + newPos);\n            this.dataSource.reorderRows(origPos, newPos, dropPos);\n        }\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    onOutlineExpandChange(event: any): void\n    {\n        let item = event.item;\n\n        // We dont really need to store a state form outline locally as we are using the same object\n        // reference\n        // this.state.outlineState = this.outlineState.expansionStates;\n\n        if (this.canUseForDetailRow(item)) {\n            this.detailRowExpansionState.toggle(item);\n        }\n    }\n\n    /**\n     * See AWDataTable\n     *\n     *\n     */\n    sortSingle(): void\n    {\n        if (isPresent(this.list) && isPresent(this.sortColumn)) {\n\n            assert(isPresent(this.sortColumn.key), 'Invalid column to sort');\n            this.dataSource.sort(this.sortColumn.key, this.sortColumn.sortOrder);\n\n            this.onSort.emit({\n                field: this.sortColumn.key,\n                order: this.sortColumn.sortOrder\n            });\n        }\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    handleDataChange(): void\n    {\n        if (this.state.sortKey || this.sortColumn) {\n            if (!this.sortColumn && this.columns) {\n                this.sortColumn = this.columns.find(\n                    col => col.key === this.state.sortKey);\n            }\n        }\n\n        this.updateDataToRender();\n        this.valueChange.emit(this.list);\n    }\n\n    updateDataToRender(datasource?: any)\n    {\n        this.dataToRender = datasource || this.list;\n\n        if (isBlank(this.children) && isPresent(this.dataToRender)\n            && this.dataToRender.length > 0 && isOutlineNode(this.dataToRender[0]))\n        {\n            this.outlineFormat = 'tree';\n        }\n\n        // this.changeDetector.markForCheck();\n        this.changeDetector.detectChanges();\n    }\n\n    reset()\n    {\n        this.sortColumn = null;\n        this.updateDataToRender();\n    }\n\n    /**\n     * See AWDataTable\n     */\n    isHeaderSelected(item: DTColumn2Component): boolean\n    {\n        if (isBlank(this.state.headerSelection)) {\n            return false;\n        }\n\n        let colMatched = item.key || item.label;\n        let currentCol = this.state.headerSelection.key || this.state.headerSelection.label;\n        return colMatched === currentCol;\n    }\n\n    /**\n     *\n     * See AWDataTable\n     *\n     */\n    isBodyCellSelected(column: DTColumn2Component, item: any): boolean\n    {\n        let lookupKey = {\n            col: column.key || column.label,\n            item: item\n        };\n        return isPresent(this.state.selection) &&\n            ListWrapper.findIndexComplex(this.state.selection, lookupKey) !== -1;\n    }\n\n    /**\n     *  See AWDataTable\n     *\n     */\n    isRowSelected(item: any): boolean\n    {\n        if (this.hasLeadingSelectColumn() && isPresent(this.state.selection)) {\n\n            if (this.selectionMode === 'multi') {\n                return ListWrapper.findIndexComplex(this.state.selection, item) !== -1;\n\n            } else if (this.selectionMode === 'single') {\n                return equals(this.state.selection, item);\n            }\n        }\n        return false;\n    }\n\n    /**\n     *\n     * Do we have data to render Used inside template to tell if we should use the NoData template\n     *\n     */\n    isEmpty()\n    {\n        return isBlank(this.dataToRender) || (this.dataToRender.length === 0);\n    }\n\n    hasFrozenColumns(): boolean\n    {\n        return isPresent(this.frozenColumns) && this.frozenColumns.length > 0;\n    }\n\n    /**\n     * See AWDataTable\n     */\n    hasInvisibleSelectionColumn(): boolean\n    {\n        return this.hasLeadingSelectColumn() && !this.showSelectionColumn;\n    }\n\n    /**\n     *\n     * See AWDataTable\n     *\n     */\n    hasLeadingSelectColumn(): boolean\n    {\n        return this.selectionMode !== 'none' && this.selectionMode !== 'cell';\n    }\n\n    visibleColumns(): DTColumn2Component[]\n    {\n        return this.columns ? this.columns.filter(c => c.isVisible) : [];\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    sortOrderingForString(direction: string): number\n    {\n        if (isBlank(direction) || direction === 'ascending') {\n            return 1;\n        }\n\n        if (isBlank(direction) || direction === 'descending') {\n            return -1;\n        }\n        // todo: log bad key\n        return 1;\n    }\n\n    sortOrderingForNumber(direction: number): string\n    {\n        if (isBlank(direction) || direction === 1) {\n            return 'ascending';\n        }\n\n        if (isBlank(direction) || direction === -1) {\n            return 'descending';\n        }\n        // todo: log bad key\n        return 'ascending';\n    }\n\n    /**\n     * See AWDataTable\n     *\n     */\n    toggleAllColumns(event: any): void\n    {\n        let currentItems = this.dataToRender || [];\n        let selectedObject = this.state.selection || [];\n        if (selectedObject.length >= currentItems.length) {\n            this.state.selection = [];\n        } else {\n            this.state.selection = [];\n            this.state.selection = [...currentItems];\n        }\n    }\n\n    /**\n     *\n     * See AWDataTable\n     *\n     */\n    isToggleAllColumnSelected(): boolean\n    {\n        let currentItems = this.dataToRender || [];\n        let selectedObject = this.state.selection || [];\n\n        return currentItems.length > 0 && selectedObject.length >= currentItems.length;\n    }\n\n    isToggleAllColumnDisabled(): boolean\n    {\n        let currentItems = this.dataToRender || [];\n\n        return currentItems.length === 0;\n    }\n\n    /**\n     *\n     * Used by template to decide if we need to render DetailRow template. We need to have\n     * DetailRow ContentChild and using DetailRow component [isVisibleFn] function binding we\n     * check if the item that is about to be rendered is eligible for detail row\n     *\n     */\n    showDetailColumn(item: any): boolean\n    {\n        if (this.canUseForDetailRow(item) && this.detailRowExpansionState.isExpanded(item)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     *\n     * See AWDataTable\n     *\n     */\n    isOutline(): boolean\n    {\n        return isPresent(this.children) || this.outlineFormat === 'tree';\n    }\n\n    /**\n     *\n     * When dealing with detail column (detail row) and outline all together we need have a\n     * mechanism to tell to the outline \"don't render the next level of items\" and use detail row.\n     * So certain item type needs to be skipped.\n     *\n     * The way we skip those item is we use isVisibleFn condition of the detail row and look ahead\n     * if we should skip next level.\n     *\n     */\n    skipOutlineItem(item: any): boolean\n    {\n        return this.canUseForDetailRow(item);\n    }\n\n    /**\n     *\n     * See AWDaTable\n     *\n     */\n    getValue(data: any, field: string): any\n    {\n        return FieldPath.getFieldValue(data, field);\n    }\n\n    ngOnDestroy()\n    {\n        super.ngOnDestroy();\n        if (this.columnsSubscription) {\n            this.columnsSubscription.unsubscribe();\n        }\n    }\n\n    /**\n     * Makes sure that we also include programmatic column if present. Move them to the correct\n     * array\n     *\n     */\n    private initFrozenColumns(): void\n    {\n        this.colsQuery\n            .filter((col1: DTColumn2Component) => col1.frozen)\n            .forEach((col: DTColumn2Component) =>\n            {\n                col.initialize(this);\n                this.frozenColumns.push(col);\n\n            });\n\n        if (this.frozenColumns.length > 0) {\n            // find last index of column that is internal / programmatic\n\n            let lastInx = this.columns.slice()\n                .reverse()\n                .findIndex((col: DTColumn2Component) => this.isInternalColumn(col));\n\n            if (lastInx !== -1) {\n                let idx = this.columns.length - 1 - lastInx;\n                let internalCols = this.columns.splice(0, idx + 1);\n                this.frozenColumns = [...internalCols, ...this.frozenColumns];\n\n            }\n\n            let hasValidCols = this.columns\n                .findIndex((col: DTColumn2Component) => isBlank(col.width)) === -1;\n\n            assert(hasValidCols || isPresent(this.scrollWidth),\n                'When using [frozen] binding you need specify [width] for each ' +\n                'column or [scrollWidth] on datatable!');\n\n\n            assert(isBlank(this.rowDetailColumn),\n                'You cannot combine aw-dt-detail-column with frozen columns!');\n\n        }\n    }\n\n    /**\n     * Updates current immutable list and trigger change detection. Need to wrap it with\n     * setTimeout as the change can easily come after view checked and this would result some errors\n     *\n     */\n    private updateList(newList: any[]): void\n    {\n        setTimeout(() =>\n        {\n            this.list = newList;\n            this.handleDataChange();\n        });\n    }\n\n    private canUseForDetailRow(item: any): boolean\n    {\n        return isPresent(this.rowDetailColumn) &&\n            (<DTDetailRowComponent>this.rowDetailColumn).showDetailRow(item);\n    }\n}\n\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterViewChecked,\n    AfterViewInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    PLATFORM_ID,\n    Renderer2,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {assert, Environment, isPresent} from '@aribaui/core';\nimport {Datatable2Component} from '../datatable2.component';\nimport {BaseComponent} from '../../../core/base.component';\nimport {Subject, Observable, Subscription, of} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {isPlatformBrowser} from '@angular/common';\nimport {InfiniteScrollComponent} from '../../../core/infite-scroll/infite-scroll.component';\nimport {DomUtilsService} from '../../../core/dom-utils.service';\nimport {DTColumn2Component} from '../column/dt-column.component';\n\n\n/**\n * Please see datatable for more detail description. But the main goal of this wrapper to remove\n * all the common surrounding parts around the datatable and make sure DT can focus only actual\n * header and body structure\n *\n * It is expected that wrapper also provides some code for the sliding up panel containing\n * buttons and other actions that will be used during editing\n *\n *\n * Todo: Extract the expand logic out into some directive or component or just a class\n *\n */\n@Component({\n    selector: 'aw-dt-wrapper',\n    template: `<div [ngClass]=\"dt.styleClass\" [class.dt-full-screen-mode]=\"isFullScreenMode\"\n     [style.width]=\"dt.width\"\n>\n    <div class=\"dt-loading-overlay\" *ngIf=\"dt.loading\"></div>\n    <div class=\"dt-loading-content\" *ngIf=\"dt.loading\">\n        <i [class]=\"'sap-icon u-dt-spin-icon ' + dt.loadingIcon\"></i>\n    </div>\n\n    <div class=\"dt-header\" *ngIf=\"dt.showTableHeader\">\n        <ng-template *ngIf=\"dt.header; then appDefinedHeader else defaultHeader\"></ng-template>\n    </div>\n\n    <!-- DT BODY with table headers and values -->\n    <div class=\"dt-body-wrapper-view\">\n        <ng-template\n            *ngIf=\"dt.hasFrozenColumns(); then dtBodyWithFrozenColumns else dtBodyNoFrozenColumns\">\n        </ng-template>\n    </div>\n\n    <!--<div class=\"dt-footer\" *ngIf=\"footer\">-->\n    <!--&lt;!&ndash; footerArea&ndash;&gt;-->\n    <!--<ng-content select=\"aw-dt-footer\"></ng-content>-->\n    <!--</div>-->\n</div>\n\n<!-- todo: dont activate this if we reached the end of list - -->\n<aw-infinite-scroll #infiniteScroll *ngIf=\"isFullScreenMode\"\n                    [distance]=\"'10%'\"\n                    [fetchSize]=\"dt.state.limit\"\n                    (onLoad)=\"onLazyLoad($event)\">\n</aw-infinite-scroll>\n\n\n<ng-template #appDefinedHeader>\n    <ng-container *ngTemplateOutlet=\"heading;\"></ng-container>\n</ng-template>\n\n<ng-template #defaultHeader>\n    <div class=\"dt-global-filter\">\n        <span class=\"sap-icon icon-filter\"></span>\n    </div>\n\n    <div class=\"dt-global-actions\">\n        <div class=\"dt-action-combo\">\n            <span *ngIf=\"supportFullScreen\" class=\"sap-icon icon-resize\"\n                  (click)=\"toggleFullScreen($event)\"></span>\n\n            <aw-input-field *ngIf=\"dt.showGlobalSearch\" styleClass=\"dt-table-search\"\n                            [(ngModel)]=\"dt.state.currentSearchQuery\"\n                            placeHolder=\"search\"\n                            icon=\"icon-search\"\n                            (ngModelChange)=\"searchTerms.next($event)\">\n            </aw-input-field>\n            <span class=\"ariba-icon icon-more\"></span>\n        </div>\n    </div>\n</ng-template>\n\n<!--\n    Each section frozen/non-frozen is calculated inside table-wrapper in the ngAfterViewChecked, where we set\n    proper width for each frame as well as left coordinates for the right one\n-->\n<ng-template #dtBodyNoFrozenColumns>\n    <!--\n        For non-frozen case we also need to set TRUE as the view is actually frozen and does not\n        scroll.\n        We use this frozenColumns flag inside DT to properly set column index on the header level\n        columnIndex:(frozen ? columnIndex: (columns.length + columnIndex))\n\n        therefore we need to set true even in this case to return real columnIndex since we dont\n        have the second table.\n    -->\n    <ng-container *ngTemplateOutlet=\"dtBody; context:{$implicit: dt.columns, frozenColumns: true }\">\n    </ng-container>\n</ng-template>\n\n<ng-template #dtBodyWithFrozenColumns>\n    <ng-container\n        *ngTemplateOutlet=\"dtBody; context:{$implicit: dt.frozenColumns, frozenColumns: true }\">\n    </ng-container>\n    <ng-container\n        *ngTemplateOutlet=\"dtBody; context:{$implicit: dt.columns, frozenColumns: false }\">\n    </ng-container>\n</ng-template>\n\n\n<ng-template #dtBody let-columns let-frozenColumns=\"frozenColumns\">\n\n    <div #dtContainer class=\"dt-body-wrapper\"\n         [style.width.px]=\"this.calculateFrozenWidth()\"\n         [class.dt-body-unfrozen]=\"dt.hasFrozenColumns() && !frozenColumns\"\n         [class.dt-body-frozen]=\"dt.hasFrozenColumns() && frozenColumns\"\n    >\n\n        <table [ngClass]=\"dt.tableStyleClass\"\n               [style.width]=\"frozenColumns ? null : dt.scrollWidth\"\n               [class.dt-pivot-layout]=\"dt.pivotalLayout\"\n               [class.dt-plain-layout]=\"!dt.pivotalLayout && !dt.isOutline()\">\n\n            <!-- Render TH header rows-->\n            <thead class=\"dt-thead\">\n            <ng-container *ngTemplateOutlet=\"headerRows; context:{$implicit: columns,frozenColumns:frozenColumns }\">\n            </ng-container>\n            </thead>\n\n            <!--\n                Render data rows. For data rows we need to keep tbody tag inside DT table\n                due to Outline\n             -->\n            <ng-container *ngTemplateOutlet=\"bodyRows; context:{$implicit: columns,  frozenColumns:frozenColumns }\">\n            </ng-container>\n        </table>\n    </div>\n</ng-template>\n\n\n<div #dtFullScreenOverlay class=\"dt-full-screen-overlay u-full-screen-element\"></div>\n`,\n    styles: [`.dt-footer,.dt-header{text-align:center;padding:.5em .75em;box-sizing:border-box}.dt-footer{border-top:0}.dt-thead tr{border-width:0}.dt-body-wrapper-view{position:relative}.dt-body-wrapper{overflow:hidden;border:1px solid #d7d7d7}.dt-body-wrapper.dt-body-unfrozen{border-left-color:transparent;position:absolute;top:0;overflow-x:auto}.dt-loading-overlay{position:absolute;background-color:#9b9b9b;width:100%;height:100%;opacity:.1;z-index:1}.dt-loading-content{position:absolute;left:50%;top:25%;z-index:2}.dt-header{width:100%;display:flex;flex-flow:row nowrap;justify-content:space-between;color:#363636;border-bottom:1px solid #f1f1f1;margin-bottom:30px}.dt-header .dt-global-filter{flex:0 0;align-items:flex-start;font-size:18px}.dt-header .dt-global-actions{flex:0 0;align-items:flex-end}.dt-header .dt-action-combo{display:flex;flex-flow:row nowrap;color:#7d7d7d}.dt-header .dt-action-combo .ariba-icon,.dt-header .dt-action-combo .sap-icon{margin-left:15px;font-size:20px;align-self:center;cursor:pointer}.dt-header .dt-action-combo .dt-table-search{border-top-color:transparent;border-left-color:transparent;border-right-color:transparent}.dt-header .dt-action-combo .icon-resize{color:#4a4a4a;font-size:16px;line-height:18px;margin-right:15px}.u-dt-spin-icon{display:inline-block;-webkit-animation:2s linear infinite doSpin;animation:2s linear infinite doSpin}@-webkit-keyframes doSpin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes doSpin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.dt-full-screen-overlay{position:fixed;z-index:100;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transition:all .4s ease-in-out}.dt-full-screen{width:98vw;z-index:120;position:absolute;top:15px;pointer-events:all;transition:opacity .5s ease-in-out}.u-fs-element-out{display:none}`],\n    encapsulation: ViewEncapsulation.None\n\n})\nexport class DTWrapper extends BaseComponent implements AfterViewInit, AfterViewChecked\n{\n\n    /**\n     * Color that is used by full screen div overlay to create expanding effect which needs to have\n     * little tent;\n     *\n     */\n    @Input()\n    expandColorFrom: string = '#f3f3f3';\n\n\n    /**\n     * Color that is used to set after we are in the full screen so our overlay div hide everything\n     * on the page\n     *\n     */\n    @Input()\n    expandColorTo: string = '#FFFFFF';\n\n\n    /**\n     *\n     * Table heading area offers developer to completely override the top bar where we have filters\n     * and others actions.\n     *\n     */\n    @ContentChild('headingArea')\n    heading: TemplateRef<any>;\n\n\n    /**\n     * Renders table headers and wraps them within thead tag\n     */\n    @ContentChild('headerRows')\n    headerRows: TemplateRef<any>;\n\n\n    /**\n     * Renders table body\n     */\n    @ContentChild('bodyRows')\n    bodyRows: TemplateRef<any>;\n\n\n    /**\n     * The same as heading template. We need to remove this dependency on primeNG so far it is using\n     * p-footer\n     */\n    @ContentChild('footerArea')\n    footer: TemplateRef<any>;\n\n\n    /**\n     * Div used to make the full screen expansion effect\n     */\n    @ViewChild('dtFullScreenOverlay')\n    dtFullScreenOverlay: ElementRef;\n\n\n    /**\n     * Reference to infite scroll. We are using this to trigger loading finish event so we can\n     * hide loading animation\n     */\n    @ViewChild('infiniteScroll')\n    infiniteScroll: InfiniteScrollComponent;\n\n\n    /**\n     * In order to debounce the typing we need to use subject\n     *\n     */\n    searchTerms = new Subject<string>();\n\n\n    /**\n     *  Specifies if we are in viewing/editing mode that can browse whole dataset lazily\n     *\n     */\n    isFullScreenMode = false;\n\n    /**\n     * Tells if we can support full screen mode - only available for the browser\n     *\n     */\n    supportFullScreen: boolean = true;\n    querySubscription: Subscription;\n    loadingSub: Subscription;\n    /**\n     *  Saves original bounding rect coordinates before we expand the DT to full screen\n     *\n     */\n    private dtBoundingClientRect: any;\n    /**\n     * Remembers original scroll position before we switch to full screen mode\n     */\n    private originalScrollPosition: number;\n\n    constructor(public env: Environment,\n                private render: Renderer2,\n                private thisElement: ElementRef,\n                private domUtils: DomUtilsService,\n                @Inject(PLATFORM_ID) private platformId: Object,\n                @Inject(forwardRef(() => Datatable2Component))\n                public dt: Datatable2Component)\n    {\n        super(env);\n    }\n\n\n    ngOnInit(): void\n    {\n        super.ngOnInit();\n\n        this.querySubscription = this.searchTerms.pipe(\n            // wait 300ms after each keystroke before considering the term\n            debounceTime(300),\n\n            // ignore new term if same as previous term\n            distinctUntilChanged(),\n\n            switchMap((term: string) => of(term))\n        ).subscribe((term: any) =>\n        {\n            if (isPresent(term)) {\n                this.dt.dataSource.find(term);\n            }\n        });\n\n        this.loadingSub = this.dt.valueChange\n            .subscribe((data: any) => this.loadingFinished());\n    }\n\n\n    /**\n     * Iterates over all columns marked as frozen and retrieve a width so we can update\n     * parent div\n     *\n     */\n    calculateFrozenWidth(): number\n    {\n        if (!this.dt.hasFrozenColumns()) {\n            return null;\n        }\n\n        let fWidth = 0;\n        this.dt.frozenColumns.forEach((col: DTColumn2Component) =>\n        {\n            if (col.maxWidthPx > 0) {\n                fWidth += col.widestCell;\n            } else {\n                fWidth += parseInt(col.width);\n            }\n\n        });\n        return fWidth;\n    }\n\n\n    /**\n     * When having two separate tables we need to make sure that rows of the tables are aligned.\n     *\n     * Therefore this method takes first column from each table read the height of the rows and set\n     * the max height to both rows.\n     *\n     *\n     */\n    alignTablesHeights(frozenView: any, unFrozenView: any): void\n    {\n        assert(isPresent(frozenView) && isPresent(frozenView),\n            'Cant align table views as one of the view is undefined');\n\n        let frozenRows: any[] = frozenView.querySelectorAll('table tr');\n        let unFrozenRows: any[] = unFrozenView.querySelectorAll('table tr');\n\n        assert(frozenRows.length === unFrozenRows.length,\n            'Frozen Column: Two tables does not much!');\n\n        Array.from(frozenRows).forEach((frozen: any, index: number) =>\n        {\n            let h = Math.max(frozen.offsetHeight, unFrozenRows[index].offsetHeight);\n            frozen.style.height = h + 'px';\n            unFrozenRows[index].style.height = h + 'px';\n        });\n    }\n\n    ngAfterViewInit(): void\n    {\n        this.initFullScreen();\n    }\n\n\n    ngAfterViewChecked(): void\n    {\n\n        if (this.dt.hasFrozenColumns()) {\n            let frozenView = this.thisElement.nativeElement.querySelector('.dt-body-frozen');\n            let unFrozenView = this.thisElement.nativeElement.querySelector('.dt-body-unfrozen');\n\n            let frozenWidth = this.calculateFrozenWidth();\n\n            frozenView.style.width = frozenWidth + 'px';\n            if (isPresent(unFrozenView)) {\n                // include border and create indent effect by having 1px white space\n                unFrozenView.style.left = (frozenWidth + 2) + 'px';\n                unFrozenView.style.width = unFrozenView.parentElement.offsetWidth\n                    - frozenView.offsetWidth + 'px';\n\n                this.alignTablesHeights(frozenView, unFrozenView);\n            }\n        }\n    }\n\n    ngOnDestroy(): void\n    {\n        super.ngOnDestroy();\n\n        if (isPresent(this.querySubscription)) {\n            this.querySubscription.unsubscribe();\n        }\n\n        if (isPresent(this.loadingSub)) {\n            this.loadingSub.unsubscribe();\n        }\n    }\n\n\n    /**\n     * FULL SCREEN MODE methods\n     */\n\n    /**\n     *\n     * When fullscreen functionality is enabled this method switches between norml and full screen\n     * mode\n     *\n     */\n    toggleFullScreen(event: any): void\n    {\n        if (this.isFullScreenMode) {\n            this.closeFullScreen(event);\n        } else {\n            this.openFullScreen(event);\n        }\n    }\n\n    /**\n     * To push this component to full screen mode or maybe full page mode we need run following:\n     *\n     *  - Execute expand transformation, where we have additional overlay div that we slowly expand\n     *  and this creates impression the DT is expanding\n     *\n     *  - apply full-screen class on top host element  - in this case its DataTable to switch\n     *  to absolute positioning\n     *\n     *  - make sure we are scrolled all the way up\n     *\n     *  - hide all the elements on the page so their dimension don't interfere with this table.\n     *\n     *\n     */\n    openFullScreen(event: any): void\n    {\n        this.isFullScreenMode = true;\n\n        this.runExpandEffect();\n        this.originalScrollPosition = window.pageYOffset;\n        window.scroll(0, 0);\n        this.toggleFullScreenOnDT(true);\n\n\n        // mark my element in the path that needs to stay\n        let parentNode = this.thisElement.nativeElement.parentNode;\n        while (isPresent(parentNode) && parentNode.tagName !== 'BODY') {\n            parentNode.classList.add('u-full-screen-element');\n            parentNode = parentNode.parentNode;\n        }\n        this.hideNonFullScreenElement(document.body);\n\n        this.dt.state.limit = Math.round(this.calculateLimit());\n        this.dt.dataSource.fetch(this.dt.state);\n\n        // once loaded set back correct page size we use when loading data\n        this.dt.state.limit = this.dt.pageSize;\n    }\n\n    /**\n     *\n     * The same like above method (openFullScreen) but in reverse order.\n     *\n     */\n    closeFullScreen(event: any): void\n    {\n        this.isFullScreenMode = false;\n\n        this.showNonFullScreenElement();\n        this.runCollapseEffect();\n        this.toggleFullScreenOnDT(false);\n\n        this.dt.dataSource.state.limit = this.dt.dataSource.state.displayLimit;\n        this.dt.dataSource.state.offset = 0;\n        this.dt.dataSource.fetch(this.dt.dataSource.state);\n\n        setTimeout(() =>\n        {\n            window.scroll(0, this.originalScrollPosition);\n        }, 300);\n    }\n\n    /**\n     * Applies set of set of css properties to make the DT main component on the page expand to\n     * full page mode and back\n     *\n     * We want to make it with little delay to let other animation finish\n     */\n    toggleFullScreenOnDT(fullScreen: boolean): void\n    {\n        this.dt.el.nativeElement.style.opacity = 0;\n        setTimeout(() =>\n        {\n            if (fullScreen) {\n                this.dt.classList += 'dt-full-screen';\n                this.dt.el.nativeElement.style.opacity = 1;\n\n            } else {\n                this.dt.classList = this.dt.classList.replace('dt-full-screen',\n                    '');\n                this.dt.el.nativeElement.style.opacity = 1;\n            }\n        }, 200);\n\n    }\n\n    /**\n     * Listen for infinite scroll event and request new data from data source\n     *\n     */\n    onLazyLoad(event: any): void\n    {\n        if (event.isLoad) {\n            this.dt.state.offset = event.offset;\n            this.dt.dataSource.fetch(this.dt.state);\n        } else {\n            let dataProvider = this.dt.dataSource.dataProvider;\n            let data = dataProvider.dataChanges.getValue();\n            dataProvider.dataChanges.next(data.slice(0, event.offset));\n        }\n    }\n\n    /**\n     * Creates animation effect to make it feel like the element (in this case DT) is expanding\n     * from the middle to the full page mode.\n     *\n     * We take the dimension of the table then it is scaled slowly to the full page\n     */\n    private runExpandEffect()\n    {\n        this.dtBoundingClientRect = this.thisElement.nativeElement.getBoundingClientRect();\n\n        this.updateElement();\n        this.dtFullScreenOverlay.nativeElement.style.backgroundColor = this.expandColorFrom;\n        this.dtFullScreenOverlay.nativeElement.style.opacity = 1;\n        this.applyTransformation(true);\n\n        setTimeout(() =>\n        {\n            this.dtFullScreenOverlay.nativeElement.style.backgroundColor = this.expandColorTo;\n        }, 300);\n    }\n\n    /**\n     * Applies the transformation and scale the helper div (overlay) down to make it look like\n     * it collapses\n     */\n    private runCollapseEffect()\n    {\n        this.updateElement();\n        this.applyTransformation(false);\n\n\n        setTimeout(() =>\n        {\n            this.updateElement();\n            this.dtFullScreenOverlay.nativeElement.style.opacity = 0;\n\n        }, 200);\n\n        setTimeout(() =>\n        {\n            this.updateElement(this.dtBoundingClientRect.left, this.dtBoundingClientRect.top, 0,\n                0);\n        }, 400);\n    }\n\n    /**\n     * DFS  - to go thru all the element under BODY and remove them from the page.\n     *\n     */\n    private hideNonFullScreenElement(parentElement: any): void\n    {\n        if (this.thisElement.nativeElement.parentNode === parentElement) {\n            return;\n        }\n\n        for (let i = 0; i < parentElement.children.length; i++) {\n            let element = parentElement.children[i];\n            if (this.needTraverseDown(element)) {\n                this.hideNonFullScreenElement(element);\n\n            } else if (!element.classList.contains('dt-full-screen')) {\n                element.classList.add('u-fs-element-out');\n            }\n        }\n    }\n\n    /**\n     * Put all the element that were previously removed by hideNonFullScreenElement() back\n     */\n    private showNonFullScreenElement(): void\n    {\n        Array.from(document.querySelectorAll('.u-fs-element-out'))\n            .forEach((elem: any) => elem.classList.remove('u-fs-element-out'));\n    }\n\n    /**\n     * @Internal\n     *\n     */\n    private needTraverseDown(element: any): boolean\n    {\n        return isPresent(element) && element.tagName !== 'SCRIPT' &&\n            element.classList.contains('u-full-screen-element') &&\n            !element.classList.contains('dt-full-screen');\n\n    }\n\n    /**\n     * When we enter full screen /page mode when need to calculate how many rows to load initially\n     *\n     */\n    private calculateLimit(): number\n    {\n        let browserH = this.domUtils.browserDimentions().height;\n        let rowH = this.dt.el.nativeElement.querySelector('tbody tr:first-child').offsetHeight;\n\n        return (isPresent(rowH) && rowH > 0) ? (browserH / rowH) + 20 : 50;\n    }\n\n    /**\n     * @Internal\n     *\n     */\n    private updateElement(l: number = this.dtBoundingClientRect.left,\n                          t: number = this.dtBoundingClientRect.top,\n                          w: number = this.dtBoundingClientRect.width,\n                          h: number = this.dtBoundingClientRect.height): void\n    {\n        this.dtFullScreenOverlay.nativeElement.style.left = l + 'px';\n        this.dtFullScreenOverlay.nativeElement.style.top = t + 'px';\n        this.dtFullScreenOverlay.nativeElement.style.width = w + 'px';\n        this.dtFullScreenOverlay.nativeElement.style.height = h + 'px';\n    }\n\n    /**\n     * @Internal\n     *\n     */\n    private applyTransformation(expand: boolean): void\n    {\n        let x, y, tx, ty;\n        if (expand) {\n            x = window.innerWidth / this.dtBoundingClientRect.width;\n            y = window.innerHeight / this.dtBoundingClientRect.height;\n            tx = (window.innerWidth / 2 - this.dtBoundingClientRect.width / 2\n                - this.dtBoundingClientRect.left) / x;\n            ty = (window.innerHeight / 2 - this.dtBoundingClientRect.height / 2\n                - this.dtBoundingClientRect.top) / y;\n\n        } else {\n            x = 1;\n            y = 1;\n            tx = this.dtBoundingClientRect.left;\n            ty = this.dtBoundingClientRect.top;\n        }\n\n        this.dtFullScreenOverlay.nativeElement.style.transform =\n            'scaleX(' + x + ') scaleY(' + y + ') translate3d(' + (tx) + 'px, ' + (ty) + 'px, 0px)';\n    }\n\n\n    /**\n     * INFINITE SCROLLING METHODS\n     */\n\n    private initFullScreen(): void\n    {\n        if (!isPlatformBrowser(this.platformId)) {\n            this.supportFullScreen = false;\n            return;\n        }\n\n        this.render.appendChild(document.body, this.dtFullScreenOverlay.nativeElement);\n    }\n\n    /**\n     * When loading is finished mark loading icon is done so we can hide it. I am using little\n     * delay to make the animation visible\n     */\n    private loadingFinished(): void\n    {\n        if (isPresent(this.infiniteScroll)) {\n            setTimeout(() => this.infiniteScroll.complete(), 200);\n\n        }\n    }\n}\n","import {AfterViewInit, Directive, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\nimport {DTColumn2Component} from '../column/dt-column.component';\nimport {isPresent} from '@aribaui/core';\n\n/**\n *\n * This directive is responsible for checking and setting the widest content width onto\n * Column component as the widestCell property.\n *\n * We use this directive inside dt-column.component to store a current width for each td,th\n *\n *\n */\n@Directive({\n    selector: '[dtMaxWidth]'\n})\nexport class SetCellMaxWidthDirective implements OnInit, AfterViewInit\n{\n\n    @Input()\n    dtMaxWidth: number;\n\n    constructor(private element: ElementRef,\n                private render: Renderer2,\n                private td: DTColumn2Component)\n    {\n    }\n\n\n    ngOnInit(): void\n    {\n\n    }\n\n    ngAfterViewInit(): void\n    {\n        // console.log('Cell Max Width: ' + this.dtMaxWidth, this.dtMaxWidth > 0);\n        if (isPresent(this.dtMaxWidth) && this.dtMaxWidth > 0) {\n            let inlineData = this.element.nativeElement.querySelector('.dt-col-cell-data');\n            if (isPresent(inlineData)) {\n                inlineData.style.whiteSpace = 'nowrap';\n                inlineData.style.display = 'inline-block';\n                let cellWidth = inlineData.offsetWidth; // td\n                inlineData.style.whiteSpace = 'normal';\n                inlineData.style.display = 'inline';\n\n                if (!this.isInThresHold(cellWidth)) {\n                    return;\n                }\n\n                cellWidth += this.tdPadding();\n                if (cellWidth > this.td.widthPx) {\n                    if (cellWidth < this.dtMaxWidth) {\n                        this.td.widestCell = cellWidth > this.td.widestCell ? cellWidth :\n                            this.td.widestCell;\n\n                    } else if (cellWidth >= this.dtMaxWidth) {\n                        this.td.widestCell = (this.dtMaxWidth > this.td.widestCell)\n                            ? this.dtMaxWidth : this.td.widestCell;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * Is the new width the same as the one already set on the column? If yes then probably\n     * new content does not differ that much. We still keep certain threshold as the new content\n     * width might differ 1 or 2 pixes depending how set the css.\n     *\n     * To make sure we resize column only if necessary because it could be original size\n     * is 400px but the new one is 401px since somewhere add some extra border we have this\n     * safe threshold\n     *\n     */\n    isInThresHold(newWidth: number): boolean\n    {\n        if (this.td.widestCell > 0) {\n            return Math.abs(this.td.widestCell - newWidth) > 3 && newWidth > this.td.widestCell;\n        }\n        return true;\n    }\n\n\n    private tdPadding(): number\n    {\n        let computedStyle = getComputedStyle(this.element.nativeElement);\n        let cell = parseInt(computedStyle.paddingLeft) || 0;\n        cell += parseInt(computedStyle.paddingRight) || 0;\n        cell += parseInt(computedStyle.borderRightWidth) || 0;\n        cell += parseInt(computedStyle.borderLeftWidth) || 0;\n\n        // plus give it some little space around the text so it nots px to px inner width of the td\n        // cuz it could wrap\n        cell += 5;\n\n        return cell;\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\n\nimport {\n    Directive, ElementRef, forwardRef, Inject, Input, NgZone, OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {Datatable2Component} from '../datatable2.component';\nimport {DomUtilsService} from '../../../core/dom-utils.service';\nimport {isPresent} from '@aribaui/core';\nimport {DragDirection, DragEvents, DropPosition} from '../aw-datatable';\n\n\n/**\n * Directive used inside DT in order to support table rows re-ordering. This manages all the\n * D&D necessary logic for this functionality.\n *\n * [dtDraggableRow] is used inside the `rowTemplate` like this:\n *\n *\n * ```html\n *\n * <ng-template #rowTemplate let-rowData let-even='event\" let-odd=\"odd\" let-rowIndex=\"rowIndex\"\n *              let-nestingLevel=\"nestingLevel\" let-colsToRender=\"colsToRender\">\n *\n *     <tr #rowElement dtDraggableRow [dndRowIndex]=\"rowIndex\"\n *          class=\"dt-body-row\"\n *\n *\n *\n * ```\n *\n * which enabled or disables based on the used DT binding [dndRowEnabled]. By default its disabled.\n *\n *\n *\n */\n@Directive({\n    selector: '[dtDraggableRow]'\n})\nexport class DTDraggableRowDirective implements OnInit, OnDestroy\n{\n\n    /**\n     *\n     * Tells the directive if we enable middle row zone to create an effect that we are dropping\n     * into the row. Used for outline DT mainly.\n     *\n     */\n    @Input()\n    dropIntoEnabled: boolean = false;\n\n    /**\n     * Current TR index number\n     *\n     */\n    @Input()\n    dndRowIndex: number = 0;\n\n    /**\n     * Holds information about our dragging direction UP and DOWN in order to assign correct style\n     * that highlights the row at the top or bottom\n     *\n     */\n    private dragDir: DragDirection = DragDirection.None;\n\n    /**\n     * Indicates that we dragged our row and stopped in the middle of the other row\n     *\n     */\n    private inMiddle: boolean = false;\n\n    /**\n     *\n     * Current drag Y coordinates which is used together with the dragDir when assinging dragging\n     * direction.\n     *\n     */\n    private dragY: number = 0;\n\n    /**\n     * listeners handlers here - the return from .bind(this).\n     */\n    private eventHandlers: { [name: string]: any };\n\n    constructor(private element: ElementRef,\n                @Inject(forwardRef(() => Datatable2Component))\n                private dt: Datatable2Component,\n                private domUtils: DomUtilsService,\n                private ngZone: NgZone)\n    {\n    }\n\n\n    ngOnInit(): void\n    {\n        if (this.dt.dndRowEnabled) {\n            this.setupEventListeners();\n        }\n    }\n\n\n    ngOnDestroy(): void\n    {\n        if (this.dt.dndRowEnabled) {\n            this.releaseEventListeners();\n        }\n    }\n\n    /**\n     * Setups listeners and returns handle to them so we can later on unsubscribe.\n     */\n    private setupEventListeners(): void\n    {\n        this.ngZone.runOutsideAngular(() =>\n        {\n            this.eventHandlers = {};\n            this.eventHandlers['mousedown'] = this.onMouseDownEvent.bind(this);\n            this.element.nativeElement.addEventListener('mousedown',\n                this.eventHandlers['mousedown']);\n\n            this.eventHandlers['dragstart'] = this.onDragStartEvent.bind(this);\n            this.element.nativeElement.addEventListener('dragstart',\n                this.eventHandlers['dragstart']);\n\n            this.eventHandlers['dragover'] = this.onDragOverEvent.bind(this);\n            this.element.nativeElement.addEventListener('dragover',\n                this.eventHandlers['dragover']);\n\n            this.eventHandlers['dragleave'] = this.onDragLeaveEvent.bind(this);\n            this.element.nativeElement.addEventListener('dragleave',\n                this.eventHandlers['dragleave']);\n\n            this.eventHandlers['drop'] = this.onDropEvent.bind(this);\n            this.element.nativeElement.addEventListener('drop',\n                this.eventHandlers['drop']);\n\n            this.eventHandlers['dragend'] = this.onDragEndEvent.bind(this);\n            this.element.nativeElement.addEventListener('dragend',\n                this.eventHandlers['dragend']);\n        });\n    }\n\n    /**\n     * Removes all the created listeners inside destroy() callback\n     */\n    private releaseEventListeners(): void\n    {\n        DragEvents.forEach((name: string) =>\n        {\n            document.removeEventListener('name', this.eventHandlers[name]);\n        });\n    }\n\n\n    /**\n     *\n     * This is first event where we:\n     *\n     *  - Mark element draggable to enable D&D\n     *  - Set click position relative to the middle of the current row\n     *      This is mainly needed when we are trying to calculate something for\n     *      dropInto row (outline)\n     *\n     * event.target usually contains reference to TD element\n     */\n    private onMouseDownEvent(event: any): void\n    {\n        if (event.altKey && this.domUtils.hasParent(event.target, '.dt-row-draggable')) {\n            this.element.nativeElement.draggable = true;\n            let elToBeDragged = this.domUtils.elementDimensions(event.target);\n            this.dt.env.setValue('ddClickDeviance', (elToBeDragged.height / 2) - event.offsetY);\n\n        } else {\n            this.element.nativeElement.draggable = false;\n\n        }\n    }\n\n    /**\n     * This is second triggered event when the actual dragging starts. Here we need to disable\n     * dragged row and save information that are common to a table.\n     *\n     * Marking row disabled with the style .dt-row-dragging using setTimeout is needed as\n     * if we would go without it then D&D framework would create a copy of row in disabled state.\n     * Now we grab a row with active state and after a 200ms delay we disable the original row.\n     *\n     */\n    private onDragStartEvent(event: any): void\n    {\n        setTimeout(() =>\n        {\n            if (isPresent(event.target.classList)) {\n                event.target.classList.add('dt-row-dragging');\n            }\n        }, 200);\n\n        this.dt.env.setValue('isDragging', true);\n        this.dt.env.setValue('dndId', this.dndRowIndex);\n        event.dataTransfer.setData('text', this.dndRowIndex);\n    }\n\n    /**\n     *\n     * This events happens anytime as we drag over rows. This event triggered after certain\n     * delay. In here we calculate the mouse movement to identify if we are going UP or DOWN.\n     *\n     * This is mainly needed to mark a row with the correct line on TOP or BOTTOM to visually\n     * show a user where we are.\n     *\n     * Once we know the direction and the drop target is valid we mark the row with correct class\n     * that does the trick\n     */\n    private onDragOverEvent(event: any): void\n    {\n        event.dataTransfer.dropEffect = 'move';\n        if (this.dragY < event.pageY) {\n            this.dragDir = DragDirection.Down;\n        } else if (this.dragY > event.pageY) {\n            this.dragDir = DragDirection.Up;\n        }\n        // dont set again unless its different\n        if (this.dragY !== event.pageY) {\n            this.dragY = event.pageY;\n        }\n\n        if (this.isValidDropTarget(event)) {\n            // todo test this preventDefault() so it does not create some sideeffect\n            event.preventDefault();\n            this.markRowWithClass(event, this.domUtils.closest(event.target, 'tr'));\n        }\n    }\n\n    /**\n     * This is finishing event just before D&D is done. It takes current information and\n     * broadcast them to the DT so DT can do necessary row reordering\n     *\n     *\n     */\n    private onDropEvent(event: any): void\n    {\n        this.clearClasses(event.target.parentElement);\n        // event.preventDefault();\n\n        let origIndx = this.dt.env.getValue('dndId');\n        let dropPos: DropPosition = this.inMiddle ? DropPosition.Into : (\n            this.dragDir === DragDirection.Up ? DropPosition.Before : DropPosition.After\n        );\n        this.dt.onDnDRowDrop(origIndx, this.dndRowIndex, dropPos);\n\n        this.inMiddle = false;\n        this.dragY = 0;\n    }\n\n    /**\n     * Every time we drag over the element we apply some classes to the it. this method does the\n     * opposite which is to remove everything so we are ready for the next row\n     *\n     *\n     */\n    private onDragLeaveEvent(event: any): void\n    {\n        let tr = this.domUtils.closest(event.target, 'tr');\n        this.clearClasses(tr);\n\n        this.dt.env.deleteValue('dndOnHoldIndex');\n    }\n\n    /**\n     *\n     * This is last event within D&D flow. Mainly used to clean up all the resource that has not\n     * been clean up already inside onDropEvent.\n     *\n     */\n    private onDragEndEvent(event: any): void\n    {\n        if (isPresent(event.target.classList)) {\n            event.target.classList.remove('dt-row-dragging');\n        }\n\n        this.clearClasses(event.target);\n        this.element.nativeElement.draggable = false;\n        this.dt.env.deleteValue('isDragging');\n        this.dt.env.deleteValue('dndId');\n        this.dt.env.deleteValue('ddClickDeviance');\n    }\n\n\n    /**\n     * Assign CSS classes to the row to create an highlighting effect to capture current position\n     * for the user.\n     *\n     * Based on the Drag direction we either apply\n     * css class that creates a line on top or bottom.  Only for the dropInto functionality we\n     * need to calculate some more to identify if we are really in the middle of the row.\n     *\n     * DropInto:\n     * ---------\n     *\n     * Initially we captured a position (in mousedown) the distance to the middle of the row and\n     * this we are using here with some threshold of 2 pixes so we dont have to be exactly on pixel\n     * perfect.\n     *\n     * - let currentTrCenter = this.domUtils.elementDimensions(activeRow).height / 2;\n     *      Read center of current row\n     *\n     * - let draggedTrCenter = event.offsetY + this.dt.env.getValue('ddClickDeviance');\n     *      Read mouse coordinates relative to current row/td and add to it our deviation.\n     *\n     *\n     */\n    private markRowWithClass(event: any, activeRow: any): void\n    {\n\n        this.clearClasses(activeRow);\n\n        // Check if drag item is in the middle of other row\n        let currentTrCenter = this.domUtils.elementDimensions(activeRow).height / 2;\n        let draggedTrCenter = event.offsetY + this.dt.env.getValue('ddClickDeviance');\n\n        if (this.dropIntoEnabled) {\n            this.inMiddle = Math.abs(currentTrCenter - draggedTrCenter) < 2;\n        }\n\n        if (this.inMiddle) {\n            activeRow.classList.add(DragDirection.Middle);\n\n        } else {\n            activeRow.classList.add(this.dragDir);\n        }\n    }\n\n    /**\n     *\n     * Drop target must be only another TR and it cannot be the element itself the one we are\n     * dragging and it does not make sense to allow to drop to the same position we started from\n     *\n     */\n    private isValidDropTarget(event: any): boolean\n    {\n        let origInx = this.dt.env.getValue('dndId');\n        let siblingRow = this.dndRowIndex - origInx;\n\n        return event.target.parentElement.tagName === 'TR' && this.dndRowIndex !== origInx &&\n            !(siblingRow === 1 && this.dragDir === DragDirection.Up) &&\n            !(siblingRow === -1 && this.dragDir === DragDirection.Down);\n    }\n\n\n    /**\n     *  private\n     *\n     */\n    private clearClasses(tr: any): void\n    {\n        tr.classList.remove('dt-drag-row-top');\n        tr.classList.remove('dt-drag-row-bottom');\n        tr.classList.remove('dt-drag-row-both');\n    }\n\n    /**\n     *  private\n     *\n     */\n    private dragDirToString(): string\n    {\n        switch (this.dragDir) {\n            case DragDirection.Up:\n                return 'Up';\n            case DragDirection.Down:\n                return 'Down';\n            default:\n                return 'Not Sure';\n        }\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {AWCoreComponentModule} from '../../core/core.module';\nimport {AWOutlineForModule} from '../outline/outline-for.module';\nimport {Datatable2Component} from './datatable2.component';\nimport {DTWrapper} from './table-wrapper/table-wrapper.component';\nimport {DTColumn2Component} from './column/dt-column.component';\nimport {AWInputFieldModule} from '../input-field/input-field.module';\nimport {DTHeaderComponent2} from './header/header.component';\nimport {DTDetailRowComponent} from './column/detail-row/dt-detail-row.component';\nimport {\n    DTDetailRowExpanderComponent\n} from './column/detail-row-expander/dt-detail-row-expander.component';\nimport {\n    DTMultiSelectColumnComponent\n} from './column/multi-select/dt-multi-select-column.component';\nimport {AWCheckBoxModule} from '../checkbox/check-box.module';\nimport {\n    DTSingleSelectColumnComponent\n} from './column/single-select/dt-single-select-column.component';\nimport {AWRadioButtonModule} from '../radio-button/radio-button.module';\nimport {SetCellMaxWidthDirective} from './directives/dt-cell-directives';\nimport {DTDraggableRowDirective} from './directives/dt-draggable-row.directive';\n\n\n@NgModule({\n    declarations: [\n        Datatable2Component,\n        DTWrapper,\n        DTColumn2Component,\n        DTHeaderComponent2,\n        DTDetailRowComponent,\n        DTDetailRowExpanderComponent,\n        DTMultiSelectColumnComponent,\n        DTSingleSelectColumnComponent,\n        DTDraggableRowDirective,\n        SetCellMaxWidthDirective\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        AWCoreComponentModule,\n        AWCheckBoxModule,\n        AWOutlineForModule,\n        AWRadioButtonModule,\n        AWInputFieldModule\n    ],\n    entryComponents: [\n        DTDetailRowExpanderComponent,\n        DTMultiSelectColumnComponent,\n        DTSingleSelectColumnComponent\n    ],\n    exports: [\n        Datatable2Component,\n        DTColumn2Component,\n        AWOutlineForModule,\n        DTHeaderComponent2,\n        DTDetailRowComponent\n    ],\n    providers: []\n})\nexport class AWDatatable2Module\n{\n}\n\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component} from '@angular/core';\n\n/**\n * An confirmation header area.\n *\n * See {@link ConfirmationComponent} for more explanation.\n */\n@Component({\n    selector: 'aw-confirmation-header',\n    template: '<ng-content></ng-content>'\n})\nexport class ConfirmationHeaderComponent\n{\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component} from '@angular/core';\n\n/**\n * An confirmation header area.\n *\n * See {@link ConfirmationComponent} for more explanation.\n */\n@Component({\n    selector: 'aw-confirmation-footer',\n    template: '<ng-content></ng-content>'\n})\nexport class ConfirmationFooterComponent\n{\n}\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ContentChild, EventEmitter, Input, Output} from '@angular/core';\nimport {Environment, isPresent} from '@aribaui/core';\nimport {ModalContainer} from '../../core/modal-service/modal-container';\nimport {ConfirmationHeaderComponent} from './confirmation-header.component';\nimport {ConfirmationFooterComponent} from './confirmation-footer.component';\n\n/**\n * Confirmation Component is a specific version of the dialog where it supports confirm and cancel\n * functionality. It behaves like a dialog, is modal, and not closable by default.\n *\n * There are three types of popup.\n *   1.  a regular dialog box that has header, body and footer. It's the most customizable.\n *   2.  a confirmation box is similar to a dialog box but has accept and reject action buttons.\n *   3.  a overlay, which is a very basic popup with what you put inside.\n *       It doesn't have header and footer.\n *\n * There are two ways to use any popup component.\n *   1.  Either directly by using component, aw-dialog, aw-confirmation or aw-overlay\n *   2.  or the ModalService  service.open(<ConfirmationComponent>), service.close()\n *\n * Usage:\n *    1.  Using ModalService directly to display a modal popup. This usage is a quick way to show\n *        a confirmation to the user.\n *\n *          this.modalService.open<ConfirmationComponent>(ConfirmationComponent, {\n *                        title: 'Confirmation',\n *                        body: ` Are you sure ? `,\n *                        width: 300,\n *                        onConfirm: () => {\n *                              this.confirmAction();\n *                        },\n *                        onCancel: () => {\n *                              this.cancelAction();\n *                        }\n *           });\n *\n *\n *   2.   Use the component inside your template.\n *\n *          @Component({\n *                selector: 'aw-page' ,\n *                           template: `\n *                              <aw-confirmation [title]=\"'Confirmation'\"\n *                                      [(visible)]=\"display\"\n *                                     (onConfirm)=\"confirmAction()\"\n *                                    (onCancel)=\"cancelAction()\">\n *                                       <i class=\"sap-icon icon-alert\"></i>\n *                                       Are you sure you want to delete your hard drive?\n *                            </aw-confirmation>\n *\n *                                   <aw-button [size]=\"'small'\" (click)=\"open()\">\n *                                       Open Confirmation\n *                                   </aw-button>\n *                  `\n *         export class MyPageComponent implements OnInit {\n *\n *                     display: boolean = false;\n *\n *                     confirmAction: string;\n *\n *                     constructor(private modalService: ModalService) {\n *                          super();\n *                       }\n *                     ngOnInit() { }\n *\n *                     open() {\n *                        this.display = true;\n *                     }\n *\n *                     confirmAction()  {\n *                        this.confirmAction = \"confirmed\";\n *                      }\n *\n *                      close() {\n *                         this.display = false;\n *                      }\n *\n *                      cancelAction() {\n *                          this.confirmAction = \"canceled\";\n *                      }\n *\n *       }\n *\n *\n */\n@Component({\n    selector: 'aw-confirmation',\n    template: `<aw-dialog [title]=\"title\" [(visible)]=\"visible\"\n           [modal]=\"true\" [closable]=\"closable\" [width]=\"width\" [height]=\"height\"\n           [styleClass]=\"styleClass\" [appendTo]=\"appendTo\" (onOpen)=\"open()\" (onClose)=\"close()\">\n\n    <aw-dialog-header *ngIf=\"hasHeader()\">\n        <ng-content select=\"aw-confirmation-header\"></ng-content>\n    </aw-dialog-header>\n\n    {{body}}\n    <ng-content></ng-content>\n\n\n    <aw-dialog-footer *ngIf=\"hasFooter(); else defaultFooter\">\n        <ng-content select=\"aw-confirmation-footer\"></ng-content>\n    </aw-dialog-footer>\n\n    <ng-template #defaultFooter>\n        <aw-dialog-footer>\n            <aw-button name=\"confirm\" [style]=\"'primary'\" (action)=\"confirm()\">\n                {{confirmActionLabel}}\n            </aw-button>\n\n            <aw-button name=\"cancel\" [style]=\"'secondary'\" (action)=\"cancel()\">\n                {{cancelActionLabel}}\n            </aw-button>\n\n        </aw-dialog-footer>\n    </ng-template>\n\n</aw-dialog>\n`,\n    styles: [`.confirmation-footer-separator{border-top:1px solid #d7d7d7;height:14px}`]\n})\nexport class ConfirmationComponent extends ModalContainer\n{\n    /**\n     * Title for the Dialog.  if title and 'TitleTemplate' are both set, titleTemplate takes\n     * precedence.\n     */\n    @Input()\n    title: string;\n\n    /**\n     * Body section for Dialog. Caller should use either the body string, or content projection\n     * to add values to the dialog. If both are used, they will both show up.\n     */\n    @Input()\n    body: string;\n\n    /**\n     * If you are not using custom buttons you can pass a label to OK action\n     *\n     * Default value is OK\n     */\n    @Input()\n    confirmActionLabel: string;\n\n    /**\n     * If you are not using custom buttons you can pass a label to Cancel action\n     *\n     * Default value is OK\n     */\n    @Input()\n    cancelActionLabel: string;\n\n\n    /**\n     * support two way data binding on visible property.\n     */\n    @Output()\n    visibleChange: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Whether there's an x at the top right that makes the dialog closable.\n     */\n    @Input()\n    closable: boolean = false;\n\n    /**\n     * Target element to attach the dialog. \"body\" or local ng-template variable are valid.\n     */\n    @Input()\n    appendTo: any;\n\n    /**\n     * Event fired when dialog is closed.\n     */\n    @Output()\n    onClose: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Event fired when the dialog is opened.\n     */\n    @Output()\n    onOpen: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Fired when user clicked on confirm button.\n     */\n    @Output()\n    onConfirm: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Fired when user clicked on cancel button.\n     */\n    @Output()\n    onCancel: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Header component. Usually contains the title.\n     */\n    @ContentChild(ConfirmationHeaderComponent) header: ConfirmationHeaderComponent;\n\n    /**\n     * Dialog footer. Usually contains buttons\n     */\n    @ContentChild(ConfirmationFooterComponent) footer: ConfirmationFooterComponent;\n\n\n    constructor(public env: Environment)\n    {\n        super(env);\n\n        this.width = 400;\n        this.height = 'auto';\n        // Todo: internationalize.\n        this.confirmActionLabel = 'Confirm';\n        this.cancelActionLabel = 'Cancel';\n    }\n\n    /**\n     * open confirmation.\n     */\n    open()\n    {\n        this.visible = true;\n        this.onOpen.emit();\n\n        this.visibleChange.emit(true);\n    }\n\n    /**\n     * close confirmation.\n     */\n    close()\n    {\n        this.visible = false;\n        this.onClose.emit();\n\n        // Important to make sure change is set on parent binding.\n        // Otherwise, the variable and dialog open/close state can be out\n        // of sync and we wouldn't trigger change detection.\n        this.visibleChange.emit(false);\n    }\n\n    /**\n     * Does the confirmation have header content?\n     */\n    hasHeader(): boolean\n    {\n        return isPresent(this.header);\n    }\n\n    /**\n     * Does the confirmation have footer content?\n     */\n    hasFooter(): boolean\n    {\n        return isPresent(this.footer);\n    }\n\n    /**\n     * Confirm action.\n     */\n    confirm()\n    {\n        this.close();\n        this.onConfirm.emit();\n    }\n\n    /**\n     * Cancel action.\n     */\n    cancel()\n    {\n        this.close();\n        this.onCancel.emit();\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AWCoreComponentModule} from '../../core/core.module';\nimport {ConfirmationComponent} from './confirmation.component';\nimport {ConfirmationHeaderComponent} from './confirmation-header.component';\nimport {ConfirmationFooterComponent} from './confirmation-footer.component';\nimport {ModalComponent} from '../../core/modal-service/modal/modal.component';\nimport {AWDialogModule} from '../dialog/dialog.module';\nimport {AWButtonModule} from '../button/button.module';\n\n@NgModule({\n    declarations: [\n        ConfirmationComponent,\n        ConfirmationHeaderComponent,\n        ConfirmationFooterComponent\n    ],\n    imports: [\n        CommonModule,\n        AWCoreComponentModule,\n        AWDialogModule,\n        AWButtonModule\n    ],\n    entryComponents: [\n        ModalComponent,\n        ConfirmationComponent,\n        ConfirmationHeaderComponent,\n        ConfirmationFooterComponent\n    ],\n    exports: [\n        ConfirmationComponent,\n        ConfirmationHeaderComponent,\n        ConfirmationFooterComponent\n    ],\n    providers: []\n})\nexport class AWConfirmationModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, ElementRef, Input, SimpleChanges} from '@angular/core';\nimport {Environment, isBlank, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../core/base.component';\n\n/**\n *\n * Container panel providing scrolling functionality for its children. You can configure this\n * container to let it to scroll its content either horizontally, vertically or let the content\n * wrap.\n *\n *\n * Usage is pretty simple:\n *\n *  ### Example using horizontal scroll (default behavior):\n *\n *  ```\n *            <aw-scrollable>\n *                  <w-demo-card> Card 1</w-demo-card>\n *                  <w-demo-card> Card 2</w-demo-card>\n *                  <w-demo-card> Card 3</w-demo-card>\n *                  <w-demo-card> Card 4</w-demo-card>\n *                  <w-demo-card> Card 5</w-demo-card>\n *                  <w-demo-card> Card 6</w-demo-card>\n *                  <w-demo-card> Card 7</w-demo-card>\n *                  <w-demo-card> Card 8</w-demo-card>\n *                  <w-demo-card> Card 9</w-demo-card>\n *              </aw-scrollable>\n *\n *  ```\n *\n *  ### Example using vertical scroll:\n *\n *  ```\n *            <aw-scrollable [direction]=\"'vertical'\" [height]=\"'40vh'\">\n *                  <w-demo-card> Card 1</w-demo-card>\n *                  <w-demo-card> Card 2</w-demo-card>\n *                  <w-demo-card> Card 3</w-demo-card>\n *                  <w-demo-card> Card 4</w-demo-card>\n *                  <w-demo-card> Card 5</w-demo-card>\n *                  <w-demo-card> Card 6</w-demo-card>\n *                  <w-demo-card> Card 7</w-demo-card>\n *                  <w-demo-card> Card 8</w-demo-card>\n *                  <w-demo-card> Card 9</w-demo-card>\n *              </aw-scrollable>\n *\n * ```\n *\n *  ### Example scrolling is disabled and content wraps and centers:\n *\n *  ```\n *            <aw-scrollable [direction]=\"'none'\" [alignment]=\"'center'\">\n *                  <w-demo-card> Card 1</w-demo-card>\n *                  <w-demo-card> Card 2</w-demo-card>\n *                  <w-demo-card> Card 3</w-demo-card>\n *                  <w-demo-card> Card 4</w-demo-card>\n *                  <w-demo-card> Card 5</w-demo-card>\n *                  <w-demo-card> Card 6</w-demo-card>\n *                  <w-demo-card> Card 7</w-demo-card>\n *                  <w-demo-card> Card 8</w-demo-card>\n *                  <w-demo-card> Card 9</w-demo-card>\n *              </aw-scrollable>\n *  ```\n *\n * ### Height property:\n *\n * When using \"horizontal scrolling\" it set \"flexbox-direction\" to \"row\" where height\n * is set automatically based on its content. The height should be always 100% when using\n * this in parent container.\n *\n * If \"vertical scrolling\" is used you need to make sure that:\n *   - your parent container sets the boundaries with correctly set width and height\n *   otherwise it will use 100% of the viewport\n *   - if used as standalone you need to limit the height otherwise it will expand to 100% of\n *   the document\n *\n *\n *\n *\n */\n@Component({\n    selector: 'aw-scrollable',\n    template: `<div class=\"w-scrollable\" [ngClass]=\"layoutClass\" [style.width]=\"width\"\n     [style.height]=\"height\">\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`.w-scrollable{display:flex;display:-webkit-flex;backface-visibility:hidden;-webkit-backface-visibility:hidden;will-change:overflow}.w-scrollable /deep/>*{flex:0 0 auto;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;margin:10px}.u-scrollable-fh{flex-flow:row nowrap;overflow-x:auto;overflow-y:hidden}.u-scrollable-fv{flex-flow:column nowrap;overflow-x:hidden;overflow-y:auto}.u-scrollable-fb{flex-flow:row nowrap;overflow-x:auto;overflow-y:auto}.u-scrollable-fv-row{flex-flow:row wrap;overflow-x:hidden;overflow-y:auto}.u-scrollable-fn{flex-flow:row wrap}.u-scrollable-al{justify-content:flex-start;-webkit-justify-content:flex-start}.u-scrollable-ar{justify-content:flex-end;-webkit-justify-content:flex-end}.u-scrollable-ac{justify-content:center;-webkit-justify-content:center}.u-scrollable-aj,.u-scrollable-aj-around{justify-content:space-between;-webkit-justify-content:space-between}`]\n})\nexport class ScrollableContainerComponent extends BaseComponent\n{\n\n\n    /**\n     * Defines scrolling direction of the container meaning tells which overflow axies will be\n     * disabled or enabled.\n     *\n     * Default value is \"horizontal\": Here we lock overflow-y and overflow-x set to auto.\n     *\n     * When scrolling direction is \"vertical\" please make sure you maintain correct height and\n     * width.\n     *\n     */\n    @Input()\n    direction: ScrollingDirection = 'horizontal';\n\n    /**\n     * Defines how flexbox container items should be aligned. Default behavior is LEFT\n     *\n     */\n    @Input()\n    alignment: ContainerItemsAlignment = 'left';\n\n\n    /**\n     * Internal properties for calculated class list\n     */\n\n    layoutClass: string;\n\n\n    constructor(public env: Environment, public elementRef: ElementRef)\n    {\n        super(env);\n\n        this.height = '100%';\n        this.width = '100%';\n    }\n\n    ngOnInit()\n    {\n        this.initDefault();\n    }\n\n\n    /**\n     * Make sure we re-initialize default when Input Bindings changes\n     *\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        this.initDefault();\n    }\n\n\n    /**\n     * Initialize default values and Calculates layout and alignment class. The reason for using\n     * these utility classes is that we can change the behavior anytime as compared to using\n     * directly [style.xxx] bindings.\n     *\n     * ### Direction flow class:\n     *  - u-scrollable-f<direction>\n     *\n     * ### Alignment class:\n     *  - u-scrollable-a<alignment>\n     *\n     */\n    private initDefault(): void\n    {\n        this.layoutClass = 'u-scrollable-fh';\n        if (this.direction === 'vertical') {\n            this.layoutClass = 'u-scrollable-fv';\n\n        }\n        if (this.direction === 'vertical-row') {\n            this.layoutClass = 'u-scrollable-fv-row';\n\n        } else if (this.direction === 'both') {\n            this.layoutClass = 'u-scrollable-fb';\n\n        } else if (this.direction === 'none') {\n            this.layoutClass = 'u-scrollable-fn';\n        }\n\n        this.layoutClass += ' u-scrollable-a' + this.alignment.substring(0, 1);\n\n        if (isPresent(this.styleClass)) {\n            this.layoutClass += ` ${this.styleClass}`;\n        }\n\n        // make sure we default width and height to some value in case somebody passes null\n        if (isBlank(this.width)) {\n            this.width = '100%';\n        }\n\n        if (isBlank(this.height)) {\n            this.height = '100%';\n        }\n    }\n\n\n    /**\n     * Tells if the horizontal scrollbar is visible\n     *\n     */\n    hasHorizontalScroll(): boolean\n    {\n        let scrollContainer = this.elementRef.nativeElement.querySelector('.w-scrollable');\n        return scrollContainer.scrollWidth > scrollContainer.clientWidth;\n    }\n\n\n    /**\n     * Tells if the vertical scrollbar is visible\n     *\n     */\n    hasVerticalScroll(): boolean\n    {\n        let scrollContainer = this.elementRef.nativeElement.querySelector('.w-scrollable');\n        return scrollContainer.scrollHeight > scrollContainer.clientHeight;\n    }\n}\n\n/**\n * ScrollingDirection is a new type that drives scrolling behavior:\n *  - horizontal => overflow-x: auto, overflow-y:hidden\n *  - vertical => overflow-x: hidden, overflow-y:auto\n *  - vertical-row => overflow-x: hidden, overflow-y:auto; flow: row wrap\n *  - both => overflow-x: auto, overflow-y:auto\n *  - none => sets flow-flow to row wrap\n */\nexport type ScrollingDirection = 'horizontal' | 'vertical' | 'vertical-row' | 'both' | 'none';\n\n\n/**\n *\n * Controls the justify-content property:\n *\n * - left => flex-start\n * - right => flex-end\n * - center => center\n * - justify => space-between\n *\n */\nexport type ContainerItemsAlignment = 'left' | 'right' | 'center' | 'justify';\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ScrollableContainerComponent} from './scrollable-container.component';\n\n\n@NgModule({\n    declarations: [\n        ScrollableContainerComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    entryComponents: [\n        ScrollableContainerComponent\n    ],\n    exports: [\n        ScrollableContainerComponent\n    ],\n    providers: []\n})\nexport class AWScrollableContainerModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    Component,\n    ContentChild,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    SkipSelf,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport {Environment, equals, isBlank, isPresent} from '@aribaui/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BaseFormComponent} from '../../core/base-form.component';\nimport {Listbox, SelectItem} from 'primeng/primeng';\nimport {CheckboxComponent} from '../checkbox/checkbox.component';\n\n\nexport const LB_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ListComponent),\n    multi: true\n};\n\n/**\n *\n * The List component represent a structure which contains a list of selectable items. Items\n * selection can be configured in single-selection, multi-selection or multi-selection with visible\n * checkboxes mode.\n * In addition it can display data inside 3 zones LEFT, MIDDLE and RIGHT in order to provide\n * easy way for application developer to layout its own custom content or even change out of box\n * behavior.\n *\n *\n *  ### Examples\n *\n *  1. Render simple single selection list\n *\n *  ```html\n *\n *      <aw-list [list]=\"list\"></aw-list>\n *\n *  ```\n *  2. Render list - multi selection with custom RIGHT content to show a CheckMark when item\n *  is selected\n *\n *  ```html\n *\n *   <aw-list #awlist [list]=\"list\"\n *                       height=\"150px\"\n *                       width=\"250px\"\n *                       [selectionMode]=\"'multi'\">\n *\n *                  <ng-template #right let-item>\n *\n *                      <span class=\"sap-icon\"\n *                            [ngClass]=\"{'icon-accept': awlist.pListBox.isSelected(item),\n *                            '': !awlist.pListBox.isSelected(item)}\">\n *\n *                      </span>\n *                  </ng-template>\n *   </aw-list>\n *\n *  ```\n *\n * 3. Render list - multi selection with visible checkboxes and custom MIDDLE content to change\n *  the way item name is rendered\n *\n *\n *\n *  ```html\n *\n *   <aw-list [list]=\"list\" height=\"180px\"\n *                       width=\"200px\"\n *                       [selection]=\"selection\"\n *                       [selectionMode]=\"'multiWithCheckbox'\">\n *\n *                  <ng-template #middle let-item>\n *                      XX-{{item.value}}\n *                  </ng-template>\n *    </aw-list>\n *\n *  ```\n *\n *\n *\n */\n@Component({\n    selector: 'aw-list',\n    template: `<p-listbox #listbox [options]=\"internalList\" [multiple]=\"isMultiple\" [checkbox]=\"showCheckbox\"\n           [(ngModel)]=\"selection\" [disabled]=\"disabled\" [style]=\"listStyle\" [showToggleAll]=\"false\"\n           (onChange)=\"onItemSelected($event)\" (onDblClick)=\"action.emit($event.value)\"\n           [styleClass]=\"styleClass\">\n\n\n    <ng-template let-item pTemplate=\"item\">\n        <div class=\"w-li-wrapper\">\n            <div class=\"w-li-left\">\n                <ng-template *ngIf=\"hasLeftTempl(); else defaultLeft\"\n                             [ngTemplateOutlet]=\"lZoneTempl\"\n                             [ngTemplateOutletContext]=\"{$implicit: item}\"></ng-template>\n\n\n                <ng-template #defaultLeft>\n                    <aw-checkbox #check *ngIf=\"isMultiple && showCheckbox\"\n                                 [isStandalone]=\"false\"\n                                 [value]=\"listbox.isSelected(item)\"\n                                 type=\"action\"\n                                 (action)=\"itemClicked($event, item, check)\">\n                    </aw-checkbox>\n                </ng-template>\n            </div>\n\n            <div class=\"w-li-middle\" (click)=\"itemClicked($event, item, null)\">\n\n                <ng-template *ngIf=\"hasMiddleTempl(); else defaultMiddle\"\n                             [ngTemplateOutlet]=\"mZoneTempl\"\n                             [ngTemplateOutletContext]=\"{$implicit: item}\"></ng-template>\n\n                <ng-template #defaultMiddle>\n                    {{item.label}}\n                </ng-template>\n\n            </div>\n\n            <div class=\"w-li-right\" *ngIf=\"hasRightTempl()\">\n                <ng-template [ngTemplateOutlet]=\"rZoneTempl\"\n                             [ngTemplateOutletContext]=\"{$implicit: item}\">\n                </ng-template>\n\n            </div>\n        </div>\n    </ng-template>\n</p-listbox>\n`,\n    styles: [`::ng-deep .ui-listbox-item>.ui-chkbox{display:none}::ng-deep .ui-listbox-item .ui-chkbox{margin-right:1em}.w-li-wrapper{display:flex;align-items:flex-start}.w-li-wrapper .w-li-left,.w-li-wrapper .w-li-right{flex:0 1 auto}.w-li-wrapper .w-li-middle{flex:1 1 auto}`],\n    providers: [\n        LB_CONTROL_VALUE_ACCESSOR,\n        {provide: BaseFormComponent, useExisting: forwardRef(() => ListComponent)}\n    ]\n})\nexport class ListComponent extends BaseFormComponent\n{\n\n    /**\n     * List of option that will show in the list. Please not that this list is current used to\n     * show limited number of items. It does not have any scrolling feature and lazy loading\n     *\n     */\n    @Input()\n    list: any[];\n\n    /**\n     * Items which was selected as a default values\n     */\n    @Input()\n    selection: any;\n\n    /**\n     * Component recognizes 3 modes: single, multi, multi with visible checkboxes\n     */\n    @Input()\n    selectionMode: SelectionMode = 'single';\n\n\n    /**\n     * Formatter used to format each selection for display.\n     *\n     */\n    @Input()\n    valueTransformer: (value: any) => string;\n\n    /**\n     * Used when dealing with object to identify specific field on the object forcomparison\n     */\n    @Input()\n    field: string;\n\n\n    /**\n     * Don't render Listbox border. Used for embedding this inside other components\n     *\n     */\n    @Input()\n    borderless: boolean = false;\n\n    /**\n     * Triggered when we double click on the list Item\n     *\n     */\n    @Output()\n    action: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Event fired when user select a item\n     *\n     */\n    @Output()\n    onSelection: EventEmitter<any> = new EventEmitter();\n\n\n    /**\n     * In case we want to override default behavior or Left zone. We expose this listBox in order to\n     * have access primeNg implementation\n     */\n    @ViewChild('listbox')\n    pListBox: Listbox;\n\n\n    /**\n     * Custom templates to override default behavior. The list item is divided into 3 zones\n     *\n     *\n     *  ------------------------------------------------------\n     *  |       |                                   |        |\n     *  |   L   |             M                     |   R    |\n     *  |       |                                   |        |\n     *  |       |                                   |        |\n     *  ------------------------------------------------------\n     *\n     *\n     */\n    @ContentChild('left')\n    lZoneTempl: TemplateRef<any>;\n\n    @ContentChild('middle')\n    mZoneTempl: TemplateRef<any>;\n\n    @ContentChild('right')\n    rZoneTempl: TemplateRef<any>;\n\n    /**\n     * Internal\n     */\n    internalList: SelectItem[];\n\n    listStyle: {[name: string]: any} = {};\n\n    isMultiple: boolean = false;\n    showCheckbox: boolean = false;\n\n\n    constructor(public env: Environment,\n                @SkipSelf() @Optional() @Inject(forwardRef(() => BaseFormComponent))\n                protected parentContainer: BaseFormComponent)\n    {\n        super(env, parentContainer);\n    }\n\n    ngOnInit()\n    {\n        super.ngOnInit();\n\n        this.isMultiple = this.selectionMode === 'multi' ||\n            this.selectionMode === 'multiWithCheckbox';\n        this.showCheckbox = this.selectionMode === 'multiWithCheckbox';\n\n        // cannot have both either we use field to get display value or valueTransformer\n        if (isPresent(this.field) && isPresent(this.valueTransformer)) {\n            throw new Error('You can have either [field] or [valueTransformer].');\n        }\n\n        if (isPresent(this.list)) {\n            this.initList();\n        } else {\n            throw new Error('Missing [list] binding.');\n        }\n\n        // Also add overflowY to make sure it can scroll and does not expand based on its content\n        if (isPresent(this.height)) {\n            this.listStyle['height'] = this.height;\n            this.listStyle['overflow-y'] = 'auto';\n        }\n\n        if (isPresent(this.width)) {\n            this.listStyle['width'] = this.width;\n        }\n\n        if (this.borderless) {\n            this.listStyle['border-color'] = 'transparent';\n        }\n\n        if (this.isStandalone) {\n            super.registerFormControl(this.selection);\n\n            if (isBlank(this.selection)) {\n                this.selection = this.formControl.value;\n            }\n        }\n    }\n\n\n    /**\n     *\n     * Since we are using <aw-checkbox> we need to have custom handling both when clicking on the\n     * checkbox as well as item text.\n     *\n     *\n     */\n    itemClicked(event: any, item: any, checkbox: CheckboxComponent): void\n    {\n        if (isPresent(checkbox)) {\n            this.pListBox.onCheckboxClick(event, item);\n\n        } else if (isPresent(this.pListBox)) {\n            this.pListBox.onOptionClick(event, item);\n\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * Internal\n     *\n     */\n    hasRightTempl(): boolean\n    {\n        return isPresent(this.rZoneTempl);\n    }\n\n    hasLeftTempl(): boolean\n    {\n        return isPresent(this.lZoneTempl);\n    }\n\n\n    hasMiddleTempl(): boolean\n    {\n        return isPresent(this.mZoneTempl);\n    }\n\n    /**\n     *\n     * Triggered by p-listbox component when item is selected. When state is managed internally\n     * we also update FormControl model.\n     *\n     */\n    onItemSelected(event: any): void\n    {\n        if (isBlank(event.value)) {\n            return;\n        }\n\n        this.onSelection.emit(event.value);\n        if (this.isStandalone) {\n            this.formControl.setValue(event.value, {emitEvent: true});\n        }\n        this.onModelChanged(event.value);\n    }\n\n\n    /**\n     * Internal. Please see ControlValueAccessor\n     *\n     */\n    writeValue(value: any)\n    {\n        if (!equals(value, this.selection)) {\n            this.selection = value;\n            if (this.isStandalone) {\n                this.formControl.setValue(value);\n            }\n        }\n    }\n\n    /**\n     * Translates external form of the list into PrimeNG expected format where it uses\n     * SelectionItem interface\n     */\n    private initList()\n    {\n        if (isPresent(this.list)) {\n            this.internalList = this.list.map((item: any) =>\n            {\n                return {label: this.displayValue(item), value: item};\n            });\n        }\n    }\n\n\n    /**\n     *  Generates label value for the list box.\n     *\n     */\n    private displayValue(item: any): string\n    {\n        if (isBlank(item)) {\n            return '';\n        }\n\n        let val = item.toString();\n        if (isPresent(this.field)) {\n            val = item[this.field];\n\n        } else if (isPresent(this.valueTransformer)) {\n            val = this.valueTransformer(item);\n        }\n        return val;\n    }\n}\n\n/**\n * List support these three selection modes\n *\n */\nexport type SelectionMode = 'single' | 'multi' | 'multiWithCheckbox';\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ListboxModule} from 'primeng/primeng';\nimport {ListComponent} from './list.component';\nimport {AWCheckBoxModule} from '../checkbox/check-box.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n    declarations: [\n        ListComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        ListboxModule,\n        AWCheckBoxModule\n\n    ],\n    entryComponents: [\n        ListComponent\n    ],\n    exports: [\n        ListComponent,\n        ReactiveFormsModule,\n        FormsModule\n    ],\n    providers: []\n})\nexport class AWListModule\n{\n}\n\n\n","/**\n * @license\n * @author amanul.chowdhury\n * Copyright 2018 SAP Ariba\n *\n * WizardProgressComponent can be used as a step progress\n * in a page that has multiple steps\n * `<aw-wizard-progress\n *  [steps]=\"steps\"\n *  [currentStep]=\"currentStep\"\n *  (stepChanged)=\"onStepChanged($event)\">\n * </aw-wizard-progress>`\n */\n\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\n\nexport interface Step\n{\n    complete: boolean;\n    current: boolean;\n    title?: string;\n}\n\n@Component({\n    selector: 'aw-wizard-progress',\n    template: `<div class=\"step-indicator\">{{currentStep + 1}}/{{totalSteps}}</div>\n<div class=\"aw-step-progress\">\n    <div class=\"aw-step-progress__item\" *ngFor=\"let step of steps; let i = index;\"\n         [ngClass]=\"{ 'aw-step-progress__item--is-active': step.current === true }\"\n         (click)=\"goToStep(i);\">\n    </div>\n</div>\n`,\n    styles: [`:host{display:block}.step-indicator{width:100%;text-align:center;font-size:14px;font-weight:600;padding-bottom:.3rem}.aw-step-progress{display:flex;flex-direction:row;padding:.2rem;justify-content:center}.aw-step-progress__item{cursor:pointer;list-style:none;width:1.2rem;margin:0 .2rem;border-radius:.3rem;height:.4rem;background-color:#eaeaea}.aw-step-progress__item:last-child{margin-right:0}.aw-step-progress__item:first-child{margin-left:0}.aw-step-progress__item--is-active{background-color:#09a7af}`]\n})\nexport class WizardProgressComponent\n{\n    @Input()\n    steps: Array<Step>;\n\n    @Input()\n    currentStep: number = 0;\n\n    @Output()\n    stepChanged: EventEmitter<any> = new EventEmitter<any>();\n\n    totalSteps: number = 0;\n\n    constructor()\n    {\n    }\n\n    ngOnInit()\n    {\n        if (this.steps) {\n            let currentIndex = this.steps.indexOf(this.steps.filter(step => step.current)[0]);\n            this.totalSteps = this.steps.length;\n            this.setCurrentStep(~currentIndex ? currentIndex : 0);\n        }\n    }\n\n    setCurrentStep(index: number = 0)\n    {\n        this.steps[index].current = true;\n        this.currentStep = index;\n        this.stepChanged.emit({current: this.currentStep});\n    }\n\n    goToStep(index: number)\n    {\n        if (!this.steps[index].complete) {\n            return;\n        }\n\n        let currentIndex = this.steps.indexOf(this.steps.filter(step => step.current)[0]);\n        this.steps[currentIndex].current = false;\n\n        this.setCurrentStep(index);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {WizardProgressComponent} from './wizard-progress.component';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n    declarations: [\n        WizardProgressComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    entryComponents: [\n        WizardProgressComponent\n    ],\n    exports: [\n        WizardProgressComponent\n    ],\n    providers: []\n})\nexport class WizardProgressModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, Input} from '@angular/core';\nimport {BaseComponent} from '../../core';\nimport {Environment} from '@aribaui/core';\n\n\n/**\n * Renders a Toggle Switch\n *\n * ### Example\n *\n * ```typescript\n *\n *      @Component({\n *          selector: 'myToggleSection' ,\n *          template: '<aw-toggle [model]=\"inputValue\" [labelText]=\"labelText\" >\n *              </aw-toggle>'\n *      })\n *      export class MyNoteComponent\n *      {\n *          inputValue: boolean = false;\n *          labelText: string = 'my label';\n *      }\n *\n * ```\n */\n\n@Component({\n    selector: 'aw-toggle',\n    template: `<div class=\"w-toggle\">\n    <label class=\"w-toggle__label\" *ngIf=\"labelText\">\n        {{ labelText }}\n    </label>\n    <div class=\"slider\" (click)=\"changeHandler()\">\n        <div class=\"slider__button\" [ngClass]=\"{ 'slider__button--is-active': model === true }\"></div>\n    </div>\n</div>\n`,\n    styles: [`:host{display:block}.w-toggle input{display:none}.w-toggle__label{color:#999;margin-right:.2rem}.w-toggle .slider{position:relative;height:.6rem;width:1.5rem;background-color:#d8d8d8;border-radius:.9rem;display:inline-block;border-top:1px solid #7e7e7e;border-left:1px solid #b5b5b5;border-right:1px solid #b5b5b5}.w-toggle .slider__button{left:-.1rem;transition:left .1s ease-out;cursor:pointer;position:absolute;height:1rem;width:1rem;border-radius:50%;background-color:#eaeaea;top:-.2rem}.w-toggle .slider__button--is-active{left:calc(100% - .8rem);background-color:#09a7af}`]\n})\n\nexport class ToggleSwitchComponent extends BaseComponent\n{\n    /**\n     * toggle model\n     */\n    @Input() model: boolean = false;\n    /**\n     * label text\n     */\n    @Input() labelText: string;\n\n    constructor(public env: Environment)\n    {\n        super(env);\n    }\n\n    /**\n     * click handler for toggle\n     */\n    changeHandler()\n    {\n        this.model = !this.model;\n    }\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {ToggleSwitchComponent} from './toggle-switch.component';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n    declarations: [\n        ToggleSwitchComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    entryComponents: [\n        ToggleSwitchComponent\n    ],\n    exports: [\n        ToggleSwitchComponent\n    ],\n    providers: []\n})\nexport class ToggleSwitchModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ModalContainer} from '../../core/modal-service/modal-container';\nimport {OverlayPanel} from 'primeng/primeng';\nimport {Environment} from '@aribaui/core';\n\n/**\n * Overlay Component is a simple version of the dialog where there's only content.\n * Overlay will appear at the position where the action performed trigger an overlay.\n *\n * There are three types of popup.\n *   1.  a regular dialog box that has header, body and footer. It's the most customizable.\n *   2.  a confirmation box is similar to a dialog box but has accept and reject action buttons.\n *   3.  a overlay, which is a very basic popup with what you put inside.\n *       It doesn't have header and footer.\n *\n * There are two ways to use any popup component.\n *   1.  Either directly by using component, aw-dialog, aw-confirmation or aw-overlay\n *   2.  or the ModalService  service.open(<OverlayComponent>), service.close()\n *\n * Usage:\n *    1.  Using ModalService directly to display a modal popup. The usage is a little tricky\n *        because angular currently doesn't support dynamic content projection.\n *\n *          let overlay = this.modalService.open<OverlayComponent>(OverlayComponent, {});\n *\n *            // Add content. There's not support for dynamic content projection yet.\n *            // So have add content directly.\n *            // This is probably not the best way.\n *          overlay.instance.overlay.el.nativeElement.querySelector(\".ui-overlaypanel-content\")\n *               .innerHTML = `<img style='width:300px;' src=\"sales.png\" alt=\"Sales Chart\" />`;\n *\n *          // delay the opening after ng lifecycle has been initialized.\n *          setTimeout(() => { overlay.instance.open(event); }, 1);\n *\n *\n *   2.   Use the component inside your template.\n *\n *          @Component({\n *                selector: 'aw-page' ,\n *                           template: `\n *                                <aw-overlay #overlay (onOpen)=\"overlayAction='open'\"\n *                                                     (onClose)=\"overlayAction='close'\">\n *                                      <img src=\"sales.png\" alt=\"Chart\"/>\n *                                </aw-overlay>\n *\n *                                <aw-button [size]=\"'small'\" (click)=\"overlay.open($event)\">\n *                                    Open Overlay\n *                                </aw-button>\n *                  `\n *         export class MyPageComponent implements OnInit {\n *\n *                     overlayAction: string;\n *\n *                     constructor(private modalService: ModalService) {\n *                          super();\n *                       }\n *                     ngOnInit() { }\n *       }\n *\n *\n */\n@Component({\n    selector: 'aw-overlay',\n    template: `<p-overlayPanel [dismissable]=\"dismissable\" [showCloseIcon]=\"showCloseIcon\"\n                [styleClass]=\"styleClass\" [appendTo]=\"appendTo\"\n                (onAfterHide)=\"onClosed($event)\">\n    <ng-content></ng-content>\n</p-overlayPanel>\n`,\n    styles: [`::ng-deep .ui-overlaypanel{border:1px solid #d7d7d7;box-shadow:0 2px 4px 0 rgba(0,0,0,.2)}::ng-deep .ui-overlaypanel-content{padding:2em 3.4em .6em 1.43em}::ng-deep .ui-overlaypanel-close{border-radius:0;top:.5em;right:.5em}::ng-deep .ui-overlaypanel-close.ui-state-default{border:none}`]\n})\nexport class OverlayComponent extends ModalContainer implements OnInit\n{\n    /**\n     * Enables hide overlay when outside is clicked.\n     */\n    @Input()\n    dismissable: boolean = true;\n\n    /**\n     * displays the close icon 'x' at top of right corner.\n     */\n    @Input()\n    showCloseIcon: boolean = false;\n    /**\n     * Target element to attach the overlay. \"body\" or local ng-template variable are valid.\n     */\n    @Input()\n    appendTo: any;\n\n    /**\n     * Event fired when overlay is closed.\n     */\n    @Output()\n    onClose: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * Event fired when the overlay is opened.\n     */\n    @Output()\n    onOpen: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * The internal overlay panel.\n     */\n    @ViewChild(OverlayPanel)\n    overlay: OverlayPanel;\n\n    constructor(public env: Environment)\n    {\n        super(env);\n    }\n\n    ngOnInit()\n    {\n    }\n\n    /**\n     * Open Overlay\n     * @param event\n     */\n    open(event: any)\n    {\n        this.overlay.show(event);\n        this.onOpened(null);\n    }\n\n    /**\n     * Close Overlay\n     */\n    close()\n    {\n        this.overlay.hide();\n    }\n\n\n    /**\n     * toggle open and close.\n     * @param event\n     */\n    toggle(event: any)\n    {\n        this.overlay.toggle(event);\n    }\n\n\n    onOpened(event: any): void\n    {\n        this.onOpen.emit(event);\n    }\n\n    onClosed(event: any): void\n    {\n        this.onClose.emit(event);\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterViewChecked,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Input,\n    ViewChild\n} from '@angular/core';\nimport {assert, Environment, isPresent} from '@aribaui/core';\nimport {BaseComponent} from '../../core/base.component';\nimport {OverlayComponent} from '../overlay/overlay.component';\n\n\n/**\n * Defines where the Card is positioned. It can be either:\n *    - above the triggering link\n *    - under the triggering link\n *    - completely on top of it - covering it. For this case there is none as no style is applied\n */\nexport enum HCCardPosition {\n    top,\n    bottom,\n    none\n}\n\n/**\n * Defines where the Card is positioned by default. Meaning where primeNG code put it.\n *\n * When there is allot of space on the sides >=  (Left or Right) is used\n * (paddedLeft, paddedRight) otherwise. When there is not much space and card container\n *  is not aligned (left, right) with the trigering icon but it is shifted to fit into the screen\n */\nenum HCCardAlignment {\n    left,\n    paddedLeft,\n    right,\n    paddedRight,\n    default\n}\n\n/**\n * Maps position to styles that are applied to the Card container. This is just to make it easier\n * as we are working with enumerations and have already enum type.\n *\n * u-hc-arrow-b: Arrow will appear at the bottom\n * u-hc-arrow-t: Arrow will appear at the top\n *\n * u-hc-shadow-t: Border shadow will appear at the top\n * u-hc-shadow-b: Border shadow will appear at the bottom\n */\nconst PositionToStyle = {\n    top: ' w-hc-panel-arrow u-hc-arrow-b u-hc-shadow-t',\n    bottom: ' w-hc-panel-arrow u-hc-arrow-t u-hc-shadow-b',\n    none: ''\n};\n\n\n/**\n *\n * Maps aligned Card container to custom styles in order to apply correct arrow\n *\n * -ll: Stands for Large Left (large: there is plenty of space around )\n * -lr: Stands for Large right\n * -sl: Stands for Small left (Small and resized screen where we try to fit card container\n * somewhere in between)\n * -sr: Stands for Large right\n *\n */\nconst AlignmentToStyle = {\n    left: ' u-hc-arrow-ll',\n    right: ' u-hc-arrow-lr',\n    paddedLeft: ' u-hc-arrow-sl',\n    paddedRight: ' u-hc-arrow-sr',\n    default: ' u-hc-arrow-ll',\n};\n\n/**\n * The HoverCard components adds hover behavior to text, the specified content is loaded\n * on the left or right side of the element.\n *\n * Todo: extends so we can wrap any element and any element can be triggering this. Not only\n * linkTitle\n *\n *\n * ### Example:\n *\n * ```\n *\n *   <aw-hover-card [linkTitle]=\"'Frank kolar'\">\n *       <h3>My Card Title</h3>\n *       <div>\n *\n *           This is my contents\n *\n *       </div>\n *\n *\n *    </aw-hover-card>\n * ```\n *\n * By default there is [forceClose]=true which forces the user to use X close icon\n *\n *\n *\n */\n@Component({\n    selector: 'aw-hover-card',\n    template: `<span class=\"w-hc\">\n    <span class=\"w-hc-title\">\n        <aw-string [value]=\"linkTitle\"></aw-string>\n        <span class=\"sap-icon icon-slim-arrow-down\" (mouseover)=\"openCard($event)\"></span>\n    </span>\n\n    <div class=\"w-hc-body\">\n\n         <aw-overlay #overlay [showCloseIcon]=\"forceClose\" [dismissable]=\"!forceClose\"\n                     [styleClass]=\"arrowClass\"\n                     [appendTo]=\"appendTo\"\n                     (onOpen)=\"cardOpened($event)\"\n                     (onClose)=\"cardClosed($event)\">\n\n        <!-- this is workaround to create a _ngcontent-INDEX reference so we can\n        refer to this ng-content. Angular does not have any way right now to track this\n        -->\n        <span class=\"u-ngcontent\">\n                <ng-content></ng-content>\n            </span>\n\n    </aw-overlay>\n\n    </div>\n</span>\n\n\n<!--<ng-template #contentToBody>-->\n    <!--<aw-overlay #overlay [showCloseIcon]=\"forceClose\" [dismissable]=\"!forceClose\"-->\n                <!--[styleClass]=\"arrowClass\"-->\n                <!--[appendTo]=\"appendTo\"-->\n                <!--(onOpen)=\"cardOpened($event)\"-->\n                <!--(onClose)=\"cardClosed($event)\">-->\n\n        <!--&lt;!&ndash; this is workaround to create a _ngcontent-INDEX reference so we can-->\n        <!--refer to this ng-content. Angular does not have any way right now to track this-->\n        <!--&ndash;&gt;-->\n        <!--<span class=\"u-ngcontent\">-->\n                <!--<ng-content></ng-content>-->\n            <!--</span>-->\n\n    <!--</aw-overlay>-->\n\n<!--</ng-template>-->\n\n\n<!--<ng-template #contentToOverlay>-->\n\n    <!--<aw-overlay #overlay [showCloseIcon]=\"forceClose\" [dismissable]=\"!forceClose\"-->\n                <!--[styleClass]=\"arrowClass\"-->\n                <!--(onOpen)=\"cardOpened($event)\"-->\n                <!--(onClose)=\"cardClosed($event)\">-->\n\n        <!--&lt;!&ndash; this is workaround to create a _ngcontent-INDEX reference so we can-->\n        <!--refer to this ng-content. Angular does not have any way right now to track this-->\n        <!--&ndash;&gt;-->\n        <!--<span class=\"u-ngcontent\">-->\n                <!--<ng-content></ng-content>-->\n            <!--</span>-->\n\n    <!--</aw-overlay>-->\n<!--</ng-template>-->\n\n\n`,\n    styles: [`.w-hc-title{padding-right:1.4em;position:relative;white-space:nowrap}.w-hc-title .sap-icon{font-size:1em;color:#00679e;position:absolute;padding-top:.2em;right:0}::ng-deep .w-hc-panel-arrow.u-hc-shadow-b{box-shadow:0 2px 4px 0 rgba(0,0,0,.2)}::ng-deep .w-hc-panel-arrow.u-hc-shadow-t{box-shadow:0 -2px 4px 0 rgba(0,0,0,.2)}::ng-deep .w-hc-panel-arrow:after,::ng-deep .w-hc-panel-arrow:before{left:25%;border:solid transparent;content:\" \";height:0;width:0;position:absolute;pointer-events:none}::ng-deep .w-hc-panel-arrow:after{border-color:rgba(136,183,213,0);border-width:.7em;margin-left:-.7em}::ng-deep .w-hc-panel-arrow:before{border-color:rgba(255,136,56,0);border-width:.8em;margin-left:-.8em}::ng-deep .u-hc-arrow-ll:after,::ng-deep .u-hc-arrow-ll:before{left:25%}::ng-deep .u-hc-arrow-lr:after,::ng-deep .u-hc-arrow-lr:before{left:75%}::ng-deep .u-hc-arrow-sl:after,::ng-deep .u-hc-arrow-sl:before{left:10%}::ng-deep .u-hc-arrow-sr:after,::ng-deep .u-hc-arrow-sr:before{left:90%}::ng-deep .u-hc-arrow-t:after,::ng-deep .u-hc-arrow-t:before{bottom:100%}::ng-deep .u-hc-arrow-t:after{border-bottom-color:#fff}::ng-deep .u-hc-arrow-t:before{border-bottom-color:#d7d7d7}::ng-deep .u-hc-arrow-b:after,::ng-deep .u-hc-arrow-b:before{top:100%}::ng-deep .u-hc-arrow-b:after{border-top-color:#fff}::ng-deep .u-hc-arrow-b:before{border-top-color:#d7d7d7}`]\n})\nexport class HoverCardComponent extends BaseComponent implements AfterViewChecked {\n\n    /**\n     * Default padding representing a height of the Arrow for which we need to vertically adjust\n     * Card container\n     *\n     */\n    public static readonly ArrowPad = 10;\n\n    /**\n     * Defines safe threshold where there might not be enough space around or Card is aligned with\n     * the left or right edge of the viewport for which we need to position the Arrow closer to the\n     * side of the card\n     *\n     */\n    public static readonly SpacingLimit = 50;\n\n\n    @Input()\n    linkTitle: string;\n\n    /**\n     * Should we keep the hover card open and force user to manually close\n     *\n     */\n    @Input()\n    forceClose: boolean = true;\n\n\n    /**\n     *\n     * This current workaround until we find better solution. PrimeNG overlays operates within\n     * its relative element so if the overlay is wrapped inside some other relative container\n     * the overlay content is croped by its parent and content is not visible.\n     *\n     * They have [appendTo] binding which we need to use for this purpose\n     *\n     */\n    @Input()\n    appendContentToBody: boolean = true;\n\n    /**\n     * Reference to OverlayComponent to can access PrimeNG component as well\n     */\n    @ViewChild('overlay')\n    awOverlay: OverlayComponent;\n\n\n    /**\n     *\n     * Internal style class to use to apply additional styles when it needs to show a Arrow on the\n     * card\n     *\n     */\n    arrowClass: string = '';\n\n\n    /**\n     * Internal properties to references template elements in order to calculate positioning\n     *\n     */\n    private titleAreaRect: any;\n    trigRect: any;\n    trigIconMiddle: any;\n\n    opening: boolean = false;\n\n    appendTo: 'body';\n\n    currrentPosition: HCCardPosition = HCCardPosition.none;\n\n\n    constructor(protected elem: ElementRef, public env: Environment,\n                private cd: ChangeDetectorRef) {\n        super(env);\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        assert(isPresent(this.linkTitle), 'You must provide [linkTitle] binding !');\n\n        // make sure there is open HC when we start new component\n        this.env.deleteValue('hc-open');\n\n        if (!this.appendContentToBody) {\n            this.appendTo = null;\n        }\n    }\n\n\n    /**\n     * As of Angular 5 we have to introduce this ViewChecked as PrimeNG does final calculation\n     * during this phase.\n     *\n     * So now its broken down into two parts:\n     *   - Apply class styles\n     *   - Position it.\n     */\n    ngAfterViewChecked(): void {\n        if (this.opening) {\n            let container = this.awOverlay.overlay.container;\n\n            let cntRect = container.getBoundingClientRect();\n            if (this.currrentPosition !== HCCardPosition.none) {\n                this.adjustCard(container, cntRect, this.awOverlay.overlay);\n\n            } else {\n                this.arrowClass = '';\n            }\n\n            this.opening = false;\n        }\n\n    }\n\n    /**\n     * Init elements BoundingClientRect that we use for calculation\n     *\n     */\n    initElements(): void {\n        let titleElem = this.elem.nativeElement.querySelector('.w-hc-title');\n        let triggerElem = this.elem.nativeElement.querySelector('.sap-icon');\n        this.titleAreaRect = titleElem.getBoundingClientRect();\n        this.trigRect = triggerElem.getBoundingClientRect();\n        this.trigIconMiddle = this.trigRect.width / 2;\n    }\n\n\n    /**\n     *\n     * Fires when user mouse over the triggering icon and opens up overlay component. To make sure\n     * only one Card is opened at the time it uses Environment to save extra information for it\n     *\n     *\n     */\n    openCard(event: any): any {\n        if (isPresent(this.awOverlay) && !this.env.hasValue('hc-open')) {\n            this.awOverlay.open(event);\n\n            this.env.setValue('hc-open', true);\n        }\n    }\n\n\n    /**\n     *\n     * Fired at the end of the opening cycle when all is initialized and the card is about to\n     * fade in.\n     *\n     * This method first simulates displaying card by setting display:block and\n     * domHandler.absolutePosition so we can read dimensions and then later on position the card\n     * accordingly.\n     *\n     */\n    cardOpened(event: any): void {\n        let container = this.awOverlay.overlay.container;\n        let target = this.awOverlay.overlay.target;\n        this.openForAdjustments(container);\n\n        // pre-run positioning so we can calculate new coordinates\n        this.awOverlay.overlay.domHandler.absolutePosition(container, target);\n        let cntRect = container.getBoundingClientRect();\n        this.currrentPosition = this.positionForCard(container, cntRect);\n\n        this.applyStyleClass(container, cntRect, this.awOverlay.overlay);\n\n        this.closeForAdjustments(container);\n        this.opening = true;\n    }\n\n\n    /**\n     *\n     * When card is closed we need to release it and delete all the references from Environment\n     *\n     *\n     */\n    cardClosed(event: any): void {\n        this.env.deleteValue('hc-open');\n    }\n\n    /**\n     *\n     * Applies style.TOP and style.LEFT to the container in order to reposition it and add\n     * extra arrow.\n     *\n     * First based on the initial position we apply style.TOP and depending if its on the\n     * top or bottom we apply either -HoverCardComponent.ArrowPad or +HoverCardComponent.ArrowPad.\n     *\n     * Then for positioning horizontally we use two types.\n     *  - When there is allot of space the arrow is 25% from the edge\n     *\n     *    -----^------------   or       -----------^----\n     *\n     *\n     *  - When there is less or none space we have only 10% far away form the edge\n     *\n     *    --^------------   or       -----------^--\n     *\n     *  Once we pick the correct positioning (25%, 10%) we need to recalculate and shift the card\n     *  either to the left or right.\n     *\n     */\n    adjustCard(container: any, containerRect: any, modalContainer: any): void {\n        let diff = (this.currrentPosition === HCCardPosition.bottom) ? 1 : -1;\n        let scrollTop = modalContainer.domHandler.getWindowScrollTop();\n        let posWithScroll = containerRect.top + scrollTop;\n        container.style.top = (posWithScroll + (HoverCardComponent.ArrowPad * diff)) + 'px';\n\n        let alignment = this.alignmentForCard(containerRect, modalContainer);\n        container.style.left = this.calcLeftForAlignment(containerRect, alignment) + 'px';\n    }\n\n\n    applyStyleClass(container: any, containerRect: any, modalContainer: any): void {\n\n        if (this.currrentPosition !== HCCardPosition.none) {\n            let alignment = this.alignmentForCard(containerRect, modalContainer);\n\n            this.arrowClass = (<any>PositionToStyle)[(<any>HCCardPosition)[this.currrentPosition]];\n            this.arrowClass += (<any>AlignmentToStyle)[(<any>HCCardAlignment)[alignment]];\n\n        } else {\n            this.arrowClass = '';\n        }\n    }\n\n    /**\n     *\n     * Detects if the card is going to be shown on the top of the Link label or under. Or if\n     * its covering it.\n     *\n     */\n    positionForCard(container: any, boundingRect: any): HCCardPosition {\n        // secure this in case of IE returning undefined\n        let borderWidth = getComputedStyle(container).borderWidth;\n        let cntWidth = parseFloat(borderWidth || '0');\n        let pos = HCCardPosition.none;\n\n        if (this.trigRect.bottom < boundingRect.top) {\n            pos = HCCardPosition.bottom;\n        } else if (this.trigRect.top > (boundingRect.bottom - cntWidth)) {\n            pos = HCCardPosition.top;\n        }\n\n        return pos;\n    }\n\n\n    /**\n     *\n     * Detect horizontal alignment.\n     *\n     */\n    private alignmentForCard(boundingRect: any, modalContainer: any): HCCardAlignment {\n        let alignment = HCCardAlignment.left;\n        let viewPort = modalContainer.domHandler.getViewport();\n\n        if (this.trigRect.left.toFixed(0) === boundingRect.left.toFixed(0) &&\n            boundingRect.left > HoverCardComponent.SpacingLimit) {\n            alignment = HCCardAlignment.left;\n\n        } else if (boundingRect.left < HoverCardComponent.SpacingLimit) {\n            alignment = HCCardAlignment.paddedLeft;\n\n        } else if ((viewPort.width - boundingRect.right) < HoverCardComponent.SpacingLimit) {\n            alignment = HCCardAlignment.paddedRight;\n\n        } else if (this.trigRect.right.toFixed(0) === boundingRect.right.toFixed(0) ||\n            (viewPort.width - boundingRect.right) > HoverCardComponent.SpacingLimit) {\n            alignment = HCCardAlignment.right;\n\n        } else {\n            alignment = HCCardAlignment.default;\n        }\n        return alignment;\n    }\n\n    /**\n     *\n     * Turn on temporary display to BLOCK so we can read dimensions\n     *\n     */\n    openForAdjustments(container: any): void {\n        container.style.visibility = 'hidden';\n        container.style.display = 'block';\n\n        this.initElements();\n    }\n\n\n    /**\n     *\n     * Turn off display back NONE\n     *\n     */\n    closeForAdjustments(container: any): void {\n        container.style.visibility = 'visible';\n        // container.style.display = 'none';\n    }\n\n\n    /**\n     *\n     * Calculates positioning for style.LEFT. As already said they are two types of triangles that\n     * are applies for these case:\n     *\n     *\n     * a) Large left, Large right\n     *\n     *  PrimeNG aligns the card with either the right side or left side of the triggering icon\n     *\n     *\n     *  V                                                                V\n     *  ......^........................ or  .......................^......\n     *\n     *\n     *\n     *\n     *  b) Small left , small right\n     *\n     *  This is for cases where there is not enough space and PrimeNG position the card off to the\n     *  triggering icons, so even primeNg does not have space to align it with the V\n     *\n     *\n     *     V                                                      V\n     *  ....^........................ or  .......................^....\n     *\n     *\n     * c)Aligned with the edge of browser\n     *\n     * On the right side this is problem as we cannot calculate full future width of the card.\n     * but we applly for this case #b (arrow 10% )\n     *\n     *\n     *\n     */\n    private calcLeftForAlignment(boundingRect: any, alignment: HCCardAlignment): number {\n        // width for which we need to shift card. 25% or 10% of the container width\n        let wLargeTriangle = boundingRect.width * 0.25;\n        let wSmallTriangle = boundingRect.width * 0.10;\n\n        switch (alignment) {\n            case HCCardAlignment.right:\n                let shiftRight = boundingRect.left + wLargeTriangle;\n                let trigRight = this.trigRect.right - this.trigIconMiddle;\n                return shiftRight - (boundingRect.right - trigRight);\n\n            case HCCardAlignment.paddedRight:\n                let shiftRightS = boundingRect.left + wSmallTriangle;\n                let trigRightS = this.trigRect.right - this.trigIconMiddle;\n                return shiftRightS - (boundingRect.right - trigRightS);\n\n\n            case HCCardAlignment.paddedLeft:\n                let shiftLeftPad = boundingRect.left - wSmallTriangle;\n                return shiftLeftPad + this.trigIconMiddle;\n\n            case HCCardAlignment.left:\n            default:\n                let shiftLeft = boundingRect.left - wLargeTriangle;\n                return shiftLeft + this.trigIconMiddle;\n        }\n    }\n}\n\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewChecked,\n    AfterViewInit,\n    Directive,\n    DoCheck,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChange\n} from '@angular/core';\nimport {isPresent, print} from '@aribaui/core';\n\n\n/**\n * Spy lifecycle directive is used for debugging purposes to track lifecycle callback\n *\n * ###Usage\n *\n * ```\n *   <my-directive spyhooks><my-directive>\n *\n * ```\n */\n@Directive({selector: '[spyHooks]'})\nexport class SpyLifeCycleHooksDirective implements OnDestroy, OnInit, DoCheck, OnChanges,\n    AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked\n{\n\n    constructor(private elementRef: ElementRef)\n    {\n    }\n\n\n    ngOnInit()\n    {\n        this.logIt('onInit');\n    }\n\n    ngOnDestroy()\n    {\n        this.logIt('onDestroy');\n    }\n\n\n    ngOnChanges(changes: {[ propName: string]: SimpleChange})\n    {\n        this.logIt('ngOnChanges = ' + changes);\n    }\n\n    ngDoCheck()\n    {\n        this.logIt('ngDoCheck');\n    }\n\n    ngAfterContentInit()\n    {\n        this.logIt('ngAfterContentInit');\n    }\n\n    ngAfterContentChecked()\n    {\n\n        this.logIt('ngAfterContentChecked');\n    }\n\n    ngAfterViewInit()\n    {\n        this.logIt('ngAfterViewInit');\n    }\n\n    ngAfterViewChecked()\n    {\n        this.logIt('ngAfterViewChecked');\n    }\n\n    private logIt(msg: string)\n    {\n        let level = 0;\n        let me = this.elementRef.nativeElement;\n        let tagBody = me;\n\n        while ((tagBody = tagBody.parentNode) != null) {\n            level++;\n            if (tagBody.tagName === 'APP-ROOT' || level === 6) {\n                break;\n            }\n        }\n        let indent = '';\n        let indentNumber = level;\n        while (level > 0) {\n            indent += '\\t';\n            level--;\n        }\n\n\n        let params = '';\n        if (isPresent(me.attributes)) {\n            for (let i = 0; i < me.attributes.length; i++) {\n                let attr: Attr = me.attributes.item(i);\n                if (this.ignore(attr.name.toLowerCase())) {\n                    continue;\n                }\n\n\n                params += '(' + attr.name + '=' + attr.value + '),  ';\n            }\n        }\n        print(indent + me.tagName + '(' + indentNumber + '): ' + msg + ' => ' + params);\n    }\n\n    private ignore(name: string): boolean\n    {\n        return name.indexOf('_ng') > -1 ||\n            name.indexOf('ng-') > -1 ||\n            name.indexOf('spyhooks') > -1;\n    }\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AWCoreComponentModule} from '../../core/core.module';\nimport {OverlayComponent} from './overlay.component';\nimport {OverlayPanelModule} from 'primeng/primeng';\n\n@NgModule({\n    declarations: [\n        OverlayComponent\n    ],\n    imports: [\n        CommonModule,\n        AWCoreComponentModule,\n        OverlayPanelModule\n    ],\n    entryComponents: [\n        OverlayComponent\n    ],\n    exports: [\n        OverlayComponent,\n        AWCoreComponentModule\n    ],\n    providers: []\n})\nexport class AWOverlayModule\n{\n}\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HoverCardComponent} from './hover-card.component';\nimport {AWOverlayModule} from '../overlay/overlay.module';\nimport {AWStringFieldModule} from '../string/string.module';\n\n\n@NgModule({\n    declarations: [\n        HoverCardComponent\n    ],\n    imports: [\n        CommonModule,\n        AWOverlayModule,\n        AWStringFieldModule\n    ],\n    entryComponents: [\n        HoverCardComponent\n    ],\n    exports: [\n        HoverCardComponent\n    ],\n    providers: []\n})\nexport class AWHoverCardModule\n{\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n    AccordionModule,\n    AutoCompleteModule,\n    ButtonModule,\n    CalendarModule,\n    Checkbox,\n    CheckboxModule,\n    DataTableModule,\n    Dialog,\n    DialogModule,\n    DropdownModule,\n    EditorModule,\n    InputTextareaModule,\n    InputTextModule,\n    MenuModule,\n    OverlayPanelModule,\n    PaginatorModule,\n    PanelModule,\n    RadioButtonModule,\n    SharedModule,\n    TabMenuModule,\n    ToolbarModule,\n    TreeModule\n} from 'primeng/primeng';\nimport {AribaCoreModule} from '@aribaui/core';\nimport {SpyLifeCycleHooksDirective} from './spy-lifecycle.directive';\nimport {EmbeddedItemDirective} from './core/embedded-item';\nimport {ComponentRegistry} from './core/component-registry.service';\nimport * as components from './entry-components';\nimport {AWCoreComponentModule} from './core/core.module';\nimport {AWBasicNavigatorModule} from './widgets/basic-navigator/basic-navigator.module';\nimport {AWCheckBoxListModule} from './widgets/check-box-list/check-box-list.module';\nimport {AWCheckBoxModule} from './widgets/checkbox/check-box.module';\nimport {AWChooserModule} from './widgets/chooser/chooser.module';\nimport {AWConfirmationModule} from './widgets/confirmation/confirmation.module';\nimport {AWCurrencyModule} from './widgets/currency/currency.module';\nimport {AWDateAndTimeModule} from './widgets/date-and-time/data-and-time.module';\nimport {AWDialogModule} from './widgets/dialog/dialog.module';\nimport {AWDropdownModule} from './widgets/dropdown/dropdown.module';\nimport {AWGenericChooserModule} from './widgets/generic-chooser/generic-chooser.module';\nimport {AWHyperlinkModule} from './widgets/hyperlink/hyperlink.module';\nimport {AWInputFieldModule} from './widgets/input-field/input-field.module';\nimport {AWOutlineForModule} from './widgets/outline/outline-for.module';\nimport {AWOverlayModule} from './widgets/overlay/overlay.module';\nimport {AWPageNotificationModule} from './widgets/page-notification/page-notification.module';\nimport {AWPageWrapperModule} from './widgets/page-wrapper/page-wrapper.module';\nimport {AWRadioButtonModule} from './widgets/radio-button/radio-button.module';\nimport {AWRadioButtonListModule} from './widgets/radio-button-list/radio-button-list.module';\nimport {AWRichTextAreaModule} from './widgets/rich-text-area/rich-text-area.module';\nimport {AWHoverCardModule} from './widgets/hover-card/hover-card.module';\nimport {\n    AWScrollableContainerModule\n} from './widgets/scrollable-container/scrollable-container.module';\nimport {AWSectionModule} from './widgets/section/section.module';\nimport {AWStepperModule} from './widgets/stepper/stepper.module';\nimport {AWStringFieldModule} from './widgets/string/string.module';\nimport {AWTextAreaModule} from './widgets/text-area/text-area.module';\nimport {AWButtonModule} from './widgets/button/button.module';\nimport {AWFormTableModule} from './layouts/form-table/form-table.module';\nimport {AWListModule} from './widgets/list/list.module';\nimport {AWCardModule} from './widgets/card/card.module';\nimport {AWDatatable2Module} from './widgets/datatable2/datatable2.module';\nimport {DomUtilsService} from './core/dom-utils.service';\nimport {ModalService} from './core/modal-service/modal.service';\nimport {DataProviders} from './core/data/data-providers';\nimport {DataFinders} from './core/data/data-finders';\nimport {ErrorManagerService} from './core/error-manager.service';\nimport {AwNameStore} from './core/aw-name/aw-name.store';\nimport {DataTypeProviderRegistry} from './core/data/datatype-registry.service';\nimport {WizardProgressModule} from './widgets/wizard-progress/wizard-progress.module';\nimport {ToggleSwitchModule} from './widgets/toggle-switch/toggle-switch.module';\n\n/**\n * Component module is core module for the common layouts and widgets libraries.\n *\n * todo: There are some things that I still need to resolve - please see and notices @Duplicates\n * jsdoc I want to keep this there to remind me that I need to refactor this as of now there are\n * not much option with angular.\n *\n */\n@NgModule({\n    imports: [\n        AribaCoreModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        AWCoreComponentModule,\n        AWBasicNavigatorModule,\n        AWCardModule,\n        AWCheckBoxListModule,\n        AWCheckBoxModule,\n        AWChooserModule,\n        AWConfirmationModule,\n        AWCurrencyModule,\n        AWDateAndTimeModule,\n        AWDialogModule,\n        AWDropdownModule,\n        AWGenericChooserModule,\n        AWHyperlinkModule,\n        AWInputFieldModule,\n        AWOutlineForModule,\n        AWOverlayModule,\n        AWPageNotificationModule,\n        AWPageWrapperModule,\n        AWRadioButtonModule,\n        AWRadioButtonListModule,\n        AWRichTextAreaModule,\n        AWScrollableContainerModule,\n        AWSectionModule,\n        AWStepperModule,\n        AWStringFieldModule,\n        AWTextAreaModule,\n        AWFormTableModule,\n        AWButtonModule,\n        AWHoverCardModule,\n        AWListModule,\n        AWDatatable2Module,\n        WizardProgressModule,\n        ToggleSwitchModule,\n\n        // PrimeNG remove when all AW are imported\n        PanelModule,\n        ButtonModule,\n        ToolbarModule,\n        InputTextModule,\n        InputTextareaModule,\n        AutoCompleteModule,\n        DropdownModule,\n        CalendarModule,\n        CheckboxModule,\n        RadioButtonModule,\n        SharedModule,\n        DialogModule,\n        MenuModule,\n        TabMenuModule,\n        AccordionModule,\n        EditorModule,\n        DataTableModule,\n        PaginatorModule,\n        OverlayPanelModule,\n        TreeModule\n\n    ],\n    declarations: [\n        SpyLifeCycleHooksDirective,\n        // 3th party declaration\n    ],\n    bootstrap: [],\n    entryComponents: [\n\n        // PrimeNG\n        Checkbox,\n        Dialog\n    ],\n    exports: [\n        ReactiveFormsModule,\n        FormsModule,\n        SpyLifeCycleHooksDirective,\n        AWCoreComponentModule,\n        AWBasicNavigatorModule,\n        AWCardModule,\n        AWCheckBoxListModule,\n        AWCheckBoxModule,\n        AWChooserModule,\n        AWConfirmationModule,\n        AWCurrencyModule,\n        AWDateAndTimeModule,\n        AWDialogModule,\n        AWDropdownModule,\n        AWGenericChooserModule,\n        AWHyperlinkModule,\n        AWInputFieldModule,\n        AWOutlineForModule,\n        AWOverlayModule,\n        AWPageNotificationModule,\n        AWPageWrapperModule,\n        AWRadioButtonModule,\n        AWRadioButtonListModule,\n        AWRichTextAreaModule,\n        AWScrollableContainerModule,\n        AWSectionModule,\n        AWStepperModule,\n        AWStringFieldModule,\n        AWTextAreaModule,\n        AWFormTableModule,\n        EmbeddedItemDirective,\n        AWButtonModule,\n        AWHoverCardModule,\n        AWListModule,\n        AWDatatable2Module,\n        WizardProgressModule,\n        ToggleSwitchModule,\n\n        // PrimeNG\n        SharedModule,\n        PanelModule,\n        ButtonModule,\n        ToolbarModule,\n        InputTextModule,\n        InputTextareaModule,\n        AutoCompleteModule,\n        DropdownModule,\n        CalendarModule,\n        CheckboxModule,\n        RadioButtonModule,\n        DialogModule,\n        MenuModule,\n        TabMenuModule,\n        EditorModule,\n        DataTableModule,\n        PaginatorModule,\n        OverlayPanelModule\n    ]\n})\nexport class AribaComponentsModule\n{\n\n\n    static forRoot(): ModuleWithProviders\n    {\n        return {\n            ngModule: AribaComponentsModule,\n            providers: [\n                ModalService,\n                ComponentRegistry,\n                ErrorManagerService,\n                DomUtilsService,\n                DataTypeProviderRegistry,\n                DataProviders,\n                DataFinders,\n                AwNameStore,\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: registerComponents,\n                    deps: [ComponentRegistry],\n                    multi: true,\n                }\n            ]\n        };\n    }\n}\n\nexport function registerComponents(compRegistry: ComponentRegistry): Function\n{\n    return compRegistry.initialize.bind(compRegistry, components);\n}\n\n\n","/**\n *\n * @license\n * Copyright 2017 SAP Ariba\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n *\n */\nimport {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\nimport {ComponentRegistry} from './core/component-registry.service';\nimport * as components from './entry-components';\nimport {DomUtilsService} from './core/dom-utils.service';\nimport {ModalService} from './core/modal-service/modal.service';\nimport {DataProviders} from './core/data/data-providers';\nimport {DataFinders} from './core/data/data-finders';\nimport {ErrorManagerService} from './core/error-manager.service';\nimport {AwNameStore} from './core/aw-name/aw-name.store';\nimport {DataTypeProviderRegistry} from './core/data/datatype-registry.service';\n\n\n/**\n *\n * This module is used mainly for tests as importing a module with all the components and you\n * use only 1 or two has a big impact on the performance execution. e.g. from executing couple\n * tests under 1 sec can go up to 10sec if you import all the things that you are not using.\n *\n * I havent noticed anything similar in application its only jasmine/karma that needs to init\n * components for every test.\n *\n */\n@NgModule({\n    imports: []\n})\nexport class AribaComponentsTestProviderModule {\n\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: AribaComponentsTestProviderModule,\n            providers: [\n                ModalService,\n                ComponentRegistry,\n                ErrorManagerService,\n                DomUtilsService,\n                DataTypeProviderRegistry,\n                DataProviders,\n                DataFinders,\n                AwNameStore,\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: registerComponents,\n                    deps: [ComponentRegistry],\n                    multi: true,\n                }\n            ]\n        };\n    }\n}\n\nexport function registerComponents(compRegistry: ComponentRegistry): Function {\n    return compRegistry.initialize.bind(compRegistry, components);\n}\n\n\n"],"names":["isPresent","Directive","ViewContainerRef","Input","isBlank","MapWrapper","Component","Renderer2","ElementRef","AppConfig","tslib_1.__extends","noop","FormGroup","uuid","FormControl","Environment","Inject","SkipSelf","Optional","forwardRef","DomSanitizer","isStringMap","Injectable","assert","ComponentFactoryResolver","ChangeDetectorRef","StringWrapper","ViewChild","Pipe","CurrencyPipe","EventEmitter","Output","NgZone","NgModule","CommonModule","isType","objectToName","BehaviorSubject","observableOf","FieldPath","isArray","isString","unimplemented","isFunction","isJsObject","objectValues","InjectionToken","HostBinding","Validators","ListWrapper","ContentChild","ContentChildren","FormsModule","ReactiveFormsModule","InputTextModule","NG_VALUE_ACCESSOR","DecimalPipe","distinctUntilChanged","ButtonModule","ToolbarModule","isBoolean","CheckboxModule","equals","AutoCompleteModule","DropdownModule","isDate","CalendarModule","DialogModule","RadioButtonModule","isEntity","trigger","state","style","transition","animate","AnimationBuilder","InputTextareaModule","Subject","RoutingService","RouterModule","EditorModule","AccordionModule","AribaCoreModule","SharedModule","BooleanWrapper","ViewEncapsulation","DomHandler","tslib_1.__values","ObjectUtils","ChangeDetectionStrategy","Injector","debounceTime","switchMap","of","isPlatformBrowser","PLATFORM_ID","ListboxModule","OverlayPanel","print","OverlayPanelModule","APP_INITIALIZER","PanelModule","MenuModule","TabMenuModule","DataTableModule","PaginatorModule","TreeModule","Checkbox","Dialog","registerComponents"],"mappings":"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"}
