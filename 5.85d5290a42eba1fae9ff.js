(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"+/d4":function(e,n){e.exports='<svg focusable="false" viewBox="0 0 50 50" xmlns="http://www.w3.org/2000/svg"><path d="M50,9.3c-1.8,0.8-3.8,1.4-5.9,1.6c2.1-1.3,3.7-3.3,4.5-5.7c-2,1.2-4.2,2-6.5,2.5c-1.9-2-4.5-3.2-7.5-3.2c-5.7,0-10.3,4.6-10.3,10.3c0,0.8,0.1,1.6,0.3,2.3C16.1,16.7,8.5,12.6,3.5,6.4c-0.9,1.5-1.4,3.3-1.4,5.2c0,3.6,1.8,6.7,4.6,8.5C5,20,3.4,19.6,2,18.8c0,0,0,0.1,0,0.1c0,5,3.5,9.1,8.2,10.1c-0.9,0.2-1.8,0.4-2.7,0.4c-0.7,0-1.3-0.1-1.9-0.2c1.3,4.1,5.1,7,9.6,7.1c-3.5,2.8-7.9,4.4-12.7,4.4c-0.8,0-1.6,0-2.4-0.1c4.5,2.9,9.9,4.6,15.7,4.6c18.9,0,29.2-15.6,29.2-29.2c0-0.4,0-0.9,0-1.3C46.9,13.2,48.6,11.4,50,9.3z"></path></svg>\n'},"+Dgq":function(e,n){e.exports='<svg focusable="false" viewBox="0 0 51.8 50.4" xmlns="http://www.w3.org/2000/svg"><path d="M25.9,0.2C11.8,0.2,0.3,11.7,0.3,25.8c0,11.3,7.3,20.9,17.5,24.3c1.3,0.2,1.7-0.6,1.7-1.2c0-0.6,0-2.6,0-4.8c-7.1,1.5-8.6-3-8.6-3c-1.2-3-2.8-3.7-2.8-3.7c-2.3-1.6,0.2-1.6,0.2-1.6c2.6,0.2,3.9,2.6,3.9,2.6c2.3,3.9,6,2.8,7.5,2.1c0.2-1.7,0.9-2.8,1.6-3.4c-5.7-0.6-11.7-2.8-11.7-12.7c0-2.8,1-5.1,2.6-6.9c-0.3-0.7-1.1-3.3,0.3-6.8c0,0,2.1-0.7,7,2.6c2-0.6,4.2-0.9,6.4-0.9c2.2,0,4.4,0.3,6.4,0.9c4.9-3.3,7-2.6,7-2.6c1.4,3.5,0.5,6.1,0.3,6.8c1.6,1.8,2.6,4.1,2.6,6.9c0,9.8-6,12-11.7,12.6c0.9,0.8,1.7,2.4,1.7,4.7c0,3.4,0,6.2,0,7c0,0.7,0.5,1.5,1.8,1.2c10.2-3.4,17.5-13,17.5-24.3C51.5,11.7,40.1,0.2,25.9,0.2z"></path></svg>\n'},"/+Rv":function(e,n){e.exports='// This file is required by karma.conf.js and loads recursively all the .spec and framework files\n\nimport "zone.js/dist/zone-testing";\nimport { getTestBed } from "@angular/core/testing";\nimport {\n  BrowserDynamicTestingModule,\n  platformBrowserDynamicTesting\n} from "@angular/platform-browser-dynamic/testing";\n\ndeclare const require: any;\n\n// First, initialize the Angular testing environment.\ngetTestBed().initTestEnvironment(\n  BrowserDynamicTestingModule,\n  platformBrowserDynamicTesting()\n);\n// Then we find all the tests.\nconst context = require.context("./", true, /\\.spec\\.ts$/);\n// And load the modules.\ncontext.keys().map(context);\n'},"1/lO":function(e,n){e.exports="@import \"./variables\";\n\nhtml,\nbody {\n  height: 100%;\n}\nbody {\n  margin: 0;\n  font-size: 16px;\n  color: $color-black;\n  font-family: 'Source Sans Pro', sans-serif;\n  background: $color-grey-05;\n}\n\napp-markdown {\n  img {\n    max-width: 100%;\n  }\n\n  ul {\n    li {\n      padding: 4px 0;\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    color: $color-black;\n    font-weight: 600;\n    margin: 20px 0;\n  }\n\n  h1 {\n    font-size: 34px;\n    line-height: 40px;\n    margin-top: 32px;\n    margin-bottom: 24px;\n  }\n\n  h2 {\n    font-size: 28px;\n    line-height: 34px;\n    margin-top: 32px;\n    margin-bottom: 24px;\n  }\n\n  h3 {\n    font-size: 24px;\n    line-height: 32px;\n    margin-top: 32px;\n    margin-bottom: 20px;\n  }\n\n  h4 {\n    font-size: 20px;\n    line-height: 28px;\n    margin-top: 20px;\n    margin-bottom: 16px;\n  }\n\n  h5 {\n    font-size: 18px;\n    line-height: 24px;\n    margin-top: 20px;\n    margin-bottom: 16px;\n  }\n\n  h6 {\n    font-size: 16px;\n    line-height: 22px;\n    margin-top: 20px;\n    margin-bottom: 16px;\n  }\n}\n\na {\n  color: $color-blue;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\np {\n  line-height: 1.6;\n}\n"},"1jeT":function(e,n){e.exports='@import "../../../variables";\n\n\n:host {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n}\n\n#header {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n\n.socials {\n  margin: 0 0 0 auto;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n\n  li {\n    height: 24px;\n    width: 24px;\n  }\n\n  li:first-child {\n    margin-right: 20px;\n  }\n\n  .mat-icon {\n\n  }\n\n  a {\n    display: block;\n    height: 100%;\n    color: $color-grey-02;\n    transition: opacity 250ms ease;\n\n    &:hover {\n      opacity: 0.85;\n    }\n  }\n}\n\n.nav-opener {\n  border: none;\n  background: none;\n  padding: 0;\n  margin-right: 10px;\n  height: 64px;\n  width: 64px;\n  margin-left: -16px;\n  cursor: pointer;\n  outline: none;\n  transition: background-color 250ms ease;\n\n  &:hover {\n    background-color: $color-grey;\n  }\n}\n\n.logo {\n  display: block;\n  background: url("../../../assets/images/bg-logo.svg") no-repeat;\n  width: 149px;\n  height: 46px;\n  text-indent: -9999px;\n  transition: opacity 250ms ease;\n\n  a {\n    display: block;\n    height: 100%;\n  }\n\n  &:hover {\n    opacity: 0.85;\n  }\n}\n\n.mat-toolbar-row,\n.mat-toolbar-single-row {\n  height: $header-height;\n  border-bottom: 1px solid $border-color;\n  box-sizing: border-box;\n}\n'},"2A/y":function(e,n){e.exports="import { TestBed } from '@angular/core/testing';\n\nimport { AnchorScrollService } from './anchor-scroll.service';\n\ndescribe('AnchorScrollService', () => {\n  beforeEach(() => TestBed.configureTestingModule({}));\n\n  it('should be created', () => {\n    const service: AnchorScrollService = TestBed.get(AnchorScrollService);\n    expect(service).toBeTruthy();\n  });\n});\n"},"2bw3":function(e,n){e.exports='# OSS Rules and MetaUI Application\n\nIn this section we will extend our application from the [getting started guide][1] where a simple \npage was generated and also cover more advanced aspect behind but before we get into how to use OSS, \nlets start with a [quick overview of the syntax][6] and its similarities and differences to other \nsyntaxes you may know already. \n\n\n\n* [Overview of the OSS syntax][6]\n* [Extend MetaUI Applications](#extend-metaui-applications)\n* [Rules](#rules)\n* [Context and Properties](#context-and-properties)\n* [Chaining](#chaining)\n* [Built-in Rules](#built-in-rules)\n* [Application Rules](#application-rules)\n* [Rule Loading](#rule-loading)\n* [Rule Ranking](#rule-ranking)\n* [Visibility](#visibility)\n* [Validation](#validation)\n* [Editibility](#editibility)\n* [Actions](#actions) \n* [Layouts](#layouts)\n* [Other Areas to Explore](#other-areas-to-explore)\n\n\n#### Extend MetaUI Applications\n\nLet\'s add two more fields on the `User.ts` object from the getting started guide:\n\n```ts\n\nconstructor(public uniqueName?: string, public name?: string,\n              public description?: string, public created?: Date,\n              public age?: number, public isAngularDeveloper: boolean = false) {\n  }\n\n\n```\n\nWe want to keep it relatively simple so we added fields `age` and `isAngularDeveloper`. Let\'s also add type definition so \nrules can properly introspect these fields.\n\n\n```ts\n\n  getTypes(): any {\n    return {\n      uniqueName: String,\n      name: Number,\n      description: String,\n      created: Date,\n      age: Number,\n      isAngularDeveloper: Boolean\n    };\n```\n\nand extend our rule file `app/rules/User.oss` which tells the framework how and where these new fields \nshould be rendered. Let\'s show these field in `create` operation and default one which is `view`\n\n```ts\n\n  class=User {\n  \n        field=uniqueName {\n             label:"Id"\n        }\n  \n         field=name {\n             label:"Name"\n         }\n  \n         field=description {\n             trait:longtext;\n         }\n  \n         zNone => *;\n         zLeft => uniqueName => name => description => created => age => isAngularDeveloper;\n  }\n  \n  /*\n    Sample definition for operations edit and create\n  \n  */\n  class= User {\n     operation=(edit, create) {\n        zNone => *;\n        zLeft => name => description;\n     }\n  \n    operation=(create) {\n        zNone => *;\n        zLeft => name => description => created => isAngularDeveloper;\n     }\n  \n  }\n```\n\nand also extend a component constructor where we instantiate `User`\n```typescript\n\n this.object = new User(\'R0001\', \'Frank Kolar\', \'This is my user record\', new Date(),  20, true);\n\n```\n \n\nlet\'s recompile and look at the application again\n\n```ts\n  npm run compile:oss\n  ng serve \n\n```\nYou can also run `npm run watch:oss` that monitors any `oss` changes and recompile automatically.\n\n\n### Rules\n\nHere we are getting to the first topic the **Rules**. As you can see to add additional two fields we did not do much. \nYou extend only the domain object `User` and update a rule file just like you do with your css.\n\nA _Rule_ defines a map of properties that should apply in the event that a set of Selectors are matched. \nGiven a rule base Meta and a set of asserted values Context a list of matching rules can be computed \n(by matching their selectors against the values) and by successively (in rank / priority order) \napplying (merging) their property maps, a set of effective properties can be computed. \n\n\nEach rule can be stated like this:\n\n```ts\nIf selectors [__,__,...] match the current context values,\nthen apply the properties [__,__,...].\n```\n\nThese rules can come from a variety of sources:\n\n* **Runtime introspection of Typescript classes**\n    \n    These rules declare the available properties (fields)  along with their data types. \n    \n    _Example: "What are the fields in the `User` class?" In rules term:_\n    \n\n```ts\n  If selectors [class=User, declare=field]\n      match the current context values,\n  then apply the properties\n      [field:name]\n  \n  \n  If selectors [class=User, declare=field]\n      match the current context values,\n  then apply the properties\n      [field:isAngularDeveloper]\n            \n  ...    \n```    \n\n  Since typescript (javascript) does not offer proper reflection support so we can introspect a class \n  the `getTypes()` method exists.\n\n\n* **Built-in rules**\n\n  MetaUI includes a base set of rules (`WidgetsRuels.oss`) to describe, for instance, a mapping from field \n  data type to UI component. Example: "If it\'s a Boolean (`isAngularDeveloper`) and we\'re editing, use \n  the Checkbox component." \n  \n  In rules term:\n  \n\n```ts\n  If selectors [field=any, type=Boolean, editable=true]\n      match the current context values,\n  then apply the properties\n      [component:CheckboxComponent]\n```  \n\n\n* **Application provided rules**\n\n  Applications may provide explicit rules via "object style sheet (oss) files" (`User.oss`). These are a convenient \n  place to express presentation-oriented rules that really don\'t belong in (UI agnostic) domain classes. \n \n  \n  Example: "The description field should appear after name field." In rules term:\n  \n```ts\n  If selectors [class=User, field=description]\n      match the current context values,\n  then apply the properties\n      [after:name]\n```  \n\nIn our example you could see OSS syntax in form of (description goes after name):\n\n```ts\nzLeft => uniqueName => name => description => created => age => isAngularDeveloper;\n```\n\nor can be expressed as:\n\n```ts\nclass=User {\n     field=description {\n         after: name;\n     }\n```\n\n* **Other Sources of Meta Data**\n\n  Many applications have other external sources of information about the application\'s \n  domain classes. For instance, an application may have meta data comming from Rest API \n  that provide additional information about classes and fields that should be taken into account\n  when creating user interfaces (e.g. "is this field an owned to-many relationship?"). MetaUI provides generic \n  hooks for integrating such sources of metadata (in fact, the metadata sources above \n  integrate via these same hooks).\n      \n  \nWe\'ll go into more details for each type of rules, but for now let\'s take a look at context and properties...\n\n   \n   \n### Context and Properties\n\nContext represents a stack of assignments (e.g. [object]="user", operation="create", layout="Inspect"). \nThe current values are run against the Meta rule set to compute the effective property map.\nThe property map holds property key/value pairs that directly affects the UI (eg, component="CheckboxComponent", editable="false")\n\nThis is similar to how CSS works. HTML elements can have classes to provide context. For example:\n\n```html\n\n  <div class="box">\n      <h1>Hey</h1>\n  </div>\n  \n  <div class="X">\n   <div class="box">\n      <h1>There</h1>\n   </div>\n  </div>\n```\nThen you have rules that depending on the context and how they are nested, you get different styling properties:\n\n```css\n\n  .box {\n     border:1px solid red;\n     width:100px;\n     float:left;\n     color:green;\n  }\n  /*\n     if an element with class "box" that is contained\n     in an element with class "X",\n     then applies these properties\n  */\n  .X .box {\n      border:3px solid blue;\n      background-color:yellow;\n  }\n  /*\n     if a h1 element is contained\n     in an element with class "box" that is contained\n     in an element with class "X",\n     then applies these properties\n  */\n  .X .box h1 {\n      color:orange;\n  }\n```\n\n\nIf multiples rules match, properties are merged and overridden. In this example,the "There" element \nmerged the width and float properties, but overrode the border and color properties from more specific rules.\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/css-rule.png "CSS Rule Example")\n\n\nIn MetaUI, context values are set using `MetaContextComponent`:\n\n```html\n  <m-context [object]="user" operation="create" layout="Inspect">\n      <m-include-component></m-include-component>\n  </m-context>\n\n\n  <m-context [object]="user" operation="view" layout="Inspect">\n        <m-include-component></m-include-component>\n  </m-context>\n```\n\nThen you have rules that depending on the context and how they are nested, you get different UI properties:\n\n```ts\n  If selectors [operation=create, field=any]\n      match the current context values,\n  then apply the properties\n      [editing:true]\n  \n  If selectors [operation=view, field=any]\n      match the current context values,\n  then apply the properties\n      [editing:false]\n\n```\n\n`MetaIncludeComponent` and various Meta components takes the effective property map to generate \nprogramatically the UI.\n\n<img width="600" height="385" title="Create operation" src="https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/meta-create.png" >\n\n\nand view operation: \n\n\n<img width="400" height="305" title="view operation" src="https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/meta-view.png" >\n\n\n\n##### Here are some interesting context keys:\n\n* **module**: Global nav tab\n* **layout**: Define a named layout (e.g. "Inspect", "SearchForm")\n* **operation**: "view", "edit", "create", "search", "list"\n* **class**:  Class name\n* **object**: Object instance (e.g. a User object)\n* **action**: An action (e.g. could be fired from a button)\n* **field**: Current field of class\n* **elementType**: If type is collection, the type of its elements\n* **editing**: Currently editing? Derived from operation\n* **trait**: Current traits in effect (like CSS classes)\n\n##### Here are some interesting property keys:\n\n###### General\n\n* **trait**: List of traits to apply\n* **after**: Name of item (or zone) that this item should follow (for layout order)\n* **visible**: Should current item be shown\n* **component**: Component name to use for display\n* **bindings**: Map of bindings to pass to component\n* **wrapperComponent**: Name of component to wrap around this component (also, wrapperBindings)\n\n\n###### Class\n\n* **fieldsByZone**: Map of List<Fields> for the layout zones (e.g. "zTop", "zLeft", \x85)\n* **zonePath**: Zone key path for sub map to render\n* **zNone**: Special zone which makes field invisible\n* **zLeft**: Specific named zone that renders fields in the Left zone (the same applies for other zones: zRight, zBottom, zMiddle, zTop)\n\n\n###### Layout, Module, Field, Action\n\n* **label**: Display key \n \n###### Field\n\n* **editable**: Should current field be editable\n* **valid**: Is current value valid\n\n\n###### Layout\n\n* **layoutsByZone**: List of sub-layout names grouped by zone (zTop, zLeft, \x85)\n\n\n###### Action\n\n* **actionResults**: Executes js code that can fire any action\n\n\n\nHere are some of the interesting context keys that are explicitly set into the context:\n\n* **field**: set by MetaFormTableComponent\n* **action**: set by MetaActionListComponent\n* **actionCategory**: set by MetaActionListComponent\n* **class**: set by MetaFormTableComponent\n* **object**: set by MetaFormTableComponent\n* **layout**: set by MetaFormTableComponent MetaSectionComponent, MetaDashboardLayoutComponent\n* **module**: set by MetaHomePage\n\n\nHowever, some are implicitly set by the MetaUI engine. It\'s time to talk about chaining...\n\n\n### Chaining\n\nChaining is when some properties resulting from one rule are fed back as new context assignments, \nresulting in new matches.\n\nThese context assignments are "implied" by the current assignments are applied, (resulting in a revised \ncomputation of the current property map, and possible further chaining).\n\nReferring to the rules listed below, we can see how this particular chaining sequence happens:\n\n* The `field=isAngularDeveloper` value is assigned into the context by MetaFormTableComponent and activates rules 1 - 5.\n* The `type` property from rule 1 is chained/implicitly assigned backed into the context and activates rules 4 and 5.\n* The `editing` property from 2 is chained/implicitly assigned backed into the context and activates rule 3.\n* The `editable` property from 3 is chained/implicitly assigned backed into the context and activates rule 4.\n\n\n```ts\n1) If selectors [class=User, field=isAngularDeveloper]\n       match the current context values,\n   then apply the properties\n       [type:Boolean]\n\n\n2) If selectors [operation=create, field=any]\n       match the current context values,\n    then apply the properties\n        [editing:true]\n\n\n3) If selectors [field=any,editing=true]\n       match the current context values,\n   then apply the properties\n       [editable:true]\n\n\n4) If selectors [field=any, type=Boolean, editable=any]\n       match the current context values,\n   then apply the properties\n       [component:CheckboxComponent]\n\n\n5) If selectors [field=any, type=Boolean]\n       match the current context values,\n   then apply the properties\n       [bindings: {value=value}]\n\n```\n\nNot all properties are chained. The following are some of the interesting properties that are chained:\n\n* class\n* type\n* elementType\n* trait\n* editable\n* editing\n* layout\n* component\n\nYou should now have a sense of the power of rule based UI. Most of the rules to generate the UI are \nalready available from the domain object, or are conventions that are redundant to repeat. We don\'t need \nto worry about updating all the areas every time we add/remove/change a field.\n\n**Let\'s extend our example**\n\nLet\'s add proper label _"Full name"_ for `name` field like this in the `User.oss`:\n\n```ts\nclass=User {\n\n  field=name {\n     label:"Full name"\n  }\n  ...\n```\n\n\n```\nNote: Don\'t forget to run "npm run compile:oss" when you modify OSS rule file unless you launched in the other \nterminal "npm run watch:oss" command\n```\n\n\n\nWe just defined new selectors for [class=className, field=fieldName]. So in our example, this rule was created:\n\n```ts\nIf selectors [class=User, field=name]\n    match the current context values,\nthen apply the properties\n    [label:"Full name"]\n```\n\n\n\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/full-name.png "Updated label")\n\n\n\nWe can similarly add `trait` properties like this:\n\n```ts\nclass=User {\n\n  field=name {\n     label:"Full name";\n     trait:required;\n  }    \n  field=description {     \n       trait:longtext;\n  }  \n  ...\n```\n\n\nThe following rule is created:\n\n```ts\n  If selectors [class=User, field=name]\n      match the current context values,\n  then apply the properties\n      [trait:required]\n      \n  If selectors [class=User, field=description]\n      match the current context values,\n  then apply the properties\n      [trait:longtext]    \n\n```\n\nNow the _name_ field is required and description changed from simple text text field to text area.\n\n\n<p width="10px">\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/trait-longtext.png "Trait required")\n\n</p>\nWe\'ve discussed how `MetaIncludeComponent` switches in the right component with the \ncomponent property through chaining. As mentioned, the trait property is chained \nback to the context, but where are the rest of rules involved? This takes us to \nthe MetaUI built-in rules.\n\n\n\n### Built-in Rules\n\nAn important source of built-in rules are specified in `WidgetsRules.oss`. In this file, \nyou will find many useful rules for data type, decoration, trait, operation, layout, action, \nand module in OSS. In particular, you will find these nested OSS rules:\n\n```ts\nfield {\n     type=java.lang.String {\n        @trait=longtext {\n           after:zBottom;\n           editable { component:TextAreaComponent;\n             bindings:{cols:60; rows:10} }\n           ....\n       }\n```\n\nWe\'ll cover the OSS syntax in more details in a different tutorial, but this is one of the rules:\n\n```ts\n  If selectors [field=any, type=String,\n                trait=longtext, editable=true]\n      match the current context values,\n  then apply the properties\n      [component:TextAreaComponent]\n```\n\n\n### Application Rules\n\nSince we have already `User.oss` in the `app/rules` directory we are going to add following\n\n```ts\n       field=age  editable=false {\n          component:AgeRatingComponent;\n          bindings: {\n            value:$value;\n          }\n       }\n```\n\nThe `AgeRatingComponent` might look like this\n\n\n```ts\n  import {Component, Input, OnInit} from \'@angular/core\';\n  import {BaseComponent, Environment} from \'@ngx-metaui/rules\';\n  \n  \n  @Component({\n    selector: \'app-age-rating\',\n    template: `\n      <span class="w-string-field">\n        {{rating}}\n      </span>\n    `\n  })\n  export class AgeRatingComponent extends BaseComponent implements OnInit {\n  \n    @Input()\n    value: any;\n  \n    rating: string;\n  \n    constructor(protected environment: Environment) {\n      super(environment);\n    }\n  \n    ngOnInit(): void {\n      this.rating = (!this.value) ? \'N/A\' : ((this.value && this.value <= 20) ? \'Young\' : \'Good\');\n    }\n  }\n```\n\nAnd dont forget to add this into your module `declarations` as well as `entryComponents` since all is assembled \nprogrammatically\n\n```ts\n  @NgModule({\n    declarations: [\n      AppComponent,\n      UserDetailComponent,\n      AgeRatingComponent\n    ],\n    imports: [\n      BrowserModule,\n      BrowserAnimationsModule,\n      MetaUIRulesModule.forRoot({})\n    ],\n    entryComponents: [AgeRatingComponent],\n    providers: [],\n    bootstrap: [AppComponent]\n})\n\n```\n\nTo help the introspection when MetaUI tries to instantiate `AgeRatingComponent`the type must be known. For this\nwe are going to add export into `user-rules.oss`\n\n\n```ts\n/**\n * Export generated TS files from ./ts directory\n */\n\nexport * from \'./ts/DummyOSS\';\n\n/** Auto generated  export */\nexport * from \'./ts/UserOSS\';\n\nexport * from \'../age-rating/user-detail.component\';\n```\n\n\n\nRecompile oss, serve and let\'s change age from 20 to 30\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/metaui-age-edit.png "Add age 30")\n\nand in read-only mode the value renders as _Good_\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/metaui-age-view.png "Custom component for age field")\n\n\nAnd with that, we just overrode the default component property. To see how MetaUI determine how \nproperties from multiple rules are applied, we need to understand how rules are loaded and ranked...\n\n\n### Rule Loading\n\nOn application initialization:\n\n* Built-in `WidgetsRules.oss` rules are loaded. Build-in rules are already precompiled and are part of the _@ngx-metaui/rules_\n* If global application rule exists the `Application.oss` then its loaded  and there can only be one for the entire application.  \n* On first reference to class name in the MetaUI context:\n  * Introspection rules are created and they are loaded from `app/rules/[EntityNamne].oss`\n  \nTo load rules the `RuleLoaderService` is used.  \n  \n\n\n### Rule Ranking\n\n* Matching rules are applied in rank order to build the property map.\n* Rules from system (default rules) have lowest rank, then introspection rules, then application `.oss` rules.\n* Rank is (roughly) the order of appearance in the .oss file (later == higher rank)\n* When multiple rules update the same property, type and key-specific merge rules are applied:\n  * Maps and trait lists are merged\n  * visible, editable, and valid expressions are chained with AND semantics (except if override value is used - `e.g. visible=true!`)\n  * Other values are overridden\n  \n\n### Visibility\n\nLet\'s continue by adding some advanced rules. We want to hide the description field when we are not editing and \nisAngularDeveloper is false with the visibility property\n\n\n```ts\nfield=description {\n     trait:longtext;\n\n     editing=false {\n        visible: ${object.isAngularDeveloper};\n     }\n}\n```\n\nwhich creates this rule:    \n    \n```ts\nIf selectors [class=User, field=description, editing=false]\n    match the current context values,\nthen apply the properties\n    [visible:${object.isAngularDeveloper}]\n```    \n\nExpressions are wrapped in `${\x85}` and when used in property value, the "this" is the Context object - key\npaths reference assignments in context\n\n\n**The context also has special keys for the following:**\n\n* **object**: The current object instance set on the context by the object context key\n* **value**: The field value from evaluating the current field on the current object in the context\n* **properties**: The current property map access as `properties.get(\'<property name>\')`\n\n\n### Validation\n\nNext we add a validation on the `created` field to ensure that it\'s not a future with the `Validation` condition:\n\n\n```ts\n   field=created {\n      valid:${ object.isValidCreateDate() ? true : "The date cannot be in the future" };\n   }\n```\n\n\nand let\'s add our validation method to domain object `user.ts`:\n\n```typescript\n  isValidCreateDate(): boolean {\n    const dateNow = new Date();\n    return (this.created && this.created < dateNow);\n  }\n```\n\nwhich creates this rule:\n\n```ts\n  If selectors [class=user, field=created]\n      match the current context values,\n  then apply the properties\n      [valid:${object.isValidCreateDate()}]\n```\n\n\nWhen you select future date our custom error message appears\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/validity-created.png "Validate for future date")\n\n\n\n\n\n### Editibility\n\nLet\'s add a rule to prevent the editing the `name` field if the value `isAngularDeveloper` is  not true. \n\n```ts\n     field=name {\n         label:"Full name";\n         trait:required;\n         editable: ${object.isAngularDeveloper};\n     }\n```\n\nwhich creates this rule:\n\n```ts\nIf selectors [class=User, field=name]\n    match the current context values,\nthen apply the properties\n    [editable:${object.isAngularDeveloper}]\n```\n\nSelect _create_ operation and uncheck `isAngularDeveloper` and we see that it the `name` (Full name) is not editable.\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/editable.png "Editable if Angular developer")\n\n\n### Actions\n\nAction is the way how to add some logic into your MetaUI. For example:\n\n* Show a message dialog\n* Trigger routing\n* Or run some typescript/javascript code\n\nLet\'s add an action on the `User.oss` that shows only in editing mode and  when clicked it opens an alert \nwith the `object.name`:\n\n```ts\n  class {   \n    @action=Save  {\n         label: "Save";\n         actionResults:${ alert("Record saved : " + object.name) };\n         visible: ${properties.get("editing")};\n         buttonStyle:info;\n    }\n  }\n\n```\n\nTo be able to see the action let\'s change our `layout` binding to the `InspectWithActions` inside our\n`user-detail.component.html`, so it could\nlook like this:\n\n```html\n  <m-context [object]="object" [operation]="operation" layout="InspectWithActions">\n    <m-include-component></m-include-component>\n  </m-context>\n```\n\nYou can define different variety of layouts but more about this in the next section.\n\nwhich creates this rule:\n\n```ts\nIf selectors [class=User declare=action]\n    match the current context values,\nthen apply the properties\n    [action:Save]\n\nIf selectors [class=User, action=Save]\n    match the current context values,\nthen apply the properties\n   [actionResults:${\n           /*\n              - Run JS code that shows alert\n              - Use an object to access a name              \n           */\n           }\n       ]\n\n```\n\nWhen in editing mode the actions appears under action button placeholder.\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/action-save-1.png "Action Save shows in editing mode")\n     \n\nWhen clicked our message appears in alert dialog:\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/action-save-2.png "Action Save shows in editing mode")\n\nOther way to insert an `Action` we don\'t necessary need to change the layout we can keep the existing `Inspect` layout\nand use other `m-context` element and render actions like this:\n\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/action-links.png "Custom links with new m-context element")\n\n\nLet\'s extend our rules to:\n\n\n```ts\n/*\n  Sample definition for operations edit and create\n\n*/\n class= User {\n   operation=edit {\n      zNone => *;\n      zLeft  => name => description => age;\n   }\n\n  operation=create {\n      zNone => *;\n      zLeft => name => description => created => isAngularDeveloper;\n   }\n\n   @action=Save  {\n        label: "Save";\n        actionResults:${ alert("Record saved !") };\n        visible: ${properties.get("editing")};\n        buttonStyle:info;\n   }\n\n   @action=Discard  {\n         label: "Discard Changes";\n         actionResults:${ alert("All cleared !") };\n         visible: ${properties.get("editing")};\n         buttonStyle:info;\n   }\n}\n```\n\nWe just defined 2 actions on the class user and we can insert them to the page this \nlike this:\n\n```html\n  <span style="float: right">\n    Actions: [\n    <m-context [object]="object"  layout="Links">\n      <m-include-component></m-include-component>\n    </m-context>\n  ]\n\n  </span>\n\n\n  <m-context [object]="object" [operation]="operation" layout="Inspect">\n    <m-include-component></m-include-component>\n  </m-context>\n```\n\n\nWhen discard is clicked:\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/action-links-clicked.png "Custom links with new m-context element")\n\n### Layouts\n\nSo far we discussed how domain objects are rendered, we covered some advanced topics like conditions and \nactions and all this is nothing without layouts. \n\nLayouts are a like containers in MetaUI and they form high level structure in which you place your content.\nEven our form from above is backed up by layout:\n\n```ts\nclass layout=Inspect { \n  trait:Form; \n  label:${UIMeta.beautifyClassName(values.class)}; \n}\n\n@trait=Form { visible:true; component:MetaFormComponent }\n```\n\nIn MetaUI we have two types of containers:\n* module\n* layout\n\n`Module` is just another container that can use multiple layouts to assemble actual page and it used\nto generate top level navigation menu where each menu have its own content\n\n\nLet\'s define 3 tabs:\n \n```ts\n@module=Home {\n    label:"My Home";\n    pageTitle:"You are now on Homepage";\n\n    @layout=Today {\n       after:zTop;\n       label: "Sales Graph";\n       component:SalesGraphComponent;\n    }\n\n    @layout=Sport {\n       after:Today;\n       label: "Sport today!";\n       component:StringComponent;\n       bindings:{value:" ...... " }\n    }\n\n\n     @layout=Tech {\n           after:Sport;\n           label: "Tech News";\n           component:StringComponent;\n           bindings:{value:" ...... " }\n     }\n\n     @layout=MessageBoard {\n        after:zBottom;\n        label: "Message Board";\n        component:StringComponent;\n        portletWidth:large\n        bindings:{value:" ...... " }\n     }\n\n}\n\n\n\n@module=Products {\n    pageTitle:"You are now on Products";\n    homePage:ProductContentComponent;\n}\n\n\n@module=Sources {\n    label:"Sources for Module";\n    homePage:SourcesComponent;\n\n}\n```\n\n\nModule is defined like this:\n\n```ts\nmodule {\n    homePage:MetaHomePageComponent;\n    component:MetaDashboardLayoutComponent;\n    layout { visible:true }   \n}\n```\n\nEvery module is rendered on top of the `component` property (in this case `MetaDashboardLayoutComponent`) \nand uses `homePage`to render given content. In `@module=Home` we defined 4 layouts and distributed\nthem to different zones which are implemented by `MetaDashboardLayoutComponent`.\nOther tabs overrode `homePage` and added regular angular component.\n\nLayouts can in turn contain other layouts or object layouts and action layouts. Like our example from above where\nchanged layout binding to `InspectWithActions` because we needed to have a container that can hold and render actions:\n\n```ts\nlayout=InspectWithActions {\n    trait:Stack;\n    @layout=Actions#ActionMenu;\n    @layout=Inspect#Form;\n}\n```\n\nIn above build-in rule  we defined a layout `InspectWithActions` with `trait` Stack, which adds additional properties such `component`\nthat knows how to render its content in actual _stack_. And we have two named `@layout` where one creates a container \nfor actions and another renders a Form.\n\nSimilar way you can construct any kinds of layouts. Here is an example from different context. Let\'s create a generic\nlayout for `Invoice` class where we want to have expandable sections and each section will have its own content.\n\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/section-expanded.png "Custom links with new m-context element")\n\n\nall defined with the rule:\n\n```ts\nlayout=InvoicePage#Sections {\n    @layout=Header#Form {\n        zonePath:Header;\n        title:"Label for header section";\n        description:$object.itemDescription;\n        opened:false;\n    }\n\n    @layout=Participant {\n        title:"Label for Participant section";\n        visible:true;\n        canEdit:true;\n        component:Section2Component;\n        editing {\n            bindings:{\n                oper:\'editx\';\n            }\n        }\n        editing=false {\n            bindings:{\n                oper:\'vieaaa\';\n            }\n        }\n    }\n\n     @layout=Lines {\n        title:"Label for Line Item section";\n        visible:true;\n        canEdit:true;\n        editMode:"external";\n        actionIcon:"icon-positive";\n        component:Section3Component;\n        bindings:{\n            oper:${properties.get("operation")}\n        }\n    }\n    @layout=Footer#Form {\n        title:"Label for footer section";\n        zonePath:Footer;\n    }\n}\n```\n\n\nwith html code like this:\n\n```html\n  <m-context [object]="myRequest" operation="view" layout="InvoicePage"\n                   (onAction)="onActionHandler($event)">\n        <m-include-component></m-include-component>\n   </m-context>\n```\n\nFields are "zoned" by setting their predecessor with a dotted path (e.g. "header.zRight") that \nis establish as the "zonePath" for the nested form in the above ` @layout=Header#Form`\n\nThe application rule to render actual _Invoice_ could look like this:\n\n```\nclass=Invoice {\n    layout {\n        trait:labelsOnTop;\n    }\n    Header.zLeft => uniqueName => itemPrice;\n    Header.zRight => supplier => requestor;\n    Footer.zBottom => itemDescription;\n}\n```\n\n\n### Other Areas to Explore\n\nSo you\'ve seen how `MetaUI` works with domain objects to generate various user interfaces derived from rules. The next steps could be \nto give it a chance and try it out and also look at the following:\n\n* [Build-in rules][2]: Default rules where you can learn various oss constructions.\n* [MetaContext][3]: Angular component `m-context` responsible for setting context and communicating with the rule engine.\n* [MetaIncludeComponent][4]: Key component for reading final evaluated properties and rendering programatically UI.\n* [Meta][5]: Base class rule engine implementation.  \n* [OSS Grammar Tutorial][6]: Introduction to oss syntax  \n\n\n[1]: /getting-started\n[2]: https://github.com/ngx-meta/rules/tree/master/libs/rules/src/lib/metaui/core/oss\n[3]: https://github.com/ngx-meta/rules/blob/master/libs/rules/src/lib/metaui/core/meta-context/meta-context.component.ts\n[4]: https://github.com/ngx-meta/rules/blob/master/libs/rules/src/lib/metaui/layout/meta-include.directive.ts\n[5]: https://github.com/ngx-meta/rules/blob/master/libs/rules/src/lib/metaui/core/meta.ts\n[6]: #/oss-syntax\n'},"2eC6":function(e,n){e.exports="# MetaUI Architecture\n\nThis document describes `MetaUI framework` fundamentals and also shows you the implementation aspects in the \nTypescript (Javascript) environment, what are the limitations and workarounds that we need to follow. \n\n\n_`Note: If you are trying to integrate MetaUI into your project you might want to read this document first!`_\n\n[GETTING-STARTED.md][1]\n\n\nLet's start with this simplified picture:\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/meta-1.0.png?size=small \"High Level Diagram\")\n\nWe can see 3 big pieces  here that makes `MetaUI` framework what it is. So Let's start from the bottom:\n\n#### Rule Engine\n\n_Rule engine_ is implemented by `UIMeta` class along with other helper classes and here we accepts different assignments passed \nfrom _UIContext_ and evaluate the best possible match and return set of properties which are used later on to \nrender _User Interface_.  The same way you would expect any Internet Browser to work when parsing CSS. Simple right ?\n\nRules are loaded from the `files` as well as from `objects` by introspecting typescript class and trying to figure \nsome info about the objects such as data types. This is why _Domain Object_ implements interface `Deserializable` \nfor retrieving types. \n\n\n```ts\n\nexport class User implements Entity\n{\n\n\n    constructor(public uniqueName?: string, public firstName?: string,\n                public lastName?: string, public age?: number, public dob?: Date)\n    {\n    }\n\n    identity(): string\n    {\n        return this.uniqueName;\n    }\n\n\n    /**\n     * Used by MetaUI\n     *\n     */\n    getTypes(): any\n    {\n        return {\n            uniqueName: String,\n            age: Number,\n            firstName: String,\n            lastName: String,\n            dob: Date\n        };\n    }    \n   ...\n\n```\n\n\nBut to load rules from the files we use different method. OSS files are compiled to the \nTS class and then are packaged along with the application. This is why we have in the `metaui-evolution` app file called \n`user-rules.ts` which references all the available rules and then inside our module we have this line:\n\n```ts\n    import * as userRules from './user-rules';\n``` \n\nwhich registers this within the `AppConfig` and `Rule engine` can then iterate over all the compiled rules, load, index and \nstore them locally.\n\n\n\n#### UI Context\n\n`UI Context` is used to communicate with the `Rule Engine` and to hold stack of current assignments those that \nyou push using `MetaContext` component.\n\n\n\n```html\n   <m-context [object]=\"userObject\" operation=\"edit\" layout=\"Inspect\">\n        <m-include-component></m-include-component>\n   </m-context>\n\n```\n\nWhen you use above HTML fragment it treats bindings as a list of key/values and results following calls:\n\n\n```ts\n    context: Context = ...    \n    //context.set(key, value);\n    context.set('layout', 'Inspect');\n    context.set('operation', 'edit');\n    context.set('object', userObject);\n    \n```\n\nEvery `.set()` call pushes key /value property onto the Stack (`Context`) followed by passing it the `Rule Engine` to get back a  result which is cached and properties are retrieved.\n\nExample of retrieved properties:\n\n```\n        {\n        'visible': true,\n        'class_trait': 'fiveZones',\n        'editable': true,\n        'bindings': {\n            'value': 'Default Title'\n        },\n        'field_trait': 'required',\n        'label': 'Title',\n        'type': 'string',\n        'required': true,\n        'editing': true,\n        'valid': '{{(value && value.length > 0) ? true : \\'Answer required\\'}}',\n        'component': 'InputFieldComponent',\n        'field': 'title',\n        'layout_trait': 'Form',\n        'trait': 'required',\n        'rank': 20,\n        'after': 'zLeft',\n        'class': 'CheckRequest1'\n    }\n\n```\n\n#### UI Generation\n\nOnce rules are evaluated and list of properties is retrieved then the `MetaIncludeComponent`\nwill take care of the rest.\n\nHere you can notice the second line the `<m-include-component>` that reads generated properties. Therefore the wrapping element\n`<m-context>` is responsible for pushing and the `<m-include-component>` is here for collecting whatever is available \nand rendering UI.\n \n\n```html\n   <m-context [object]=\"userObject\" operation=\"edit\" layout=\"Inspect\">\n        <m-include-component></m-include-component>\n   </m-context>\n\n```\n\nThis gives you possibility to put in additional content around the `<m-include-component>`: \n\nex.:\n```html\n   <m-context [object]=\"userObject\" operation=\"edit\" layout=\"Inspect\">\n        \n        <h2> User Detail Page: </h2>\n    \n        <m-include-component></m-include-component>\n        \n        <user-org-chart [user]=\"userObject\" ></user-org-chart>\n   </m-context>\n\n```\n\nTo render a UI we use Angular's API (`ComponentFactoryResolver`, `ViewContainerRef`) and some DOM native operations.\n\n\n**Example**\n\n\nAfter a quick introduction, let's look at this old picture that takes us one level down. Even I am not really _Michelangelo_\nI hope we can get some information out of it. \n\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/meta-1.1.jpg \"Sketch\")\n\nLet's start from the top left corner:\n\n1) We push 3 assignments using ` <m-contex>` \n2) Value is pre-processed and push one by one to the Stack\n3) Inside our Stack `(Context)`, we check and try to retrieve existing Activation which is sharable object\nthat holds Assignments hierarchy\n4) If it does not exists we initiate `match`\n5) Before it reaches Indexed KEYDATA store (completely on the right), on its way it broadcasts several notifications (see the phone)\n6) These notification are received by Observers that are responsible to pre-load and register\nnew rules relevant to current data\n7) `Rules Engine` gives back `Value Matches` which is at this point just pointers to RuleDB (not real properties)\n8) Assignment is created and its cached. If additional rule chaining needs to happen it is here, where certain\nproperties are mirrored and pushed again to (step #1)\n9) If no further chaining is needed we cache `Activation` for later use (step #3)\n10) Retrieve and convert match result to real properties that are used to render UI.\n \n\n## Typescript specifics\n\n\n### Rule file loading\n\nAs already mentioned above we can not simply load a rule file from the system since it's running inside \na browser but we do take the `OSS file` and compile it, it outputs `TS file`, which is then bundled as a part of the project.\n\nFor example something like this:\n\n```js\nclass=Order {\n     @field=title#derived {\n        type:String;\n        value:${\"Purchase Order: \" + object.name };\n        bindings:{\n            useNoLabelLayout:true;\n        }\n        wrapperComponent:GenericContainerComponent;\n        wrapperBindings: { tagName:h2; }\n    }\n\n    field=uniqueName {\n        label:\"PO #\"\n    }\n\n    field=description {\n        bindings: {\n            styleClass: 'u-description';\n        }\n    }\n    ...\n  }\n```\n\nis converted into something like this a Map-like format:\n\n```\n/**\n *  This is generated file. Do not edit !!\n *\n *  @formatter:off\n *\n */\n/* tslint:disable */\nexport const OrderRule = {\n \toss:\t\t\t[\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': 'Order',\n\t\t\t        '_isDecl': false\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_rank': 0\n\t\t\t  },\n\t\t\t  {\n\t\t\t    '_selectors': [\n\t\t\t      {\n\t\t\t        '_key': 'class',\n\t\t\t        '_value': 'Order',\n\t\t\t        '_isDecl': false\n\t\t\t      },\n\t\t\t      {\n\t\t\t        '_key': 'field',\n\t\t\t        '_value': 'title',\n\t\t\t        '_isDecl': true\n\t\t\t      }\n\t\t\t    ],\n\t\t\t    '_properties': {\n\t\t\t      'wrapperComponent': 'GenericContainerComponent',\n\t\t\t      'wrapperBindings': {\n\t\t\t        'tagName': 'h2'\n\t\t\t      },\n\t\t\t      'bindings': {\n\t\t\t        'useNoLabelLayout': true\n\t\t\t      },\n\t\t\t      'trait': 'derived',\n\t\t\t      'type': 'String',\n\t\t\t      'value': {\n\t\t\t        't': 'Expr',\n\t\t\t        'v': '\"Purchase Order: \" + object.name'\n\t\t\t      }\n\t\t\t    }\n            ..\n         }\t\t\t    \t\t\t    \n   ]\n\n```\n\nAnd this TS content is then read by our special loader `RuleLoader` which registers them with the rule \n engine (the `Meta` class).\n \n```ts\n\nexport interface RuleLoader\n{\n    loadRules (meta: Meta, source: any, module: string, onRule: (rule: Rule) => void): void;\n}\n\n```\n\nTherefore we are using following directory structure. Here we store `Rule files (.oss)`\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/meta-1.2.png?size=small \"Directory structure\")\n\nand barrel `index.ts` that just exports all from this directory. It is worth mentioning that you can pick any structure \nyou want as long you can have one file at the end like `user-rules.ts` that exports everything so it can be imported \nand used in the app module. The rest is standard cli's project.\n\nEverytime you change rules, you just run a OSS compiler.\n\n_You can see how its used in the packages.json_\n\n```\njava -jar lib/meta-ui-parser.jar --gen --user ./packages/metaui/src/core ./modules/metaui-evolution/src/app/rules\n\njava -jar <PATH TO meta-ui-parser> --gen --user <PATH to the system rules> <DIRECTORY WITH YOUR USER FILES>\n\nif you are using it in your application then it will be probably something like: \n\n    =>  <PATH TO meta-ui-parser> - node_modules/@aribaui/resources/tools/oss/meta-ui-parser.jar\n    \n    => <PATH to the system rules> -   node_modules/@aribaui/metaui/core\n\n    => <DIRECTORY WITH YOUR USER FILES> -   ~/<PATH TO YOUR PROJECT>/src/app/rules\n    \nex: \n\njava -jar node_modules/@aribaui/resources/tools/oss/meta-ui-parser.jar --gen --user node_modules/@aribaui/metaui/core ~/<PATH TO YOUR PROJECT>/src/app/rules\n    \n```\n\nOnce you run this command it will create `ts` directory under the `<DIRECTORY WITH YOUR USER FILES>`\n\n\n`Note: Rules are loaded lazily so a specific rule file for example the  order.oss (order.ts) is loaded after you really push Order object to a stack`\n\n**Even there is a activity in progress where we try to finish a parser in TS** (there is a branch called compiler) , but it does not go as fast as I \nwould like to. Maybe we will drop OSS completely and we will try to replace it somehow with TS support to define system level as well as user level \nrules. \n\n\n\n### Domain object introspection\n\nJust like in css world where you define CSS selectors and you try to match against these selectors your HTML along with some other context properties the same \nworks here. \n\nSo far we loaded and registered `OSS files (TS files) ` and now we need to introspect object to understand its internal structure so we \ncan register additional rules that are not covered by our `OSS files`.\n\n\nLet's remember OSS stands for `Object style sheet`, meaning there is the same analogy with CSS:\n\n* You first need to have rules in place\n* You throw in an `Object` and a selector(s) are matched\n* It returns properties that are defined under these selectors. \n* Properties are picked by `m-include-component`\n* UI is rendered\n\n\nSome example how we register rules for specific object:\n\n```ts\n\n// IntrospectionMetaProvider.ts\n\nprivate registerRulesForFields(object: any, className: string): void {\n        let fieldNames =...\n\n        let rank = 0;\n        for (let name of fieldNames) {\n            ...\n            let type = instance[name]. => GET TYPE\n            let properties = new Map<string, any>();\n\n            properties.set(ObjectMeta.KeyField, name);\n            properties.set(ObjectMeta.KeyType, type);\n            properties.set(ObjectMeta.KeyVisible, true);\n\n            // if we are dealing with array we need to know a type of actual element\n            if (isArray(instance[name])) {\n                ....\n                properties.set(ObjectMeta.KeyElementType, collectionElementType);                \n            }\n\n            // create programatically selector and proeprties\n            let selectorList: Array<Selector> = [\n                new Selector(ObjectMeta.KeyClass, className),\n                new Selector(ObjectMeta.KeyField, name),\n            ];            \n            properties.set(ObjectMeta.KeyRank, (rank++ + 1) * 10);\n            let rule: Rule = new Rule(selectorList, properties, ObjectMeta.ClassRulePriority);\n            this._meta.addRule(rule);\n        }\n    }\n}\n\n```\n\nThis way we automatically pre-register additional rules for  an `Object` such as data type for class field.\n\n\n[1]: ./oss-rules\n"},"2iOL":function(e,n,t){var o={"./app/app-routing.module":"4mzJ","./app/app-routing.module.ts":"4mzJ","./app/app.component":"vmX7","./app/app.component.html":"jzMr","./app/app.component.scss":"4KYV","./app/app.component.spec":"TnL7","./app/app.component.spec.ts":"TnL7","./app/app.component.ts":"vmX7","./app/app.module":"FQZN","./app/app.module.ts":"FQZN","./app/app.routing":"MD9C","./app/app.routing.ts":"MD9C","./app/components/doc-page/doc-page-routing.module":"jXZ3","./app/components/doc-page/doc-page-routing.module.ts":"jXZ3","./app/components/doc-page/doc-page.component":"grJI","./app/components/doc-page/doc-page.component.ts":"grJI","./app/components/doc-page/doc-page.module":"3Z3C","./app/components/doc-page/doc-page.module.ts":"3Z3C","./app/layout/aside-nav/aside-nav.component":"Z0BQ","./app/layout/aside-nav/aside-nav.component.html":"fcKH","./app/layout/aside-nav/aside-nav.component.scss":"BGbC","./app/layout/aside-nav/aside-nav.component.spec":"h3X0","./app/layout/aside-nav/aside-nav.component.spec.ts":"h3X0","./app/layout/aside-nav/aside-nav.component.ts":"Z0BQ","./app/layout/footer/footer.component":"DjUc","./app/layout/footer/footer.component.html":"b+0G","./app/layout/footer/footer.component.scss":"KBwr","./app/layout/footer/footer.component.spec":"pgng","./app/layout/footer/footer.component.spec.ts":"pgng","./app/layout/footer/footer.component.ts":"DjUc","./app/layout/header/header.component":"H1Xw","./app/layout/header/header.component.html":"gROI","./app/layout/header/header.component.scss":"1jeT","./app/layout/header/header.component.spec":"CDmH","./app/layout/header/header.component.spec.ts":"CDmH","./app/layout/header/header.component.ts":"H1Xw","./app/layout/markdown/getting-started.doc.md":"EFKO","./app/layout/markdown/markdown.component":"B/M4","./app/layout/markdown/markdown.component.ts":"B/M4","./app/layout/markdown/markdown.module":"7mq+","./app/layout/markdown/markdown.module.ts":"7mq+","./app/layout/sidebar/sidebar.component":"7HvN","./app/layout/sidebar/sidebar.component.html":"KPCu","./app/layout/sidebar/sidebar.component.scss":"p83q","./app/layout/sidebar/sidebar.component.spec":"T86Z","./app/layout/sidebar/sidebar.component.spec.ts":"T86Z","./app/layout/sidebar/sidebar.component.ts":"7HvN","./app/services/anchor-scroll.service":"Z06X","./app/services/anchor-scroll.service.spec":"2A/y","./app/services/anchor-scroll.service.spec.ts":"2A/y","./app/services/anchor-scroll.service.ts":"Z06X","./app/services/headings-list.service":"Wa/l","./app/services/headings-list.service.spec":"hZTe","./app/services/headings-list.service.spec.ts":"hZTe","./app/services/headings-list.service.ts":"Wa/l","./assets/docs/getting-started.md":"6HJT","./assets/docs/metaui-architecture.md":"2eC6","./assets/docs/oss-rules.md":"2bw3","./assets/docs/oss-syntax.md":"44/T","./assets/images/bg-logo.svg":"k9Uu","./assets/images/ico-github.svg":"+Dgq","./assets/images/ico-hamburger.svg":"prXV","./assets/images/ico-twitter.svg":"+/d4","./environments/environment":"m+9Q","./environments/environment.prod":"qHC2","./environments/environment.prod.ts":"qHC2","./environments/environment.ts":"m+9Q","./favicon.ico":"w/TQ","./index.html":"RhHz","./main":"DpLb","./main.ts":"DpLb","./polyfills":"RHwJ","./polyfills.ts":"RHwJ","./styles.scss":"1/lO","./test":"/+Rv","./test.ts":"/+Rv","./variables.scss":"O/NB"};function r(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id="2iOL"},"3Z3C":function(e,n){e.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DocPageRoutingModule } from './doc-page-routing.module';\nimport { DocPageComponent } from './doc-page.component';\nimport { MarkdownModule } from '../../layout/markdown/markdown.module';\n\n@NgModule({\n  declarations: [\n    DocPageComponent\n  ],\n  imports: [\n    CommonModule,\n    DocPageRoutingModule,\n    MarkdownModule\n  ],\n})\nexport class DocPageModule { }\n"},"3xi6":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("qmq5"),t("981U");var o=t("LoAr"),r=t("qmq5"),i=t("981U"),a=t("WT9V");n.AnchorScrollService=function(){function e(e,n,t){this.pageScrollService=e,this.router=n,this.document=t}return e.prototype.scrollToTarget=function(e){var n=this.document.getElementById("mat-content");e&&this.pageScrollService.scroll({document:this.document,scrollTarget:"#"+e,scrollViews:[n],scrollOffset:20,duration:250}),e||n.scroll(0,0)},e.ngInjectableDef=o.defineInjectable({factory:function(){return new e(o.inject(r.PageScrollService),o.inject(i.Router),o.inject(a.DOCUMENT))},token:e,providedIn:"root"}),e}()},"44/T":function(e,n){e.exports="#  OSS Syntax\n\n \nRule format is inspired by CSS, but extended to support nesting and chaining and tweaked to deal with identifiers containing `.`s. \n\n**CSS**\n```css\n  div#toc a {\n      text-decoration:underline;\n  }\n```\n\n\n**OSS**\n ```ts\n     class=User field=email {\n         toolTip:\"Your email\";\n     }\n\n```\n\n* **CSS**: if an `a` tag appears in a `div` named toc, set the property `text-decoration` to `underline`\n* **OSS**: if a field named `email` appears in a class named `User`, set the property `toolTip` to `Your email address`\n\n\n### Basic syntax\n\n#### Nesting\n\nThese are equivalent\n\n```ts\nclass=User {\n  field=firstName {\n    editing=true { \n      visible:true; \n    }\n  }\n}\n\nclass=User {\n  field=lastName {\n    editing=true { \n      visible:true; \n    }\n  }\n}\n\nclass=User {\n  field=email {\n    editing=true { \n      visible:true; \n    }\n  }\n}\n\n\n```\nor \n\n```ts\nclass=User field=firstName editing { visible:true; }\nclass=User field=lastName  editing { visible:true; }\nclass=User field=email editing     { visible:true; }\n\n```\n\nor \n\n```ts\nclass=User editing {\n    field=firstName { visible:true; }\n    field=lastName  { visible:true; }\n    field=email     { visible:true; }\n}\n```\n\nor \n\n```ts\nclass=User editing field=(firstName, lastName) {\n    visible:true; \n}\n```\n\n\n#### Values\n\nValues can be Boolean, Integer, String, List, Map, and Expressions \n\n```ts\nfield=password {\n    // boolean\n    editable:true;\n    \n    //String literal quoted\n    toolTip:\"This is required\";\n    \n    // This is how specify list of values \n    trait:(required, secret);\n    \n    // String literal (unquoted)\n    component:AWPasswordField;\n    \n    // Map\n    bindings: {\n        size:20;\n    }\n    \n    // Expression\n    valid: ${ value.length > 5 } \n}\n```\n\n\n#### Traits\n\nLike CSS classes: Used to assign sets of properties. E.g.:\n\n```ts\nclass=User {\n    field=password {\n        trait: required, secret;\n    }\n}\n```\n\nis expanded to:\n\n```ts\nclass=User {\n      field=password {\n          // When editable use PasswordFieldComponent\n          editable {\n                  component:PasswordFieldComponent;\n          }\n          \n          // If in operation edit or create make it mandatory with defining custom validity condition\n          operation=(edit, create) {\n            required:true;            \n            object {\n                valid: ${(value != null && value !=\"\") ? true : \"Answer required\"}\n            }\n          }\n      }    \n}\n```\n\nSince `build-in` rules contains following trait definition:\n\n```ts\nfield trait=secret {    \n    editable {\n        component:PasswordFieldComponent;\n    }\n}\n\nfield trait=required operation=(edit, create) {\n    required:true;\n    object {\n        valid: ${(value != null && value !=\"\") ? true : \"Answer required\"}\n        }\n    }\n}\n```\n\n\n\n#### Declaration\n\n* When _MetaUI_ collects lists of modules, layouts, classes, or actions to display it matches declared items (in the current context, that are visible).\n* Some items are declared automatically based on introspection\n  * Please see [IntrospectionMetaProvider][1] in the ObjectMeta\n* Others can be added with the \u201c@ Notation\u201d in .oss files.\n\n\n**A derived field declaration:**\n\n```ts\nclass=User {\n  @field=fullName {\n      value:${firstName + \" \" + lastName};\n  }\n}\n```\n\n\n**List of section layouts**\n\n```ts\nlayout=InvoicePage#Sections {\n    @layout=Header#Form {\n        zonePath:Header;\n        title:\"Label for header section\";\n        description:$object.itemDescription;\n        opened:false;\n    }\n\n    @layout=Participant {\n        title:\"Label for Participant section\";\n        visible:true;\n        canEdit:true;\n        component:Section2Component;\n        editing {\n            bindings:{\n                oper:'editx';\n            }\n        }\n        editing=false {\n            bindings:{\n                oper:'vieaaa';\n            }\n        }\n    }\n```\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/section-expanded.png \"Custom links with new m-context element\")\n\n\n ### Advanced syntax\n\n\n#### Traits\n\nThese are equivalent:\n \n```ts\nfield=firstName {\n    trait:required;\n}\n```\n\nvs\n\n```ts\n// with # trait assignment \nfield=firstName#required;\n```\n \n \n \n#### Field rank\n\n```ts\nfield=firstName {\n    after:zLeft;\n    trait:required;\n}\nfield=lastName {\n    after:firstName;\n    trait:required;\n}\nfield=password {\n   after:lastName;\n   trait:required,secret;\n}\n\n```\n\nvs using predecessor operator\n\n```ts\n\nzLeft => firstName#required => lastName#required => password#required,secret\n```\n\n# Exrepssions\n\nExpressions are wrapped in `${\u2026}` and use the AWExpr language which perfectly can execute also javascript code\nThe `\u201cthis\u201d` is the `Context object` \u2013 key paths reference assignments in context\n\n  * This is one of the reason why we actively thinking about new way how to be less dependant on OSS any legacy expression libraries\n  while trying to more close to the code. This is phase [OSS Files and its next phase][2] \n\n\n```ts\nobject field=bio{\n    editable: ${object.credits > 50}\n}\nobject @field=fullname {\n    value: ${object.firstName + \u201c \u201c + object.lastName}\n}\n```\n\nThe context has special keys for value and properties \n\n\n\n```ts\nfield=budget{\n    valid: ${value >= 0 ? true : \"Budget must be non-negative\" }\n}\n\nfield {\n    fancyLabel:${properties.label + \"!!!\"}\n}\n```\n\n\n\n\n#### Grammar\n\n**`rules ::= rule *`**\n  * A OSS Rule file can have more then one rule defined in the file. Each rule can nest other rules as well\n\n\n\n**`rule ::= selector+  traitList? ('{' ruleBody  '}' | ';')`**\n  * Each rule starts with selector or selectors and can be followed by list of traits.\n    * If you remember we mentioned in the advanced syntax that trait can be written like this `#required ` with `#` character\n\n**`traitList ::= '#' IDENTIFIER  (',' IDENTIFIER)*`**\n * When using trait advanced syntax then we start with `#` character and add one or more trait delimited by comma\n \n \n**`**selector ::= '@'? (selectorDef |  '~' IDENTIFIER_KEY)**`**\n  * A selector can start with `@` in case we are declaring a field\n      ```ts\n         @field=fullName {\n              value:${firstName + \" \" + lastName};\n          }\n      ```\n  * Followed by one or more _selector definition_ which is always key/value or just one or more  _identifier_. You probably saw this already. We can say\n       \n```\n               class operation=edit {               \n                   field { editing:true; }               \n               }\n```\nwhich is equivalent to:\n       \n```ts\n               class=* operation=edit {               \n                   field=* {\n                    editing:true; \n                   }               \n               }\n```\n      \n\n\n**`selectorDef ::=  IDENTIFIER_KEY   selectorValue?`**\n * The selector definition  is just a key which is always string and can have a value. If does not have value then there is a implicit `*`\n or `true` assigned\n\n**`selectorValue ::= '=' (simpleValue | '(' valueOrList ')' )`**\n  * When value is assigned there is a always `=` sign followed by simple value :\n    * String literal\n    * true or false\n    * null \n    * integer or float \n  \n  \n* or complex value such as :\n  * List\n  * map\n  * expression\n  * field path with `.`s\n  * and others\n\n**`ruleBody ::= ruleBodyKeyValue*  rule* ruleBodyKeyValue* rule* precedenceChain*`**\n* Rule body contains actual properties (key/values) or can contain other rules\n* They can also contain at the end of definition the chain of predecessor operators \n  * the `zLeft => aaa => bbbb;`\n\n**`ruleBodyKeyValue ::= (key ':' value '!'? ';'? )`**\n* Just like in css its key/value pair. you can add `!` character  to override existing rule (something like `!important`)\n\n\n[1]: https://github.com/ngx-meta/rules/blob/master/libs/rules/src/lib/metaui/core/object-meta.ts\n[2]: https://github.com/ngx-meta/rules/projects\n"},"4KYV":function(e,n){e.exports='@import "../variables";\n\n#wrapper {\n  display: flex;\n  height: calc(100vh - #{$header-height});\n  flex-flow: column nowrap;\n  min-width: 320px;\n  padding-top: $header-height;\n}\n#main {\n  flex: 1;\n\n  .sidenav {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    top: $header-height;\n    width: $sidenav-width;\n    overflow-y: auto;\n  }\n}\n/* mat-sidenav-container */\n.mat-sidenav-container {\n  height: 100%;\n}\n/* aside-nav */\n.aside-nav {\n  flex: 0 0 $aside-nav-width;\n}\n/* content */\n#content {\n  flex: 1;\n  flex-flow: row nowrap;\n  display: flex;\n}\n/* content-holder */\n.content-holder {\n  padding: 0 30px 50px;\n  box-sizing: border-box;\n  overflow: hidden;\n}\n/* tablet styles */\n.tablet {\n  app-aside-nav {\n    bottom: 0;\n    overflow: auto;\n  }\n\n  app-footer {\n    margin-right: $aside-nav-width;\n  }\n}\n'},"4mzJ":function(e,n){e.exports="import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { routes } from './app.routing';\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"},"6HJT":function(e,n){e.exports='# Getting started\n\nIn this section we\'ll cover basics of the MetaUI rules framework `@ngx-metaui/rules` to assemble user interface on the fly without templates.\n \n\n### Prerequisites\n+ Knowledge of typescript \n+ Basic Web development\n+ Angular 7.x\n\n_Continuing without prior knowledge of all above is not recomended_ and result is unknown.\n\n----\n\n## Quickstart \n\nTo get everything up and running run following commands:\n\n#### Step 1\n\nCreate new angular application (unless you are integrating it with existing one)\n```\n  ng new MyDetailPage --style=scss\n```\n\n\n#### Step 2\n\nAdd `@ngx-metaui/rules` to your app\n```\n  cd MyDetailPage/\n  ng add @ngx-metaui/rules --uiLib="prime-ng"\n```\n\nOnce finished you are fully configured to start some rule driven development but we skip ahead generate some ready to use page!\nThe `--uiLib="prime-ng"`  switch pre-configures UI Library to be used with the MetaUI. Even we currently support only `PrimeNg`\nthe `Material 2` library is somethign we are working on right now...\n\n\n\n#### Step 3\n\nCreate `UserDetail` page with different page modes:  `Create`, `Edit` and `View`  Even this does\'t do much it will show  \nbasic aspects of _MetaUI_.\n\n```\nng g  @ngx-metaui/rules:mPage --modelClass=User --name=UserDetail \n```\nand follow instructions printed in console such as `compile oss rules` _(We will get to this)_:\n\n```\nnpm run compile:oss\n```\n\n### Step 4\n\nEither attach created page into your router or like in our case  we will simply replace the out of box \n_welcome_ content of the  `app.component.html` with this line\n\n```\n<app-user-detail></app-user-detail>\n```\n\n### Step 5\n\nRun the application \n\n```\nng serve\n```\nand access the page [http://localhost:4200][2] and you just created a page which is based on rules.\n\n\n\n#### Let\'s Recap what just happened and what was created: \n\n*  `/model/user.ts` to represent our domain object\n*  Component `UserDetailComponent` with just 3 main lines to generate whole content and 3 buttons to switch between `Create`, `Edit` and `View` \nmodes\n* A Rule file `User.oss` ( _OSS - Object style sheet_ ) to style how the object should be rendered and behave for different situations\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/getting-started-1.1.png "Generate MetaUI Application")\n\nThe page should look like this showing different fields based on selected operation\n\n\n#### Next Step \n\nNow we just touched the surface of the rule driven UI development and looked at other ways how web application can be \nbuilt. \n\n* To understand how this works please jump to the [next topic][2] where we extend this application and give you \ndeeper introduction to the MetaUI.\n\n* Or you can read [High level fundamentals][3] that are behind this framework. \n    \n [1]: http://localhost:4200\n [2]: #/oss-rules\n [3]: #/metaui-architecture\n \n     \n'},"7HvN":function(e,n){e.exports="import { Component, OnInit } from '@angular/core';\nimport { HeadingsListService } from '../../services/headings-list.service';\nimport { NavigationEnd, Route, Router, RouterEvent, Routes } from '@angular/router';\n\nimport { routes } from '../../app.routing';\nimport { filter } from 'rxjs/operators';\nimport { AnchorScrollService } from '../../services/anchor-scroll.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  navItems: HTMLElement[];\n  menuList: Routes;\n  activeRoute: string;\n  activeFragment: string;\n\n  constructor(\n    private router: Router,\n    private headingsListService: HeadingsListService,\n  ) {\n    this.router.events.pipe(\n        filter((event: RouterEvent) => event instanceof NavigationEnd)\n      )\n      .subscribe(() => {\n        this.activeRoute = this.router.url.split('#')[0].replace('/', '');\n        this.activeFragment = this.router.url.split('#')[1];\n      });\n\n    this.menuList = routes.filter((route: Route) => {\n      return route.path; // exclude empty route\n    });\n  }\n\n  ngOnInit(): void {\n    this.headingsListService.navList\n      .subscribe((data: HTMLElement[]) => {\n        this.navItems = data;\n      });\n  }\n}\n"},"7mq+":function(e,n){e.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarkdownComponent } from './markdown.component';\n\n\n@NgModule({\n  declarations: [\n    MarkdownComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    MarkdownComponent\n  ]\n})\nexport class MarkdownModule { }\n"},"B/M4":function(e,n){e.exports="import {AfterViewInit, Component, ElementRef, Input, OnInit} from '@angular/core';\nimport * as marked from 'marked';\nimport {HeadingsListService} from '../../services/headings-list.service';\nimport {NavigationEnd, Router, RouterEvent} from '@angular/router';\nimport {AnchorScrollService} from '../../services/anchor-scroll.service';\nimport {filter} from 'rxjs/operators';\n\ndeclare var Prism: {\n  highlightAll: (async: boolean) => void;\n  highlightAllUnder: (element: Element) => void;\n};\n\n@Component({\n  selector: 'app-markdown',\n  template: '<ng-content></ng-content>'\n})\nexport class MarkdownComponent implements OnInit, AfterViewInit {\n  private _mdFile: string;\n  @Input()\n  get mdFile(): string {\n    return this._mdFile;\n  }\n\n  set mdFile(value: string) {\n\n    console.log(value)\n    this._mdFile = require(`!!raw-loader!../../../${value}`);\n  }\n\n  activeRoute: string;\n  activeFragment: string;\n\n  constructor(\n    private element: ElementRef<HTMLElement>,\n    private headingsListService: HeadingsListService,\n    private router: Router,\n    private anchorScrollService: AnchorScrollService\n  ) {\n    this.router.events\n      .pipe(\n        filter((event: RouterEvent) => event instanceof NavigationEnd)\n      )\n      .subscribe((event: RouterEvent) => {\n        this.activeRoute = event.url.split('#')[0].replace('/', '');\n        this.activeFragment = event.url.split('#')[1];\n\n        if (this.activeFragment) {\n          this.anchorScrollService.scrollToTarget(this.activeFragment);\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.setUpMarkedRenderer();\n    this.render();\n  }\n\n  ngAfterViewInit(): void {\n    this.anchorScrollService.scrollToTarget(this.activeFragment);\n  }\n\n  render(): void {\n    /* parse markdown and replace innerHTML of component */\n    this.element.nativeElement.innerHTML = marked.parse(this.mdFile);\n    /* highlight syntax by PrismJS */\n    Prism.highlightAllUnder(this.element.nativeElement);\n    /* get list of main headings for nav menu */\n    this.headingsListService.getHeaders(this.element.nativeElement);\n    /* add default styling classes for 'pre' tags without specified language */\n    this.addDefaultCodeStyling();\n  }\n\n  addDefaultCodeStyling(): void {\n    const codeElements = this.element.nativeElement.querySelectorAll('pre');\n    codeElements.forEach((item: HTMLElement) => {\n      const classCheck = item.classList.value.indexOf('language-') > 0;\n\n      if (!item.classList.length && !classCheck) {\n        item.classList.add('language-default');\n      }\n    });\n  }\n\n  setUpMarkedRenderer(): void {\n    const markedRenderer = new marked.Renderer();\n\n    /* set up link template for parser */\n    markedRenderer.link = (href: string, title: string, text: string) => {\n      title = title || ''; // because if title empty it receives null\n\n      /*\n         prepare href for routing with useHash true\n         cases that this regular expression covers:\n         '/', './', '../', '#', '#/'\n      */\n      href = href.replace(/^(\\/|\\.\\/|\\.\\.\\/|#\\/?)(.*)/, (...args) => {\n        return (args[1] === '#') ?\n          '#/' + this.activeRoute + args[0] : // case when route starts with '#'\n          '#/' + args[2]; // other cases\n      });\n\n      return (`<a href=\\\"${href}\\\" title=\\\"${title}\\\">${text}</a>`);\n    };\n\n    marked.setOptions({\n      renderer: markedRenderer\n    });\n  }\n}\n"},BGbC:function(e,n){e.exports="@import \"../../../variables\";\n\n:host {\n  width: $aside-nav-width;\n  position: fixed;\n  top: $header-height;\n  background: $color-grey-05;\n}\n.aside-nav {\n  margin: 15px 0 0;\n  padding: 0;\n  border-left: 1px solid $border-color;\n  list-style: none;\n\n  li {\n    font-size: 13px;\n    margin-left: 6px;\n\n    a {\n      display: block;\n      line-height: 1.1;\n      color: $color-grey-02;\n      text-decoration: none;\n      padding: 6px 14px 6px 15px;\n      position: relative;\n      transition: color 250ms ease, background-color 250ms ease;\n\n      &:hover {\n        background-color: $color-grey-04;\n        color: $color-black;\n      }\n\n      &.active {\n        color: $color-black;\n        font-weight: 600;\n\n        &:before {\n          content: '';\n          display: block;\n          width: 0;\n          height: 0;\n          border: 5px solid transparent;\n          border-right: 0;\n          border-left-color: $color-blue;\n          position: absolute;\n          left: 0;\n          top: 50%;\n          margin-top: -5px;\n        }\n      }\n    }\n\n    &:first-child {\n      border-bottom: 1px solid $border-color;\n    }\n  }\n}\n"},CDmH:function(e,n){e.exports="import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { HeaderComponent } from './header.component';\nimport { MatIconModule, MatToolbar } from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\n\ndescribe('HeaderComponent', () => {\n  let component: HeaderComponent;\n  let fixture: ComponentFixture<HeaderComponent>;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        MatIconModule,\n        HttpClientModule\n      ],\n      declarations: [\n        HeaderComponent,\n        MatToolbar\n      ]\n    })\n    .compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(HeaderComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"},DjUc:function(e,n){e.exports="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent  {\n\n  constructor() { }\n}\n"},DpLb:function(e,n){e.exports='import { enableProdMode } from "@angular/core";\nimport { platformBrowserDynamic } from "@angular/platform-browser-dynamic";\n\nimport { AppModule } from "./app/app.module";\nimport { environment } from "./environments/environment";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n'},EFKO:function(e,n){e.exports='# Getting started\n\nIn this section we\'ll cover basics of the MetaUI rules framework `@ngx-metaui/rules` to assemble user interface on the fly without templates.\n \n\n### Prerequisites\n+ Knowledge of typescript \n+ Basic Web development\n+ Angular 7.x\n\n_Continuing without prior knowledge of all above is not recomended_ and result is unknown.\n\n----\n\n## Quickstart \n\nTo get everything up and running run following commands:\n\n#### Step 1\n\nCreate new angular application (unless you are integrating it with existing one)\n```\n  ng new MyDetailPage --style=scss\n```\n\n\n#### Step 2\n\nAdd `@ngx-metaui/rules` to your app\n```\n  cd MyDetailPage/\n  ng add @ngx-metaui/rules --uiLib="prime-ng"\n```\n\nOnce finished you are fully configured to start some rule driven development but we skip ahead generate some ready to use page!\nThe `--uiLib="prime-ng"`  switch pre-configures UI Library to be used with the MetaUI. Even we currently support only `PrimeNg`\nthe `Material 2` library is somethign we are working on right now...\n\n\n\n#### Step 3\n\nCreate `UserDetail` page with different page modes:  `Create`, `Edit` and `View`  Even this does\'t do much it will show  \nbasic aspects of _MetaUI_.\n\n```\nng g  @ngx-metaui/rules:mPage --modelClass=User --name=UserDetail \n```\nand follow instructions printed in console such as `compile oss rules` _(We will get to this)_:\n\n```\nnpm run compile:oss\n```\n\n### Step 4\n\nEither attach created page into your router or like in our case  we will simply replace the out of box \n_welcome_ content of the  `app.component.html` with this line\n\n```\n<app-user-detail></app-user-detail>\n```\n\n### Step 5\n\nRun the application \n\n```\nng serve\n```\nand access the page [http://localhost:4200][2] and you just created a page which is based on rules.\n\n\n\n#### Let\'s Recap what just happened and what was created: \n\n*  `/model/user.ts` to represent our domain object\n*  Component `UserDetailComponent` with just 3 main lines to generate whole content and 3 buttons to switch between `Create`, `Edit` and `View` \nmodes\n* A Rule file `User.oss` ( _OSS - Object style sheet_ ) to style how the object should be rendered and behave for different situations\n\n![alt text](https://raw.githubusercontent.com/ngx-meta/rules/master/docs/meta/getting-started-1.1.png "Generate MetaUI Application")\n\nThe page should look like this showing different fields based on selected operation\n\n\n#### Next Step \n\nNow we just touched the surface of the rule driven UI development and looked at other ways how web application can be \nbuilt. \n\n* To understand how this works please jump to the [next topic][2] where we extend this application and give you \ndeeper introduction to the MetaUI.\n\n* Or you can read [High level fundamentals][3] that are behind this framework. \n    \n [1]: http://localhost:4200\n [2]: https://github.com/ngx-meta/rules/blob/master/docs/OSSRules.md\n [3]: https://github.com/ngx-meta/rules/blob/master/docs/metaui-architecture.md\n \n     \n'},FQZN:function(e,n){e.exports="import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { MatIconModule, MatListModule, MatSidenavModule, MatToolbarModule } from '@angular/material';\nimport { AsideNavComponent } from './layout/aside-nav/aside-nav.component';\nimport { NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    SidebarComponent,\n    AsideNavComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    HttpClientModule,\n    MatToolbarModule,\n    NgxPageScrollCoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n"},G8be:function(e,n,t){"use strict";var o=t("LoAr"),r=t("gKl1"),i=t("vs+N"),a=t("BJNQ"),s=t("981U"),l=t("3xi6"),c=t("W13O"),p=o.\u0275crt({encapsulation:2,styles:[],data:{}});function d(e){return o.\u0275vid(0,[(e()(),o.\u0275eld(0,0,null,null,1,"app-markdown",[],null,null,null,r.View_MarkdownComponent_0,r.RenderType_MarkdownComponent)),o.\u0275did(1,4308992,null,0,i.MarkdownComponent,[o.ElementRef,a.HeadingsListService,s.Router,l.AnchorScrollService],{mdFile:[0,"mdFile"]},null)],function(e,n){e(n,1,0,n.component.mdFile)},null)}function u(e){return o.\u0275vid(0,[(e()(),o.\u0275eld(0,0,null,null,1,"app-doc-page",[],null,null,null,d,p)),o.\u0275did(1,49152,null,0,c.DocPageComponent,[s.ActivatedRoute],null,null)],null,null)}n.RenderType_DocPageComponent=p,n.View_DocPageComponent_0=d,n.View_DocPageComponent_Host_0=u,n.DocPageComponentNgFactory=o.\u0275ccf("app-doc-page",c.DocPageComponent,u,{},{},[])},H1Xw:function(e,n){e.exports="import { Component, EventEmitter, Output } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  @Output() navBtnClick: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ngx-meta-github',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ico-github.svg')\n      ).addSvgIcon(\n      'ngx-meta-twitter',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ico-twitter.svg')\n      ).addSvgIcon(\n      'ngx-meta-hamburger',\n        this.domSanitizer.bypassSecurityTrustResourceUrl('./assets/images/ico-hamburger.svg')\n      );\n  }\n\n  navToggle(): void {\n    this.navBtnClick.emit(null);\n  }\n}\n"},HAZk:function(e,n,t){"use strict";var o=t("LoAr"),r=t("Zf3V"),i=t("C9Ky"),a=t("G8be"),s=t("WT9V"),l=t("981U"),c=t("KUik"),p=t("n6bp"),d=t("W13O");n.DocPageModuleNgFactory=o.\u0275cmf(r.DocPageModule,[],function(e){return o.\u0275mod([o.\u0275mpd(512,o.ComponentFactoryResolver,o.\u0275CodegenComponentFactoryResolver,[[8,[i.\u0275EmptyOutletComponentNgFactory,a.DocPageComponentNgFactory]],[3,o.ComponentFactoryResolver],o.NgModuleRef]),o.\u0275mpd(4608,s.NgLocalization,s.NgLocaleLocalization,[o.LOCALE_ID,[2,s.\u0275angular_packages_common_common_a]]),o.\u0275mpd(1073742336,s.CommonModule,s.CommonModule,[]),o.\u0275mpd(1073742336,l.RouterModule,l.RouterModule,[[2,l.\u0275angular_packages_router_router_a],[2,l.Router]]),o.\u0275mpd(1073742336,c.DocPageRoutingModule,c.DocPageRoutingModule,[]),o.\u0275mpd(1073742336,p.MarkdownModule,p.MarkdownModule,[]),o.\u0275mpd(1073742336,r.DocPageModule,r.DocPageModule,[]),o.\u0275mpd(1024,l.ROUTES,function(){return[[{path:"",component:d.DocPageComponent}]]},[])])})},KBwr:function(e,n){e.exports='@import "../../../variables";\n\n:host {\n  display: block;\n}\n\n#footer {\n  padding: 20px;\n  border-top: 1px solid $border-color;\n  color: $text-color;\n  text-align: center;\n\n  a {\n    color: currentColor;\n    text-decoration: none;\n    transition: color 250ms ease;\n\n    &:hover {\n      text-decoration: none;\n      color: $color-black;\n    }\n  }\n}\n'},KPCu:function(e,n){e.exports='<mat-nav-list>\n  <ng-container *ngFor="let item of menuList">\n    <mat-list-item>\n      <a [routerLink]="item.path" routerLinkActive="active">{{ item.data.title }}</a>\n    </mat-list-item>\n    <ul class="sub-nav" *ngIf="activeRoute === item.path">\n      <li *ngFor="let item of navItems">\n        <a\n          [routerLink]="activeRoute"\n          [fragment]="item.id"\n          [class.active]="item.id === activeFragment"\n        >\n          {{ item.textContent }}\n        </a>\n      </li>\n    </ul>\n  </ng-container>\n</mat-nav-list>\n'},KUik:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("981U"),t("W13O"),n.DocPageRoutingModule=function(){return function(){}}()},MD9C:function(e,n){e.exports="import { Routes } from '@angular/router';\n\nexport const routes: Routes = [\n  {\n    path: 'getting-started',\n    loadChildren: './components/doc-page/doc-page.module#DocPageModule',\n    data: { title: 'Getting Started' , path: 'assets/docs/getting-started.md'}\n  },\n  {\n    path: 'oss-rules',\n    loadChildren: './components/doc-page/doc-page.module#DocPageModule',\n    data: { title: 'OSS Rules' , path: 'assets/docs/oss-rules.md'}\n  },\n  {\n    path: 'oss-syntax',\n    loadChildren: './components/doc-page/doc-page.module#DocPageModule',\n    data: { title: 'OSS Syntax', path: 'assets/docs/oss-syntax.md'}\n  },\n  {\n    path: 'metaui-architecture',\n    loadChildren: './components/doc-page/doc-page.module#DocPageModule',\n    data: { title: 'MetaUI Architecture' , path: 'assets/docs/metaui-architecture.md'}\n  },\n  {\n    path: '',\n    redirectTo: 'getting-started',\n    pathMatch: 'full',\n  }\n];\n"},"O/NB":function(e,n){e.exports="$color-grey: #cecece;\n$color-grey-02: #455A64;\n$color-grey-03: #607d8b;\n$color-grey-04: #f5f5f5;\n$color-grey-05: #fafafa;\n$color-black: #253137;\n$color-blue: #2196f3;\n\n$border-color: $color-grey;\n\n$header-height: 64px;\n$sidenav-width: 260px;\n$aside-nav-width: 180px;\n$text-color: $color-grey-03;\n"},RHwJ:function(e,n){e.exports="/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport \"zone.js/dist/zone\"; // Included with Angular CLI.\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n"},RhHz:function(e,n){e.exports='<!doctype html>\n<html lang="en">\n<head>\n  <meta charset="utf-8">\n  <title>NgxMetaDocs</title>\n  <base href="/">\n\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <link rel="icon" type="image/x-icon" href="favicon.ico">\n  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600" rel="stylesheet">\n</head>\n<body>\n  <app-root></app-root>\n</body>\n</html>\n'},T86Z:function(e,n){e.exports="import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { SidebarComponent } from './sidebar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatListModule } from '@angular/material';\n\ndescribe('SidebarComponent', () => {\n  let component: SidebarComponent;\n  let fixture: ComponentFixture<SidebarComponent>;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        HttpClientModule,\n        MatListModule\n      ],\n      declarations: [\n        SidebarComponent\n      ]\n    })\n    .compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(SidebarComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"},TnL7:function(e,n){e.exports="import { TestBed, async } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { AsideNavComponent } from './layout/aside-nav/aside-nav.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { MatIconModule, MatListModule, MatSidenavModule, MatToolbarModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\ndescribe('AppComponent', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        RouterTestingModule,\n        MatIconModule,\n        MatSidenavModule,\n        MatListModule,\n        BrowserAnimationsModule\n      ],\n      declarations: [\n        AppComponent,\n        HeaderComponent,\n        SidebarComponent,\n        AsideNavComponent,\n        FooterComponent,\n        MatToolbarModule,\n      ],\n    }).compileComponents();\n  }));\n\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.debugElement.componentInstance;\n    expect(app).toBeTruthy();\n  });\n});\n"},W13O:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("981U"),n.DocPageComponent=function(){return function(e){this.router=e,this.mdFile="assets/docs/getting-started.doc.md",this.mdFile=e.snapshot.data.path}}()},"Wa/l":function(e,n){e.exports="import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeadingsListService {\n  navList: Subject<HTMLElement[]>;\n\n  constructor() {\n    this.navList = new Subject();\n  }\n\n  getHeaders(element) {\n    const headings: HTMLElement[] = element.querySelectorAll('h1[id], h2[id], h3[id], h4[id]');\n\n    this.navList.next(headings);\n  }\n}\n"},Z06X:function(e,n){e.exports="import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { PageScrollService } from 'ngx-page-scroll-core';\nimport { Router } from '@angular/router';\nimport { log } from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnchorScrollService {\n\n  constructor(\n    private pageScrollService: PageScrollService,\n    private router: Router,\n    @Inject(DOCUMENT) private document: any\n  ) { }\n\n  scrollToTarget(targetId: string): void {\n    const parentView = this.document.getElementById('mat-content');\n\n    if (targetId) {\n      this.pageScrollService.scroll({\n        document: this.document,\n        scrollTarget: '#' + targetId,\n        scrollViews: [\n          parentView\n        ],\n        scrollOffset: 20,\n        duration: 250\n      });\n    }\n\n    if (!targetId) {\n      parentView.scroll(0, 0);\n    }\n  }\n}\n"},Z0BQ:function(e,n){e.exports="import { Component, OnInit } from '@angular/core';\nimport { HeadingsListService } from '../../services/headings-list.service';\nimport { NavigationEnd, Router, RouterEvent } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AnchorScrollService } from '../../services/anchor-scroll.service';\n\n\n@Component({\n  selector: 'app-aside-nav',\n  templateUrl: './aside-nav.component.html',\n  styleUrls: ['./aside-nav.component.scss']\n})\nexport class AsideNavComponent implements OnInit {\n  navItems: HTMLElement[];\n  activeRoute: string;\n  activeFragment: string;\n\n  constructor(\n    private headingsListService: HeadingsListService,\n    private router: Router,\n  ) {\n    this.router.events.pipe(\n        filter((event: RouterEvent) => event instanceof NavigationEnd)\n      )\n      .subscribe(() => {\n        this.activeRoute = this.router.url.split('#')[0].replace('/', '');\n        this.activeFragment = this.router.url.split('#')[1];\n      });\n  }\n\n  ngOnInit(): void {\n    this.headingsListService.navList\n      .subscribe((data: HTMLElement[]) => {\n        this.navItems = data;\n      });\n  }\n}\n"},Zf3V:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.DocPageModule=function(){return function(){}}()},"b+0G":function(e,n){e.exports='<footer id="footer">\n  <p>\n\n  </p>\n</footer>\n'},fcKH:function(e,n){e.exports='<ul class="aside-nav">\n  <li *ngFor="let item of navItems">\n    <a\n      [routerLink]="activeRoute"\n      [fragment]="item.id"\n      [class.active]="item.id === activeFragment"\n    >\n      {{ item.textContent }}\n    </a>\n  </li>\n</ul>\n'},gKl1:function(e,n,t){"use strict";var o=t("LoAr"),r=t("vs+N"),i=t("BJNQ"),a=t("981U"),s=t("3xi6"),l=o.\u0275crt({encapsulation:2,styles:[],data:{}});function c(e){return o.\u0275vid(0,[o.\u0275ncd(null,0)],null,null)}function p(e){return o.\u0275vid(0,[(e()(),o.\u0275eld(0,0,null,null,1,"app-markdown",[],null,null,null,c,l)),o.\u0275did(1,4308992,null,0,r.MarkdownComponent,[o.ElementRef,i.HeadingsListService,a.Router,s.AnchorScrollService],null,null)],function(e,n){e(n,1,0)},null)}n.RenderType_MarkdownComponent=l,n.View_MarkdownComponent_0=c,n.View_MarkdownComponent_Host_0=p,n.MarkdownComponentNgFactory=o.\u0275ccf("app-markdown",r.MarkdownComponent,p,{mdFile:"mdFile"},{},["*"])},gNrm:function(e,n,t){!function(n){"use strict";var t={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:f,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,nptable:f,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:f,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading| {0,3}>|<\/?(?:tag)(?: +|\n|\/?>)|<(?:script|pre|style|!--))[^\n]+)*)/,text:/^[^\n]+/};function o(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||x.defaults,this.rules=t.normal,this.options.pedantic?this.rules=t.pedantic:this.options.gfm&&(this.rules=this.options.tables?t.tables:t.gfm)}t._label=/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,t._title=/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,t.def=u(t.def).replace("label",t._label).replace("title",t._title).getRegex(),t.bullet=/(?:[*+-]|\d{1,9}\.)/,t.item=/^( *)(bull) ?[^\n]*(?:\n(?!\1bull ?)[^\n]*)*/,t.item=u(t.item,"gm").replace(/bull/g,t.bullet).getRegex(),t.list=u(t.list).replace(/bull/g,t.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+t.def.source+")").getRegex(),t._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",t._comment=/<!--(?!-?>)[\s\S]*?-->/,t.html=u(t.html,"i").replace("comment",t._comment).replace("tag",t._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),t.paragraph=u(t.paragraph).replace("hr",t.hr).replace("heading",t.heading).replace("lheading",t.lheading).replace("tag",t._tag).getRegex(),t.blockquote=u(t.blockquote).replace("paragraph",t.paragraph).getRegex(),t.normal=b({},t),t.gfm=b({},t.normal,{fences:/^ {0,3}(`{3,}|~{3,})([^`\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),t.gfm.paragraph=u(t.paragraph).replace("(?!","(?!"+t.gfm.fences.source.replace("\\1","\\2")+"|"+t.list.source.replace("\\1","\\3")+"|").getRegex(),t.tables=b({},t.gfm,{nptable:/^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,table:/^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/}),t.pedantic=b({},t.normal,{html:u("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",t._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/}),o.rules=t,o.lex=function(e,n){return new o(n).lex(e)},o.prototype.lex=function(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(e,!0)},o.prototype.token=function(e,n){var o,r,i,a,s,l,c,p,d,u,h,m,g,f,b,w;for(e=e.replace(/^ +$/gm,"");e;)if((i=this.rules.newline.exec(e))&&(e=e.substring(i[0].length),i[0].length>1&&this.tokens.push({type:"space"})),i=this.rules.code.exec(e))e=e.substring(i[0].length),i=i[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?i:y(i,"\n")});else if(i=this.rules.fences.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"code",lang:i[2]?i[2].trim():i[2],text:i[3]||""});else if(i=this.rules.heading.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"heading",depth:i[1].length,text:i[2]});else if((i=this.rules.nptable.exec(e))&&(l={type:"table",header:v(i[1].replace(/^ *| *\| *$/g,"")),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3]?i[3].replace(/\n$/,"").split("\n"):[]}).header.length===l.align.length){for(e=e.substring(i[0].length),h=0;h<l.align.length;h++)l.align[h]=/^ *-+: *$/.test(l.align[h])?"right":/^ *:-+: *$/.test(l.align[h])?"center":/^ *:-+ *$/.test(l.align[h])?"left":null;for(h=0;h<l.cells.length;h++)l.cells[h]=v(l.cells[h],l.header.length);this.tokens.push(l)}else if(i=this.rules.hr.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"hr"});else if(i=this.rules.blockquote.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"blockquote_start"}),i=i[0].replace(/^ *> ?/gm,""),this.token(i,n),this.tokens.push({type:"blockquote_end"});else if(i=this.rules.list.exec(e)){for(e=e.substring(i[0].length),this.tokens.push(c={type:"list_start",ordered:f=(a=i[2]).length>1,start:f?+a:"",loose:!1}),p=[],o=!1,g=(i=i[0].match(this.rules.item)).length,h=0;h<g;h++)u=(l=i[h]).length,~(l=l.replace(/^ *([*+-]|\d+\.) */,"")).indexOf("\n ")&&(u-=l.length,l=l.replace(this.options.pedantic?/^ {1,4}/gm:new RegExp("^ {1,"+u+"}","gm"),"")),h!==g-1&&(s=t.bullet.exec(i[h+1])[0],(a.length>1?1===s.length:s.length>1||this.options.smartLists&&s!==a)&&(e=i.slice(h+1).join("\n")+e,h=g-1)),r=o||/\n\n(?!\s*$)/.test(l),h!==g-1&&(o="\n"===l.charAt(l.length-1),r||(r=o)),r&&(c.loose=!0),w=void 0,(b=/^\[[ xX]\] /.test(l))&&(w=" "!==l[1],l=l.replace(/^\[[ xX]\] +/,"")),p.push(d={type:"list_item_start",task:b,checked:w,loose:r}),this.tokens.push(d),this.token(l,!1),this.tokens.push({type:"list_item_end"});if(c.loose)for(g=p.length,h=0;h<g;h++)p[h].loose=!0;this.tokens.push({type:"list_end"})}else if(i=this.rules.html.exec(e))e=e.substring(i[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===i[1]||"script"===i[1]||"style"===i[1]),text:i[0]});else if(n&&(i=this.rules.def.exec(e)))e=e.substring(i[0].length),i[3]&&(i[3]=i[3].substring(1,i[3].length-1)),m=i[1].toLowerCase().replace(/\s+/g," "),this.tokens.links[m]||(this.tokens.links[m]={href:i[2],title:i[3]});else if((i=this.rules.table.exec(e))&&(l={type:"table",header:v(i[1].replace(/^ *| *\| *$/g,"")),align:i[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:i[3]?i[3].replace(/\n$/,"").split("\n"):[]}).header.length===l.align.length){for(e=e.substring(i[0].length),h=0;h<l.align.length;h++)l.align[h]=/^ *-+: *$/.test(l.align[h])?"right":/^ *:-+: *$/.test(l.align[h])?"center":/^ *:-+ *$/.test(l.align[h])?"left":null;for(h=0;h<l.cells.length;h++)l.cells[h]=v(l.cells[h].replace(/^ *\| *| *\| *$/g,""),l.header.length);this.tokens.push(l)}else if(i=this.rules.lheading.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"heading",depth:"="===i[2]?1:2,text:i[1]});else if(n&&(i=this.rules.paragraph.exec(e)))e=e.substring(i[0].length),this.tokens.push({type:"paragraph",text:"\n"===i[1].charAt(i[1].length-1)?i[1].slice(0,-1):i[1]});else if(i=this.rules.text.exec(e))e=e.substring(i[0].length),this.tokens.push({type:"text",text:i[0]});else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0));return this.tokens};var r={escape:/^\\([!"#$%&'()*+,\-.\/:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:f,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(href(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,strong:/^__([^\s_])__(?!_)|^\*\*([^\s*])\*\*(?!\*)|^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)/,em:/^_([^\s_])_(?!_)|^\*([^\s*"<\[])\*(?!\*)|^_([^\s][\s\S]*?[^\s_])_(?!_|[^\spunctuation])|^_([^\s_][\s\S]*?[^\s])_(?!_|[^\spunctuation])|^\*([^\s"<\[][\s\S]*?[^\s*])\*(?!\*)|^\*([^\s*"<\[][\s\S]*?[^\s])\*(?!\*)/,code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:f,text:/^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n))|(?= {2,}\n))/};function i(e,n){if(this.options=n||x.defaults,this.links=e,this.rules=r.normal,this.renderer=this.options.renderer||new a,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.pedantic?this.rules=r.pedantic:this.options.gfm&&(this.rules=this.options.breaks?r.breaks:r.gfm)}function a(e){this.options=e||x.defaults}function s(){}function l(e){this.tokens=[],this.token=null,this.options=e||x.defaults,this.options.renderer=this.options.renderer||new a,this.renderer=this.options.renderer,this.renderer.options=this.options,this.slugger=new c}function c(){this.seen={}}function p(e,n){if(n){if(p.escapeTest.test(e))return e.replace(p.escapeReplace,function(e){return p.replacements[e]})}else if(p.escapeTestNoEncode.test(e))return e.replace(p.escapeReplaceNoEncode,function(e){return p.replacements[e]});return e}function d(e){return e.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,function(e,n){return"colon"===(n=n.toLowerCase())?":":"#"===n.charAt(0)?"x"===n.charAt(1)?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1)):""})}function u(e,n){return e=e.source||e,n=n||"",{replace:function(n,t){return t=(t=t.source||t).replace(/(^|[^\[])\^/g,"$1"),e=e.replace(n,t),this},getRegex:function(){return new RegExp(e,n)}}}function h(e,n,t){if(e){try{var o=decodeURIComponent(d(t)).replace(/[^\w:]/g,"").toLowerCase()}catch(r){return null}if(0===o.indexOf("javascript:")||0===o.indexOf("vbscript:")||0===o.indexOf("data:"))return null}n&&!g.test(t)&&(t=function(e,n){return m[" "+e]||(m[" "+e]=/^[^:]+:\/*[^\/]*$/.test(e)?e+"/":y(e,"/",!0)),e=m[" "+e],"//"===n.slice(0,2)?e.replace(/:[\s\S]*/,":")+n:"/"===n.charAt(0)?e.replace(/(:\/*[^\/]*)[\s\S]*/,"$1")+n:e+n}(n,t));try{t=encodeURI(t).replace(/%25/g,"%")}catch(r){return null}return t}r._punctuation="!\"#$%&'()*+,\\-./:;<=>?@\\[^_{|}~",r.em=u(r.em).replace(/punctuation/g,r._punctuation).getRegex(),r._escapes=/\\([!"#$%&'()*+,\-.\/:;<=>?@\[\]\\^_`{|}~])/g,r._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,r._email=/[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,r.autolink=u(r.autolink).replace("scheme",r._scheme).replace("email",r._email).getRegex(),r._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,r.tag=u(r.tag).replace("comment",t._comment).replace("attribute",r._attribute).getRegex(),r._label=/(?:\[[^\[\]]*\]|\\[\[\]]?|`[^`]*`|`(?!`)|[^\[\]\\`])*?/,r._href=/\s*(<(?:\\[<>]?|[^\s<>\\])*>|[^\s\x00-\x1f]*)/,r._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,r.link=u(r.link).replace("label",r._label).replace("href",r._href).replace("title",r._title).getRegex(),r.reflink=u(r.reflink).replace("label",r._label).getRegex(),r.normal=b({},r),r.pedantic=b({},r.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,link:u(/^!?\[(label)\]\((.*?)\)/).replace("label",r._label).getRegex(),reflink:u(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",r._label).getRegex()}),r.gfm=b({},r.normal,{escape:u(r.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~+(?=\S)([\s\S]*?\S)~+/,text:/^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?= {2,}\n|[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/}),r.gfm.url=u(r.gfm.url,"i").replace("email",r.gfm._extended_email).getRegex(),r.breaks=b({},r.gfm,{br:u(r.br).replace("{2,}","*").getRegex(),text:u(r.gfm.text).replace(/\{2,\}/g,"*").getRegex()}),i.rules=r,i.output=function(e,n,t){return new i(n,t).output(e)},i.prototype.output=function(e){for(var n,t,o,r,a,s,l="";e;)if(a=this.rules.escape.exec(e))e=e.substring(a[0].length),l+=p(a[1]);else if(a=this.rules.tag.exec(e))!this.inLink&&/^<a /i.test(a[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(a[0])&&(this.inLink=!1),!this.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(a[0])?this.inRawBlock=!0:this.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(a[0])&&(this.inRawBlock=!1),e=e.substring(a[0].length),l+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(a[0]):p(a[0]):a[0];else if(a=this.rules.link.exec(e)){var c=w(a[2],"()");if(c>-1){var d=a[0].length-(a[2].length-c)-(a[3]||"").length;a[2]=a[2].substring(0,c),a[0]=a[0].substring(0,d).trim(),a[3]=""}e=e.substring(a[0].length),this.inLink=!0,o=a[2],this.options.pedantic?(n=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(o))?(o=n[1],r=n[3]):r="":r=a[3]?a[3].slice(1,-1):"",o=o.trim().replace(/^<([\s\S]*)>$/,"$1"),l+=this.outputLink(a,{href:i.escapes(o),title:i.escapes(r)}),this.inLink=!1}else if((a=this.rules.reflink.exec(e))||(a=this.rules.nolink.exec(e))){if(e=e.substring(a[0].length),n=(a[2]||a[1]).replace(/\s+/g," "),!(n=this.links[n.toLowerCase()])||!n.href){l+=a[0].charAt(0),e=a[0].substring(1)+e;continue}this.inLink=!0,l+=this.outputLink(a,n),this.inLink=!1}else if(a=this.rules.strong.exec(e))e=e.substring(a[0].length),l+=this.renderer.strong(this.output(a[4]||a[3]||a[2]||a[1]));else if(a=this.rules.em.exec(e))e=e.substring(a[0].length),l+=this.renderer.em(this.output(a[6]||a[5]||a[4]||a[3]||a[2]||a[1]));else if(a=this.rules.code.exec(e))e=e.substring(a[0].length),l+=this.renderer.codespan(p(a[2].trim(),!0));else if(a=this.rules.br.exec(e))e=e.substring(a[0].length),l+=this.renderer.br();else if(a=this.rules.del.exec(e))e=e.substring(a[0].length),l+=this.renderer.del(this.output(a[1]));else if(a=this.rules.autolink.exec(e))e=e.substring(a[0].length),o="@"===a[2]?"mailto:"+(t=p(this.mangle(a[1]))):t=p(a[1]),l+=this.renderer.link(o,null,t);else if(this.inLink||!(a=this.rules.url.exec(e))){if(a=this.rules.text.exec(e))e=e.substring(a[0].length),l+=this.renderer.text(this.inRawBlock?a[0]:p(this.smartypants(a[0])));else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}else{if("@"===a[2])o="mailto:"+(t=p(a[0]));else{do{s=a[0],a[0]=this.rules._backpedal.exec(a[0])[0]}while(s!==a[0]);t=p(a[0]),o="www."===a[1]?"http://"+t:t}e=e.substring(a[0].length),l+=this.renderer.link(o,null,t)}return l},i.escapes=function(e){return e?e.replace(i.rules._escapes,"$1"):e},i.prototype.outputLink=function(e,n){var t=n.href,o=n.title?p(n.title):null;return"!"!==e[0].charAt(0)?this.renderer.link(t,o,this.output(e[1])):this.renderer.image(t,o,p(e[1]))},i.prototype.smartypants=function(e){return this.options.smartypants?e.replace(/---/g,"\u2014").replace(/--/g,"\u2013").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1\u2018").replace(/'/g,"\u2019").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1\u201c").replace(/"/g,"\u201d").replace(/\.{3}/g,"\u2026"):e},i.prototype.mangle=function(e){if(!this.options.mangle)return e;for(var n,t="",o=e.length,r=0;r<o;r++)n=e.charCodeAt(r),Math.random()>.5&&(n="x"+n.toString(16)),t+="&#"+n+";";return t},a.prototype.code=function(e,n,t){var o=(n||"").match(/\S*/)[0];if(this.options.highlight){var r=this.options.highlight(e,o);null!=r&&r!==e&&(t=!0,e=r)}return o?'<pre><code class="'+this.options.langPrefix+p(o,!0)+'">'+(t?e:p(e,!0))+"</code></pre>\n":"<pre><code>"+(t?e:p(e,!0))+"</code></pre>"},a.prototype.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},a.prototype.html=function(e){return e},a.prototype.heading=function(e,n,t,o){return this.options.headerIds?"<h"+n+' id="'+this.options.headerPrefix+o.slug(t)+'">'+e+"</h"+n+">\n":"<h"+n+">"+e+"</h"+n+">\n"},a.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},a.prototype.list=function(e,n,t){var o=n?"ol":"ul";return"<"+o+(n&&1!==t?' start="'+t+'"':"")+">\n"+e+"</"+o+">\n"},a.prototype.listitem=function(e){return"<li>"+e+"</li>\n"},a.prototype.checkbox=function(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},a.prototype.paragraph=function(e){return"<p>"+e+"</p>\n"},a.prototype.table=function(e,n){return n&&(n="<tbody>"+n+"</tbody>"),"<table>\n<thead>\n"+e+"</thead>\n"+n+"</table>\n"},a.prototype.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},a.prototype.tablecell=function(e,n){var t=n.header?"th":"td";return(n.align?"<"+t+' align="'+n.align+'">':"<"+t+">")+e+"</"+t+">\n"},a.prototype.strong=function(e){return"<strong>"+e+"</strong>"},a.prototype.em=function(e){return"<em>"+e+"</em>"},a.prototype.codespan=function(e){return"<code>"+e+"</code>"},a.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},a.prototype.del=function(e){return"<del>"+e+"</del>"},a.prototype.link=function(e,n,t){if(null===(e=h(this.options.sanitize,this.options.baseUrl,e)))return t;var o='<a href="'+p(e)+'"';return n&&(o+=' title="'+n+'"'),o+">"+t+"</a>"},a.prototype.image=function(e,n,t){if(null===(e=h(this.options.sanitize,this.options.baseUrl,e)))return t;var o='<img src="'+e+'" alt="'+t+'"';return n&&(o+=' title="'+n+'"'),o+(this.options.xhtml?"/>":">")},a.prototype.text=function(e){return e},s.prototype.strong=s.prototype.em=s.prototype.codespan=s.prototype.del=s.prototype.text=function(e){return e},s.prototype.link=s.prototype.image=function(e,n,t){return""+t},s.prototype.br=function(){return""},l.parse=function(e,n){return new l(n).parse(e)},l.prototype.parse=function(e){this.inline=new i(e.links,this.options),this.inlineText=new i(e.links,b({},this.options,{renderer:new s})),this.tokens=e.reverse();for(var n="";this.next();)n+=this.tok();return n},l.prototype.next=function(){return this.token=this.tokens.pop()},l.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},l.prototype.parseText=function(){for(var e=this.token.text;"text"===this.peek().type;)e+="\n"+this.next().text;return this.inline.output(e)},l.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,d(this.inlineText.output(this.token.text)),this.slugger);case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var e,n,t,o,r="",i="";for(t="",e=0;e<this.token.header.length;e++)t+=this.renderer.tablecell(this.inline.output(this.token.header[e]),{header:!0,align:this.token.align[e]});for(r+=this.renderer.tablerow(t),e=0;e<this.token.cells.length;e++){for(n=this.token.cells[e],t="",o=0;o<n.length;o++)t+=this.renderer.tablecell(this.inline.output(n[o]),{header:!1,align:this.token.align[o]});i+=this.renderer.tablerow(t)}return this.renderer.table(r,i);case"blockquote_start":for(i="";"blockquote_end"!==this.next().type;)i+=this.tok();return this.renderer.blockquote(i);case"list_start":i="";for(var a=this.token.ordered,s=this.token.start;"list_end"!==this.next().type;)i+=this.tok();return this.renderer.list(i,a,s);case"list_item_start":i="";var l=this.token.loose,c=this.token.checked,p=this.token.task;for(this.token.task&&(i+=this.renderer.checkbox(c));"list_item_end"!==this.next().type;)i+=l||"text"!==this.token.type?this.tok():this.parseText();return this.renderer.listitem(i,p,c);case"html":return this.renderer.html(this.token.text);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText());default:var u='Token with "'+this.token.type+'" type was not found.';if(!this.options.silent)throw new Error(u);console.log(u)}},c.prototype.slug=function(e){var n=e.toLowerCase().trim().replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,.\/:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-");if(this.seen.hasOwnProperty(n)){var t=n;do{this.seen[t]++,n=t+"-"+this.seen[t]}while(this.seen.hasOwnProperty(n))}return this.seen[n]=0,n},p.escapeTest=/[&<>"']/,p.escapeReplace=/[&<>"']/g,p.replacements={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},p.escapeTestNoEncode=/[<>"']|&(?!#?\w+;)/,p.escapeReplaceNoEncode=/[<>"']|&(?!#?\w+;)/g;var m={},g=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function f(){}function b(e){for(var n,t,o=1;o<arguments.length;o++)for(t in n=arguments[o])Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e}function v(e,n){var t=e.replace(/\|/g,function(e,n,t){for(var o=!1,r=n;--r>=0&&"\\"===t[r];)o=!o;return o?"|":" |"}).split(/ \|/),o=0;if(t.length>n)t.splice(n);else for(;t.length<n;)t.push("");for(;o<t.length;o++)t[o]=t[o].trim().replace(/\\\|/g,"|");return t}function y(e,n,t){if(0===e.length)return"";for(var o=0;o<e.length;){var r=e.charAt(e.length-o-1);if(r!==n||t){if(r===n||!t)break;o++}else o++}return e.substr(0,e.length-o)}function w(e,n){if(-1===e.indexOf(n[1]))return-1;for(var t=0,o=0;o<e.length;o++)if("\\"===e[o])o++;else if(e[o]===n[0])t++;else if(e[o]===n[1]&&--t<0)return o;return-1}function x(e,n,t){if(null==e)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");if(t||"function"==typeof n){t||(t=n,n=null);var r,i,a=(n=b({},x.defaults,n||{})).highlight,s=0;try{r=o.lex(e,n)}catch(d){return t(d)}i=r.length;var c=function(e){if(e)return n.highlight=a,t(e);var o;try{o=l.parse(r,n)}catch(d){e=d}return n.highlight=a,e?t(e):t(null,o)};if(!a||a.length<3)return c();if(delete n.highlight,!i)return c();for(;s<r.length;s++)!function(e){"code"!==e.type?--i||c():a(e.text,e.lang,function(n,t){return n?c(n):null==t||t===e.text?--i||c():(e.text=t,e.escaped=!0,void(--i||c()))})}(r[s])}else try{return n&&(n=b({},x.defaults,n)),l.parse(o.lex(e,n),n)}catch(d){if(d.message+="\nPlease report this to https://github.com/markedjs/marked.",(n||x.defaults).silent)return"<p>An error occurred:</p><pre>"+p(d.message+"",!0)+"</pre>";throw d}}f.exec=f,x.options=x.setOptions=function(e){return b(x.defaults,e),x},x.getDefaults=function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:new a,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tables:!0,xhtml:!1}},x.defaults=x.getDefaults(),x.Parser=l,x.parser=l.parse,x.Renderer=a,x.TextRenderer=s,x.Lexer=o,x.lexer=o.lex,x.InlineLexer=i,x.inlineLexer=i.output,x.Slugger=c,x.parse=x,e.exports=x}(this||("undefined"!=typeof window?window:global))},gROI:function(e,n){e.exports='<mat-toolbar>\n  <header id="header">\n    <button class="nav-opener hamburger mat-button" (click)="navToggle()">\n      <mat-icon svgIcon="ngx-meta-hamburger"></mat-icon>\n    </button>\n    <strong class="logo">\n      <a routerLink="" aria-label="MetaUI logo">metaUI</a>\n    </strong>\n\n    <ul class="socials">\n      <li>\n        <a href="https://github.com/ngx-meta/rules" aria-label="MetaUI on github">\n          <mat-icon svgIcon="ngx-meta-github"></mat-icon>\n        </a>\n      </li>\n\n      <li>\n        <a href="https://twitter.com/metauiframework" aria-label="MetaUI on twitter">\n          <mat-icon svgIcon="ngx-meta-twitter"></mat-icon>\n        </a>\n      </li>\n    </ul>\n  </header>\n</mat-toolbar>\n'},grJI:function(e,n){e.exports="import {Component} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-doc-page',\n  template: `\n    <app-markdown [mdFile]=\"mdFile\"></app-markdown>`\n})\nexport class DocPageComponent {\n  mdFile: string = 'assets/docs/getting-started.doc.md';\n\n  constructor(public router: ActivatedRoute) {\n    this.mdFile = router.snapshot.data.path;\n  }\n}\n"},h3X0:function(e,n){e.exports="import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { AsideNavComponent } from './aside-nav.component';\n\ndescribe('AsideNavComponent', () => {\n  let component: AsideNavComponent;\n  let fixture: ComponentFixture<AsideNavComponent>;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [ AsideNavComponent ]\n    })\n    .compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(AsideNavComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"},hZTe:function(e,n){e.exports="import { TestBed } from '@angular/core/testing';\n\nimport { HeadingsListService } from './headings-list.service';\n\ndescribe('HeadingsListService', () => {\n  beforeEach(() => TestBed.configureTestingModule({}));\n\n  it('should be created', () => {\n    const service: HeadingsListService = TestBed.get(HeadingsListService);\n    expect(service).toBeTruthy();\n  });\n});\n"},jXZ3:function(e,n){e.exports="import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DocPageComponent } from './doc-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DocPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DocPageRoutingModule { }\n"},jzMr:function(e,n){e.exports='<section id="wrapper" [class.tablet]="tabletQuery.matches && !mobileQuery.matches">\n  <app-header (navBtnClick)="sidenav.toggle()"></app-header>\n\n  <mat-sidenav-container id="main">\n    <mat-sidenav\n      [opened]="!tabletQuery.matches"\n      [mode]="mobileQuery.matches ? \'over\' : \'side\'"\n      #sidenav\n      class="sidenav">\n      <app-sidebar></app-sidebar>\n    </mat-sidenav>\n\n    <mat-sidenav-content id="mat-content">\n      <section id="content">\n        <div class="content-holder">\n          <router-outlet></router-outlet>\n        </div>\n\n        <aside [hidden]="mobileQuery.matches" class="aside-nav">\n          <app-aside-nav></app-aside-nav>\n        </aside>\n      </section>\n\n      <app-footer></app-footer>\n    </mat-sidenav-content>\n\n  </mat-sidenav-container>\n</section>\n'},k9Uu:function(e,n){e.exports='<svg width="149" height="46" viewBox="0 0 149 46" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path d="M0 3.7551C0 1.68122 1.68122 0 3.7551 0H42.2449C44.3188 0 46 1.68122 46 3.7551V42.2449C46 44.3188 44.3188 46 42.2449 46H3.7551C1.68122 46 0 44.3188 0 42.2449V3.7551Z" fill="#DD0031"/>\n<path fill-rule="evenodd" clip-rule="evenodd" d="M12.8296 16.8579V19.5424H14.7421V26.627H12.7V29.3002H19.5668V26.627H17.5679V20.7547C18.8358 19.8011 19.8052 19.3734 20.4986 19.3734C20.9332 19.3734 21.1826 19.5111 21.328 19.7334L21.3305 19.7372C21.5016 19.9903 21.6141 20.4584 21.6141 21.203V29.3002H26.374V26.627H24.4507V20.7463C25.0016 20.2926 25.5202 19.9552 26.0063 19.7284C26.5312 19.4835 26.9654 19.3734 27.3165 19.3734C27.7358 19.3734 27.9725 19.4764 28.1014 19.6154L28.1049 19.6191C28.2764 19.7979 28.3834 20.0149 28.4248 20.2803C28.4718 20.5818 28.4968 20.9853 28.4968 21.496V29.3002H33.3V26.627H31.3118V20.4368C31.3118 19.2321 31.0292 18.2782 30.4065 17.6369C29.8 17.0048 28.989 16.7002 28.0081 16.7002C26.716 16.7002 25.3794 17.2746 24.0032 18.3682C23.7546 17.8834 23.428 17.495 23.0181 17.2146C22.5086 16.8661 21.8937 16.7002 21.1901 16.7002C19.9813 16.7002 18.7728 17.159 17.5679 18.0419V16.8579H12.8296Z" fill="white"/>\n<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2276 31.8609L10.2253 31.8595C10.0365 31.7469 9.91711 31.5856 9.85578 31.3627C9.79095 31.1002 9.7536 30.6921 9.7536 30.1216V27.9591C9.7536 26.5647 9.58449 25.4413 9.22415 24.6131C8.92739 23.9249 8.43976 23.3859 7.77978 22.9896C8.30698 22.6596 8.71766 22.2693 8.99809 21.8119C9.35752 21.2367 9.5754 20.6056 9.64911 19.9222C9.71946 19.2698 9.7536 18.3156 9.7536 17.0672V16.0709C9.7536 15.331 9.8089 14.8376 9.9003 14.558C9.98937 14.3055 10.1323 14.1569 10.3356 14.0821L10.3411 14.08C10.584 13.9842 10.9639 13.9278 11.5003 13.9278H12V11.5H11.1823C10.1705 11.5 9.35848 11.668 8.77814 12.0389C8.19082 12.4142 7.79786 12.999 7.59575 13.7674L7.59501 13.7703C7.40722 14.5118 7.3182 15.5442 7.3182 16.8521V17.9617C7.3182 18.8197 7.27069 19.5083 7.17947 20.0333L7.17884 20.0372C7.09886 20.5329 6.91444 20.9266 6.63119 21.2328C6.3699 21.5152 5.93033 21.7038 5.25807 21.747L5 21.7636V24.2353L5.25705 24.2529C6.08818 24.3098 6.5907 24.6123 6.85541 25.0931L6.85674 25.0955C7.14987 25.6172 7.3182 26.5154 7.3182 27.8459V29.5328C7.3182 31.2544 7.57379 32.5482 8.14823 33.3345L8.14935 33.336C8.73836 34.1315 9.65143 34.5 10.8233 34.5H12V32.0609H11.3259C10.7771 32.0609 10.4248 31.9812 10.2276 31.8609Z" fill="white"/>\n<path fill-rule="evenodd" clip-rule="evenodd" d="M35.7724 31.8609L35.7747 31.8595C35.9635 31.7469 36.0829 31.5856 36.1442 31.3627C36.2091 31.1002 36.2464 30.6921 36.2464 30.1216V27.9591C36.2464 26.5647 36.4155 25.4413 36.7758 24.6131C37.0726 23.9249 37.5602 23.3859 38.2202 22.9896C37.693 22.6596 37.2823 22.2693 37.0019 21.8119C36.6425 21.2367 36.4246 20.6056 36.3509 19.9222C36.2805 19.2698 36.2464 18.3156 36.2464 17.0672V16.0709C36.2464 15.331 36.1911 14.8376 36.0997 14.558C36.0106 14.3055 35.8677 14.1569 35.6644 14.0821L35.6589 14.08C35.416 13.9842 35.0361 13.9278 34.4997 13.9278H34V11.5H34.8177C35.8295 11.5 36.6415 11.668 37.2219 12.0389C37.8092 12.4142 38.2021 12.999 38.4043 13.7674L38.405 13.7703C38.5928 14.5118 38.6818 15.5442 38.6818 16.8521V17.9617C38.6818 18.8197 38.7293 19.5083 38.8205 20.0333L38.8212 20.0372C38.9011 20.5329 39.0856 20.9266 39.3688 21.2328C39.6301 21.5152 40.0697 21.7038 40.7419 21.747L41 21.7636V24.2353L40.743 24.2529C39.9118 24.3098 39.4093 24.6123 39.1446 25.0931L39.1433 25.0955C38.8501 25.6172 38.6818 26.5154 38.6818 27.8459V29.5328C38.6818 31.2544 38.4262 32.5482 37.8518 33.3345L37.8507 33.336C37.2616 34.1315 36.3486 34.5 35.1767 34.5H34V32.0609H34.6741C35.2229 32.0609 35.5752 31.9812 35.7724 31.8609Z" fill="white"/>\n<path d="M104.964 17.322V19.8316H102.357V27.3064C102.357 28.0841 102.438 28.5906 102.601 28.8257C102.773 29.0518 103.063 29.1649 103.47 29.1649C103.968 29.1649 104.466 29.079 104.964 28.9071V31.4439C104.095 31.6971 103.393 31.8238 102.859 31.8238C101.682 31.8238 100.836 31.5298 100.32 30.942C99.8037 30.3451 99.5457 29.3277 99.5457 27.8897V19.8316H97.6853V17.322H99.5457V15.165L102.357 12.6011V17.322H104.964Z" fill="#172126"/>\n<path fill-rule="evenodd" clip-rule="evenodd" d="M83.7392 25.163H95.7027C95.6484 23.4808 95.2999 22.0248 94.6571 20.7948C94.0143 19.5558 93.1317 18.6062 92.0091 17.946C90.8956 17.2767 89.5874 16.9421 88.0846 16.9421C86.7086 16.9421 85.4502 17.2677 84.3095 17.9189C83.1688 18.561 82.268 19.4563 81.6072 20.6049C80.9554 21.7534 80.6295 23.0422 80.6295 24.4711C80.6295 25.9091 80.9599 27.2024 81.6208 28.3509C82.2907 29.4995 83.2231 30.3948 84.4181 31.0369C85.6131 31.6791 86.9801 32.0001 88.5192 32.0001C90.0039 32.0001 91.3754 31.6926 92.6338 31.0776C93.9012 30.4536 94.9242 29.5357 95.7027 28.3238L93.2312 27.2114C92.6881 28.0163 92.0136 28.6132 91.2079 29.0021C90.4022 29.391 89.5286 29.5854 88.5871 29.5854C87.3015 29.5854 86.2152 29.192 85.328 28.4052C84.4408 27.6093 83.9112 26.5286 83.7392 25.163ZM85.3551 20.3471C86.1518 19.6327 87.0797 19.2754 88.1389 19.2754C89.2524 19.2754 90.2347 19.6327 91.0857 20.3471C91.9367 21.0525 92.4934 21.9886 92.756 23.1552H83.8206C84.047 21.9886 84.5585 21.0525 85.3551 20.3471Z" fill="#172126"/>\n<path d="M56.5665 19.8316V29.0835H54V31.5796H61.8761V29.0835H59.3639V21.4731C61.0387 20.2431 62.3921 19.6281 63.4242 19.6281C64.0579 19.6281 64.5106 19.8271 64.7821 20.225C65.0628 20.623 65.2031 21.2786 65.2031 22.1921V31.5796H70.4312V29.0835H68.0141V21.4731C68.7745 20.8581 69.4988 20.3969 70.1868 20.0894C70.8748 19.7819 71.4769 19.6281 71.9929 19.6281C72.5723 19.6281 72.9932 19.7638 73.2558 20.0351C73.5274 20.3064 73.6948 20.6365 73.7582 21.0254C73.8216 21.4143 73.8533 21.9208 73.8533 22.5448V31.5796H79.1357V29.0835H76.6371V21.2696C76.6371 19.8678 76.2931 18.8278 75.605 18.1495C74.9261 17.4712 74.0117 17.132 72.862 17.132C71.2415 17.132 69.5169 17.8736 67.6882 19.3568C67.0726 17.8736 65.9409 17.132 64.2933 17.132C62.6818 17.132 61.0387 17.7968 59.3639 19.1262V17.322H54.163V19.8316H56.5665Z" fill="#172126"/>\n<path fill-rule="evenodd" clip-rule="evenodd" d="M119.046 29.0835V22.3549C119.046 20.4828 118.602 19.1126 117.715 18.2444C116.837 17.3762 115.443 16.9421 113.533 16.9421C112.111 16.9421 110.885 17.2225 109.853 17.7832C108.821 18.3349 108.001 19.1759 107.395 20.3064L110.083 20.9711C110.418 20.4104 110.839 19.9944 111.346 19.7231C111.862 19.4427 112.501 19.3026 113.261 19.3026C114.338 19.3026 115.112 19.5422 115.583 20.0215C116.054 20.5009 116.289 21.2967 116.289 22.4091V23.9421C115.085 23.1281 113.786 22.7211 112.392 22.7211C111.559 22.7211 110.731 22.9111 109.907 23.2909C109.083 23.6707 108.427 24.2134 107.938 24.9188C107.458 25.6152 107.218 26.411 107.218 27.3064C107.218 28.1384 107.435 28.8981 107.87 29.5854C108.314 30.2637 108.897 30.8063 109.622 31.2133C110.355 31.6203 111.161 31.8238 112.039 31.8238C113.705 31.8238 115.217 31.159 116.574 29.8296V31.5796H121.436V29.0835H119.046ZM116.289 27.944C115.085 29.0925 113.795 29.6668 112.419 29.6668C111.677 29.6668 111.07 29.4452 110.599 29.0021C110.129 28.5499 109.893 27.9846 109.893 27.3064C109.893 26.6009 110.16 26.0176 110.695 25.5564C111.238 25.0861 111.88 24.851 112.623 24.851C113.845 24.851 115.067 25.3258 116.289 26.2754V27.944Z" fill="#172126"/>\n<path d="M127.586 24.8095V15.3612H129.768V13.0483H122.512V15.3612H124.792V24.9326C124.792 27.27 125.335 29.017 126.422 30.1734C127.517 31.3217 129.151 31.8958 131.325 31.8958C133.482 31.8958 135.116 31.3176 136.227 30.1611C137.347 28.9965 137.906 27.307 137.906 25.0925V15.3612H140.211V13.0483H132.979V15.3612H135.136V24.8341C135.136 26.4991 134.81 27.7129 134.156 28.4757C133.51 29.2384 132.567 29.6198 131.325 29.6198C130.099 29.6198 129.168 29.2343 128.53 28.4634C127.901 27.6924 127.586 26.4745 127.586 24.8095Z" fill="#172126"/>\n<path d="M146.59 29.2754V15.3612H148.6V13.0483H141.798V15.3612H143.796V29.2754H141.798V31.5882H148.6V29.2754H146.59Z" fill="#172126"/>\n</svg>\n'},"m+9Q":function(e,n){e.exports="export const environment = {\n  production: true\n};\n"},n6bp:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.MarkdownModule=function(){return function(){}}()},p83q:function(e,n){e.exports='@import "../../../variables";\n\n:host {\n  display: block;\n  padding-bottom: 30px;\n}\n.mat-list-base {\n\n  .mat-list-item {\n    height: auto;\n\n    /deep/ .mat-list-item-content {\n      padding-left: 0;\n      padding-right: 0;\n    }\n\n    a {\n      display: block;\n      width: 100%;\n      padding: 0 16px;\n      line-height: 42px;\n      box-sizing: border-box;\n      font-size: 15px;\n      font-weight: 600;\n\n      &.active {\n        color: $color-blue;\n      }\n    }\n\n    /deep/ .mat-list-item-content {\n      flex-direction: column;\n    }\n  }\n}\n\n.sub-nav {\n  margin: 0;\n  padding: 0 0 10px 16px;\n  list-style: none;\n  border-bottom: 1px solid $border-color;\n\n  a {\n    display: block;\n    font-size: 14px;\n    padding: 6px 10px;\n    transition: color 250ms ease, background-color 250ms ease;\n\n    &:hover {\n      color: $color-blue;\n      background-color: $color-grey-04;\n    }\n\n    &.active {\n      color: $color-blue;\n    }\n  }\n}\n'},pgng:function(e,n){e.exports="import { async, ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { FooterComponent } from './footer.component';\n\ndescribe('FooterComponent', () => {\n  let component: FooterComponent;\n  let fixture: ComponentFixture<FooterComponent>;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [ FooterComponent ]\n    })\n    .compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(FooterComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"},prXV:function(e,n){e.exports='<svg focusable="false" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg>\n'},qHC2:function(e,n){e.exports="export const environment = {\n  production: true\n};\n"},vmX7:function(e,n){e.exports="import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router, RouterEvent } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MatSidenav } from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  tabletQuery: MediaQueryList;\n  mobileQuery: MediaQueryList;\n\n  @ViewChild('sidenav') private sidenav: MatSidenav;\n\n  readonly tabletQueryListener: () => void;\n  readonly mobileQueryListener: () => void;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher,\n  ) {\n    this.tabletQuery = media.matchMedia('(max-width: 1000px)');\n    this.mobileQuery = media.matchMedia('(max-width: 780px)');\n    this.tabletQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.tabletQuery.addListener(this.tabletQueryListener);\n    this.mobileQuery.addListener(this.mobileQueryListener);\n  }\n\n  ngOnInit(): void {\n    /* Dynamic title change and close nav  */\n    this.router.events.pipe(\n        filter((event: RouterEvent) => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map((route: ActivatedRoute) => {\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter((route: ActivatedRoute) => route.outlet === 'primary'),\n        mergeMap((route: ActivatedRoute) => route.data),\n      )\n      .subscribe((event: {title: string}) => {\n        this.titleService.setTitle(event.title);\n\n        if (this.tabletQuery.matches) {\n          this.sidenav.close();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.tabletQuery.removeListener(this.tabletQueryListener);\n    this.mobileQuery.removeListener(this.mobileQueryListener);\n  }\n}\n"},"vs+N":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("LoAr");var o=t("gNrm"),r=(t("BJNQ"),t("981U")),i=(t("3xi6"),t("YfSF"));n.MarkdownComponent=function(){function e(e,n,t,o){var a=this;this.element=e,this.headingsListService=n,this.router=t,this.anchorScrollService=o,this.router.events.pipe(i.filter(function(e){return e instanceof r.NavigationEnd})).subscribe(function(e){a.activeRoute=e.url.split("#")[0].replace("/",""),a.activeFragment=e.url.split("#")[1],a.activeFragment&&a.anchorScrollService.scrollToTarget(a.activeFragment)})}return Object.defineProperty(e.prototype,"mdFile",{get:function(){return this._mdFile},set:function(e){console.log(e),this._mdFile=t("2iOL")("./"+e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.setUpMarkedRenderer(),this.render()},e.prototype.ngAfterViewInit=function(){this.anchorScrollService.scrollToTarget(this.activeFragment)},e.prototype.render=function(){this.element.nativeElement.innerHTML=o.parse(this.mdFile),Prism.highlightAllUnder(this.element.nativeElement),this.headingsListService.getHeaders(this.element.nativeElement),this.addDefaultCodeStyling()},e.prototype.addDefaultCodeStyling=function(){this.element.nativeElement.querySelectorAll("pre").forEach(function(e){var n=e.classList.value.indexOf("language-")>0;e.classList.length||n||e.classList.add("language-default")})},e.prototype.setUpMarkedRenderer=function(){var e=this,n=new o.Renderer;n.link=function(n,t,o){return t=t||"",'<a href="'+(n=n.replace(/^(\/|\.\/|\.\.\/|#\/?)(.*)/,function(){for(var n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return"#"===n[1]?"#/"+e.activeRoute+n[0]:"#/"+n[2]}))+'" title="'+t+'">'+o+"</a>"},o.setOptions({renderer:n})},e}()},"w/TQ":function(e,n){e.exports="\0\0\x01\0\x02\0\x10\x10\0\0\0\0 \0h\x04\0\0&\0\0\0  \0\0\0\0 \0\ufffd\x10\0\0\ufffd\x04\0\0(\0\0\0\x10\0\0\0 \0\0\0\x01\0 \0\0\0\0\0@\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffdU61\ufffd\ufffd0-\ufffd\ufffd2.\ufffd;\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd971\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1-\ufffd\ufffd3/\ufffd#\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd!71\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1-\ufffd\ufffd3/\ufffd\x0f\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffdU71\ufffd\ufffdOI\ufffd\ufffdVQ\ufffd\ufffd82\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffdUR\ufffd\ufffdKH\ufffd\ufffd0-\ufffd\ufffd2.\ufffd=\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdmh\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd[X\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd1.\ufffd{\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd71\ufffd\ufffdC=\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd85\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1-\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdQL\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?<\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd;5\ufffd\ufffd:7\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\x0171\ufffd#71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdd_\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}y\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdIG\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd4/\ufffd\x0f71\ufffdM71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3/\ufffdA71\ufffdk71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdzv\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdVS\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffde71\ufffd}71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd93\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd{71\ufffdA71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffddb\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1-\ufffd\ufffd0-\ufffdE\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd)71\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd=7\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1-\ufffd\ufffd3/\ufffd/\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffdA71\ufffd61\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3.\ufffd9\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd\0\0\ufffd\ufffd(\0\0\0 \0\0\0@\0\0\0\x01\0 \0\0\0\0\0\ufffd\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd61\ufffd\ufffd2.\ufffd\ufffd3/\ufffd?\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd_71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd3/\ufffd\x1f\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd;71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3.\u016d4/\ufffd\v\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\x1d71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd3/\u01c9\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\t71\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd3/\ufffd_\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd3/\ufffd;\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffdY71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd3/\ufffd\x1d\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdXS\ufffd\ufffdwr\ufffd\ufffdvr\ufffd\ufffdvr\ufffd\ufffd<7\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffdwu\ufffd\ufffd~|\ufffd\ufffd~|\ufffd\ufffdNK\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdUP\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd{w\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffdYW\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdDB\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\x1b71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffdO71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdhc\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdSN\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffdB?\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdPM\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd50\ufffd\x03\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd}71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3/\ufffd3\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd~{\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd][\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3/\ufffdi\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd;5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3/\u01d7\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdmk\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\u017d\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdD>\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdie\ufffd\ufffdie\ufffd\ufffddb\ufffd\ufffddb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd1.\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd|z\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdRL\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJD\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffdXU\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd52\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd+71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd50\ufffd\x05\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd]71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdea\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd:4\ufffd\ufffdQO\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd:7\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd4/\ufffd5\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdwr\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3/\ufffdk\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdzv\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC@\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd3/\u01d7\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd:4\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\u017d\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdMK\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdB<\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd[Y\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdOJ\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\x0571\ufffdy71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdjg\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd3/\u01934/\ufffd\x15\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd\x1371\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffdPK\ufffd\ufffd1.\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd2.\ufffd\ufffd3/\u01db3/\ufffd\x1d\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffd)71\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd3/\u01a54/\ufffd'\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffdC71\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd71\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd0-\ufffd\ufffd1.\ufffd\ufffd3.\u016f3/\ufffd1\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x0171\ufffda71\ufffd\ufffd61\ufffd\ufffd1.\ufffd\ufffd2.\u01773/\ufffd=\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\ufffd\ufffd\ufffd\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"}}]);